                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.8.0 #5117 (Mar 23 2008) (MINGW32)
                              4 ; This file was generated Sun Jan 30 19:17:29 2011
                              5 ;--------------------------------------------------------
                              6 	.module swtimers
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _P7_7
                             13 	.globl _P7_6
                             14 	.globl _P7_5
                             15 	.globl _P7_4
                             16 	.globl _P7_3
                             17 	.globl _P7_2
                             18 	.globl _P7_1
                             19 	.globl _P7_0
                             20 	.globl _SPIF
                             21 	.globl _WCOL
                             22 	.globl _MODF
                             23 	.globl _RXOVRN
                             24 	.globl _NSSMD1
                             25 	.globl _NSSMD0
                             26 	.globl _TXBMT
                             27 	.globl _SPIEN
                             28 	.globl _P6_7
                             29 	.globl _P6_6
                             30 	.globl _P6_5
                             31 	.globl _P6_4
                             32 	.globl _P6_3
                             33 	.globl _P6_2
                             34 	.globl _P6_1
                             35 	.globl _P6_0
                             36 	.globl _AD2EN
                             37 	.globl _AD2TM
                             38 	.globl _AD2INT
                             39 	.globl _AD2BUSY
                             40 	.globl _AD2CM2
                             41 	.globl _AD2CM1
                             42 	.globl _AD2CM0
                             43 	.globl _AD2WINT
                             44 	.globl _AD0EN
                             45 	.globl _AD0TM
                             46 	.globl _AD0INT
                             47 	.globl _AD0BUSY
                             48 	.globl _AD0CM1
                             49 	.globl _AD0CM0
                             50 	.globl _AD0WINT
                             51 	.globl _AD0LJST
                             52 	.globl _P5_7
                             53 	.globl _P5_6
                             54 	.globl _P5_5
                             55 	.globl _P5_4
                             56 	.globl _P5_3
                             57 	.globl _P5_2
                             58 	.globl _P5_1
                             59 	.globl _P5_0
                             60 	.globl _CF
                             61 	.globl _CR
                             62 	.globl _CCF5
                             63 	.globl _CCF4
                             64 	.globl _CCF3
                             65 	.globl _CCF2
                             66 	.globl _CCF1
                             67 	.globl _CCF0
                             68 	.globl _CY
                             69 	.globl _AC
                             70 	.globl _F0
                             71 	.globl _RS1
                             72 	.globl _RS0
                             73 	.globl _OV
                             74 	.globl _F1
                             75 	.globl _P
                             76 	.globl _P4_7
                             77 	.globl _P4_6
                             78 	.globl _P4_5
                             79 	.globl _P4_4
                             80 	.globl _P4_3
                             81 	.globl _P4_2
                             82 	.globl _P4_1
                             83 	.globl _P4_0
                             84 	.globl _TF4
                             85 	.globl _EXF4
                             86 	.globl _EXEN4
                             87 	.globl _TR4
                             88 	.globl _CT4
                             89 	.globl _CPRL4
                             90 	.globl _TF3
                             91 	.globl _EXF3
                             92 	.globl _EXEN3
                             93 	.globl _TR3
                             94 	.globl _CT3
                             95 	.globl _CPRL3
                             96 	.globl _TF2
                             97 	.globl _EXF2
                             98 	.globl _EXEN2
                             99 	.globl _TR2
                            100 	.globl _CT2
                            101 	.globl _CPRL2
                            102 	.globl _MAC0HO
                            103 	.globl _MAC0Z
                            104 	.globl _MAC0SO
                            105 	.globl _MAC0N
                            106 	.globl _BUSY
                            107 	.globl _ENSMB
                            108 	.globl _STA
                            109 	.globl _STO
                            110 	.globl _SI
                            111 	.globl _AA
                            112 	.globl _SMBFTE
                            113 	.globl _SMBTOE
                            114 	.globl _PT2
                            115 	.globl _PS
                            116 	.globl _PS0
                            117 	.globl _PT1
                            118 	.globl _PX1
                            119 	.globl _PT0
                            120 	.globl _PX0
                            121 	.globl _P3_7
                            122 	.globl _P3_6
                            123 	.globl _P3_5
                            124 	.globl _P3_4
                            125 	.globl _P3_3
                            126 	.globl _P3_2
                            127 	.globl _P3_1
                            128 	.globl _P3_0
                            129 	.globl _EA
                            130 	.globl _ET2
                            131 	.globl _ES
                            132 	.globl _ES0
                            133 	.globl _ET1
                            134 	.globl _EX1
                            135 	.globl _ET0
                            136 	.globl _EX0
                            137 	.globl _P2_7
                            138 	.globl _P2_6
                            139 	.globl _P2_5
                            140 	.globl _P2_4
                            141 	.globl _P2_3
                            142 	.globl _P2_2
                            143 	.globl _P2_1
                            144 	.globl _P2_0
                            145 	.globl _S1MODE
                            146 	.globl _MCE1
                            147 	.globl _REN1
                            148 	.globl _TB81
                            149 	.globl _RB81
                            150 	.globl _TI1
                            151 	.globl _RI1
                            152 	.globl _SM00
                            153 	.globl _SM10
                            154 	.globl _SM20
                            155 	.globl _REN
                            156 	.globl _REN0
                            157 	.globl _TB80
                            158 	.globl _RB80
                            159 	.globl _TI
                            160 	.globl _TI0
                            161 	.globl _RI
                            162 	.globl _RI0
                            163 	.globl _P1_7
                            164 	.globl _P1_6
                            165 	.globl _P1_5
                            166 	.globl _P1_4
                            167 	.globl _P1_3
                            168 	.globl _P1_2
                            169 	.globl _P1_1
                            170 	.globl _P1_0
                            171 	.globl _FLHBUSY
                            172 	.globl _CP1EN
                            173 	.globl _CP1OUT
                            174 	.globl _CP1RIF
                            175 	.globl _CP1FIF
                            176 	.globl _CP1HYP1
                            177 	.globl _CP1HYP0
                            178 	.globl _CP1HYN1
                            179 	.globl _CP1HYN0
                            180 	.globl _CP0EN
                            181 	.globl _CP0OUT
                            182 	.globl _CP0RIF
                            183 	.globl _CP0FIF
                            184 	.globl _CP0HYP1
                            185 	.globl _CP0HYP0
                            186 	.globl _CP0HYN1
                            187 	.globl _CP0HYN0
                            188 	.globl _TF1
                            189 	.globl _TR1
                            190 	.globl _TF0
                            191 	.globl _TR0
                            192 	.globl _IE1
                            193 	.globl _IT1
                            194 	.globl _IE0
                            195 	.globl _IT0
                            196 	.globl _P0_7
                            197 	.globl _P0_6
                            198 	.globl _P0_5
                            199 	.globl _P0_4
                            200 	.globl _P0_3
                            201 	.globl _P0_2
                            202 	.globl _P0_1
                            203 	.globl _P0_0
                            204 	.globl _MAC0RND
                            205 	.globl _MAC0ACC
                            206 	.globl _MAC0A
                            207 	.globl _RCAP4
                            208 	.globl _TMR4
                            209 	.globl _DAC1
                            210 	.globl _RCAP3
                            211 	.globl _TMR3
                            212 	.globl _PCA0CP5
                            213 	.globl _PCA0CP4
                            214 	.globl _PCA0CP3
                            215 	.globl _PCA0CP2
                            216 	.globl _PCA0CP1
                            217 	.globl _PCA0CP0
                            218 	.globl _PCA0
                            219 	.globl _DAC0
                            220 	.globl _ADC0LT
                            221 	.globl _ADC0GT
                            222 	.globl _ADC0
                            223 	.globl _RCAP2
                            224 	.globl _TMR2
                            225 	.globl _TMR1
                            226 	.globl _TMR0
                            227 	.globl _P7
                            228 	.globl _P6
                            229 	.globl _XBR2
                            230 	.globl _XBR1
                            231 	.globl _XBR0
                            232 	.globl _P5
                            233 	.globl _P4
                            234 	.globl _FLACL
                            235 	.globl _P1MDIN
                            236 	.globl _P3MDOUT
                            237 	.globl _P2MDOUT
                            238 	.globl _P1MDOUT
                            239 	.globl _P0MDOUT
                            240 	.globl _CCH0LC
                            241 	.globl _CCH0TN
                            242 	.globl _CCH0CN
                            243 	.globl _P7MDOUT
                            244 	.globl _P6MDOUT
                            245 	.globl _P5MDOUT
                            246 	.globl _P4MDOUT
                            247 	.globl _CCH0MA
                            248 	.globl _CLKSEL
                            249 	.globl _SFRPGCN
                            250 	.globl _PLL0FLT
                            251 	.globl _PLL0MUL
                            252 	.globl _PLL0DIV
                            253 	.globl _OSCXCN
                            254 	.globl _OSCICL
                            255 	.globl _OSCICN
                            256 	.globl _PLL0CN
                            257 	.globl _FLSTAT
                            258 	.globl _MAC0RNDH
                            259 	.globl _MAC0RNDL
                            260 	.globl _MAC0CF
                            261 	.globl _MAC0AH
                            262 	.globl _MAC0AL
                            263 	.globl _MAC0STA
                            264 	.globl _MAC0OVR
                            265 	.globl _MAC0ACC3
                            266 	.globl _MAC0ACC2
                            267 	.globl _MAC0ACC1
                            268 	.globl _MAC0ACC0
                            269 	.globl _MAC0BH
                            270 	.globl _MAC0BL
                            271 	.globl _ADC2CN
                            272 	.globl _TMR4H
                            273 	.globl _TMR4L
                            274 	.globl _RCAP4H
                            275 	.globl _RCAP4L
                            276 	.globl _TMR4CF
                            277 	.globl _TMR4CN
                            278 	.globl _ADC2LT
                            279 	.globl _ADC2GT
                            280 	.globl _ADC2
                            281 	.globl _ADC2CF
                            282 	.globl _AMX2SL
                            283 	.globl _AMX2CF
                            284 	.globl _CPT1MD
                            285 	.globl _CPT1CN
                            286 	.globl _DAC1CN
                            287 	.globl _DAC1H
                            288 	.globl _DAC1L
                            289 	.globl _TMR3H
                            290 	.globl _TMR3L
                            291 	.globl _RCAP3H
                            292 	.globl _RCAP3L
                            293 	.globl _TMR3CF
                            294 	.globl _TMR3CN
                            295 	.globl _SBUF1
                            296 	.globl _SCON1
                            297 	.globl _CPT0MD
                            298 	.globl _CPT0CN
                            299 	.globl _PCA0CPH1
                            300 	.globl _PCA0CPL1
                            301 	.globl _PCA0CPH0
                            302 	.globl _PCA0CPL0
                            303 	.globl _PCA0H
                            304 	.globl _PCA0L
                            305 	.globl _SPI0CN
                            306 	.globl _RSTSRC
                            307 	.globl _PCA0CPH4
                            308 	.globl _PCA0CPL4
                            309 	.globl _PCA0CPH3
                            310 	.globl _PCA0CPL3
                            311 	.globl _PCA0CPH2
                            312 	.globl _PCA0CPL2
                            313 	.globl _ADC0CN
                            314 	.globl _PCA0CPH5
                            315 	.globl _PCA0CPL5
                            316 	.globl _PCA0CPM5
                            317 	.globl _PCA0CPM4
                            318 	.globl _PCA0CPM3
                            319 	.globl _PCA0CPM2
                            320 	.globl _PCA0CPM1
                            321 	.globl _PCA0CPM0
                            322 	.globl _PCA0MD
                            323 	.globl _PCA0CN
                            324 	.globl _DAC0CN
                            325 	.globl _DAC0H
                            326 	.globl _DAC0L
                            327 	.globl _REF0CN
                            328 	.globl _SMB0CR
                            329 	.globl _TH2
                            330 	.globl _TMR2H
                            331 	.globl _TL2
                            332 	.globl _TMR2L
                            333 	.globl _RCAP2H
                            334 	.globl _RCAP2L
                            335 	.globl _TMR2CF
                            336 	.globl _TMR2CN
                            337 	.globl _ADC0LTH
                            338 	.globl _ADC0LTL
                            339 	.globl _ADC0GTH
                            340 	.globl _ADC0GTL
                            341 	.globl _SMB0ADR
                            342 	.globl _SMB0DAT
                            343 	.globl _SMB0STA
                            344 	.globl _SMB0CN
                            345 	.globl _ADC0H
                            346 	.globl _ADC0L
                            347 	.globl _ADC0CF
                            348 	.globl _AMX0SL
                            349 	.globl _AMX0CF
                            350 	.globl _SADEN0
                            351 	.globl _FLSCL
                            352 	.globl _SADDR0
                            353 	.globl _EMI0CF
                            354 	.globl __XPAGE
                            355 	.globl _EMI0CN
                            356 	.globl _EMI0TC
                            357 	.globl _SPI0CKR
                            358 	.globl _SPI0DAT
                            359 	.globl _SPI0CFG
                            360 	.globl _SBUF
                            361 	.globl _SBUF0
                            362 	.globl _SCON
                            363 	.globl _SCON0
                            364 	.globl _SSTA0
                            365 	.globl _PSCTL
                            366 	.globl _CKCON
                            367 	.globl _TH1
                            368 	.globl _TH0
                            369 	.globl _TL1
                            370 	.globl _TL0
                            371 	.globl _TMOD
                            372 	.globl _TCON
                            373 	.globl _WDTCN
                            374 	.globl _EIP2
                            375 	.globl _EIP1
                            376 	.globl _B
                            377 	.globl _EIE2
                            378 	.globl _EIE1
                            379 	.globl _ACC
                            380 	.globl _PSW
                            381 	.globl _IP
                            382 	.globl _PSBANK
                            383 	.globl _P3
                            384 	.globl _IE
                            385 	.globl _P2
                            386 	.globl _P1
                            387 	.globl _PCON
                            388 	.globl _SFRLAST
                            389 	.globl _SFRNEXT
                            390 	.globl _SFRPAGE
                            391 	.globl _DPH
                            392 	.globl _DPL
                            393 	.globl _SP
                            394 	.globl _P0
                            395 	.globl _set_timer_cnt_PARM_2
                            396 	.globl _set_timer_PARM_3
                            397 	.globl _set_timer_PARM_2
                            398 	.globl _kicker
                            399 	.globl _timer_cbs
                            400 	.globl _timer_table
                            401 	.globl _swtimer
                            402 	.globl _callback_kicker
                            403 	.globl _init_swtimers
                            404 	.globl _alloc_timer
                            405 	.globl _free_timer
                            406 	.globl _set_timer
                            407 	.globl _set_timer_cnt
                            408 	.globl _get_timer
                            409 	.globl _get_timer_status
                            410 	.globl _stop_timer
                            411 	.globl _start_timer
                            412 	.globl _handle_kicker
                            413 ;--------------------------------------------------------
                            414 ; special function registers
                            415 ;--------------------------------------------------------
                            416 	.area RSEG    (DATA)
                    0080    417 G$P0$0$0 == 0x0080
                    0080    418 _P0	=	0x0080
                    0081    419 G$SP$0$0 == 0x0081
                    0081    420 _SP	=	0x0081
                    0082    421 G$DPL$0$0 == 0x0082
                    0082    422 _DPL	=	0x0082
                    0083    423 G$DPH$0$0 == 0x0083
                    0083    424 _DPH	=	0x0083
                    0084    425 G$SFRPAGE$0$0 == 0x0084
                    0084    426 _SFRPAGE	=	0x0084
                    0085    427 G$SFRNEXT$0$0 == 0x0085
                    0085    428 _SFRNEXT	=	0x0085
                    0086    429 G$SFRLAST$0$0 == 0x0086
                    0086    430 _SFRLAST	=	0x0086
                    0087    431 G$PCON$0$0 == 0x0087
                    0087    432 _PCON	=	0x0087
                    0090    433 G$P1$0$0 == 0x0090
                    0090    434 _P1	=	0x0090
                    00A0    435 G$P2$0$0 == 0x00a0
                    00A0    436 _P2	=	0x00a0
                    00A8    437 G$IE$0$0 == 0x00a8
                    00A8    438 _IE	=	0x00a8
                    00B0    439 G$P3$0$0 == 0x00b0
                    00B0    440 _P3	=	0x00b0
                    00B1    441 G$PSBANK$0$0 == 0x00b1
                    00B1    442 _PSBANK	=	0x00b1
                    00B8    443 G$IP$0$0 == 0x00b8
                    00B8    444 _IP	=	0x00b8
                    00D0    445 G$PSW$0$0 == 0x00d0
                    00D0    446 _PSW	=	0x00d0
                    00E0    447 G$ACC$0$0 == 0x00e0
                    00E0    448 _ACC	=	0x00e0
                    00E6    449 G$EIE1$0$0 == 0x00e6
                    00E6    450 _EIE1	=	0x00e6
                    00E7    451 G$EIE2$0$0 == 0x00e7
                    00E7    452 _EIE2	=	0x00e7
                    00F0    453 G$B$0$0 == 0x00f0
                    00F0    454 _B	=	0x00f0
                    00F6    455 G$EIP1$0$0 == 0x00f6
                    00F6    456 _EIP1	=	0x00f6
                    00F7    457 G$EIP2$0$0 == 0x00f7
                    00F7    458 _EIP2	=	0x00f7
                    00FF    459 G$WDTCN$0$0 == 0x00ff
                    00FF    460 _WDTCN	=	0x00ff
                    0088    461 G$TCON$0$0 == 0x0088
                    0088    462 _TCON	=	0x0088
                    0089    463 G$TMOD$0$0 == 0x0089
                    0089    464 _TMOD	=	0x0089
                    008A    465 G$TL0$0$0 == 0x008a
                    008A    466 _TL0	=	0x008a
                    008B    467 G$TL1$0$0 == 0x008b
                    008B    468 _TL1	=	0x008b
                    008C    469 G$TH0$0$0 == 0x008c
                    008C    470 _TH0	=	0x008c
                    008D    471 G$TH1$0$0 == 0x008d
                    008D    472 _TH1	=	0x008d
                    008E    473 G$CKCON$0$0 == 0x008e
                    008E    474 _CKCON	=	0x008e
                    008F    475 G$PSCTL$0$0 == 0x008f
                    008F    476 _PSCTL	=	0x008f
                    0091    477 G$SSTA0$0$0 == 0x0091
                    0091    478 _SSTA0	=	0x0091
                    0098    479 G$SCON0$0$0 == 0x0098
                    0098    480 _SCON0	=	0x0098
                    0098    481 G$SCON$0$0 == 0x0098
                    0098    482 _SCON	=	0x0098
                    0099    483 G$SBUF0$0$0 == 0x0099
                    0099    484 _SBUF0	=	0x0099
                    0099    485 G$SBUF$0$0 == 0x0099
                    0099    486 _SBUF	=	0x0099
                    009A    487 G$SPI0CFG$0$0 == 0x009a
                    009A    488 _SPI0CFG	=	0x009a
                    009B    489 G$SPI0DAT$0$0 == 0x009b
                    009B    490 _SPI0DAT	=	0x009b
                    009D    491 G$SPI0CKR$0$0 == 0x009d
                    009D    492 _SPI0CKR	=	0x009d
                    00A1    493 G$EMI0TC$0$0 == 0x00a1
                    00A1    494 _EMI0TC	=	0x00a1
                    00A2    495 G$EMI0CN$0$0 == 0x00a2
                    00A2    496 _EMI0CN	=	0x00a2
                    00A2    497 G$_XPAGE$0$0 == 0x00a2
                    00A2    498 __XPAGE	=	0x00a2
                    00A3    499 G$EMI0CF$0$0 == 0x00a3
                    00A3    500 _EMI0CF	=	0x00a3
                    00A9    501 G$SADDR0$0$0 == 0x00a9
                    00A9    502 _SADDR0	=	0x00a9
                    00B7    503 G$FLSCL$0$0 == 0x00b7
                    00B7    504 _FLSCL	=	0x00b7
                    00B9    505 G$SADEN0$0$0 == 0x00b9
                    00B9    506 _SADEN0	=	0x00b9
                    00BA    507 G$AMX0CF$0$0 == 0x00ba
                    00BA    508 _AMX0CF	=	0x00ba
                    00BB    509 G$AMX0SL$0$0 == 0x00bb
                    00BB    510 _AMX0SL	=	0x00bb
                    00BC    511 G$ADC0CF$0$0 == 0x00bc
                    00BC    512 _ADC0CF	=	0x00bc
                    00BE    513 G$ADC0L$0$0 == 0x00be
                    00BE    514 _ADC0L	=	0x00be
                    00BF    515 G$ADC0H$0$0 == 0x00bf
                    00BF    516 _ADC0H	=	0x00bf
                    00C0    517 G$SMB0CN$0$0 == 0x00c0
                    00C0    518 _SMB0CN	=	0x00c0
                    00C1    519 G$SMB0STA$0$0 == 0x00c1
                    00C1    520 _SMB0STA	=	0x00c1
                    00C2    521 G$SMB0DAT$0$0 == 0x00c2
                    00C2    522 _SMB0DAT	=	0x00c2
                    00C3    523 G$SMB0ADR$0$0 == 0x00c3
                    00C3    524 _SMB0ADR	=	0x00c3
                    00C4    525 G$ADC0GTL$0$0 == 0x00c4
                    00C4    526 _ADC0GTL	=	0x00c4
                    00C5    527 G$ADC0GTH$0$0 == 0x00c5
                    00C5    528 _ADC0GTH	=	0x00c5
                    00C6    529 G$ADC0LTL$0$0 == 0x00c6
                    00C6    530 _ADC0LTL	=	0x00c6
                    00C7    531 G$ADC0LTH$0$0 == 0x00c7
                    00C7    532 _ADC0LTH	=	0x00c7
                    00C8    533 G$TMR2CN$0$0 == 0x00c8
                    00C8    534 _TMR2CN	=	0x00c8
                    00C9    535 G$TMR2CF$0$0 == 0x00c9
                    00C9    536 _TMR2CF	=	0x00c9
                    00CA    537 G$RCAP2L$0$0 == 0x00ca
                    00CA    538 _RCAP2L	=	0x00ca
                    00CB    539 G$RCAP2H$0$0 == 0x00cb
                    00CB    540 _RCAP2H	=	0x00cb
                    00CC    541 G$TMR2L$0$0 == 0x00cc
                    00CC    542 _TMR2L	=	0x00cc
                    00CC    543 G$TL2$0$0 == 0x00cc
                    00CC    544 _TL2	=	0x00cc
                    00CD    545 G$TMR2H$0$0 == 0x00cd
                    00CD    546 _TMR2H	=	0x00cd
                    00CD    547 G$TH2$0$0 == 0x00cd
                    00CD    548 _TH2	=	0x00cd
                    00CF    549 G$SMB0CR$0$0 == 0x00cf
                    00CF    550 _SMB0CR	=	0x00cf
                    00D1    551 G$REF0CN$0$0 == 0x00d1
                    00D1    552 _REF0CN	=	0x00d1
                    00D2    553 G$DAC0L$0$0 == 0x00d2
                    00D2    554 _DAC0L	=	0x00d2
                    00D3    555 G$DAC0H$0$0 == 0x00d3
                    00D3    556 _DAC0H	=	0x00d3
                    00D4    557 G$DAC0CN$0$0 == 0x00d4
                    00D4    558 _DAC0CN	=	0x00d4
                    00D8    559 G$PCA0CN$0$0 == 0x00d8
                    00D8    560 _PCA0CN	=	0x00d8
                    00D9    561 G$PCA0MD$0$0 == 0x00d9
                    00D9    562 _PCA0MD	=	0x00d9
                    00DA    563 G$PCA0CPM0$0$0 == 0x00da
                    00DA    564 _PCA0CPM0	=	0x00da
                    00DB    565 G$PCA0CPM1$0$0 == 0x00db
                    00DB    566 _PCA0CPM1	=	0x00db
                    00DC    567 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    568 _PCA0CPM2	=	0x00dc
                    00DD    569 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    570 _PCA0CPM3	=	0x00dd
                    00DE    571 G$PCA0CPM4$0$0 == 0x00de
                    00DE    572 _PCA0CPM4	=	0x00de
                    00DF    573 G$PCA0CPM5$0$0 == 0x00df
                    00DF    574 _PCA0CPM5	=	0x00df
                    00E1    575 G$PCA0CPL5$0$0 == 0x00e1
                    00E1    576 _PCA0CPL5	=	0x00e1
                    00E2    577 G$PCA0CPH5$0$0 == 0x00e2
                    00E2    578 _PCA0CPH5	=	0x00e2
                    00E8    579 G$ADC0CN$0$0 == 0x00e8
                    00E8    580 _ADC0CN	=	0x00e8
                    00E9    581 G$PCA0CPL2$0$0 == 0x00e9
                    00E9    582 _PCA0CPL2	=	0x00e9
                    00EA    583 G$PCA0CPH2$0$0 == 0x00ea
                    00EA    584 _PCA0CPH2	=	0x00ea
                    00EB    585 G$PCA0CPL3$0$0 == 0x00eb
                    00EB    586 _PCA0CPL3	=	0x00eb
                    00EC    587 G$PCA0CPH3$0$0 == 0x00ec
                    00EC    588 _PCA0CPH3	=	0x00ec
                    00ED    589 G$PCA0CPL4$0$0 == 0x00ed
                    00ED    590 _PCA0CPL4	=	0x00ed
                    00EE    591 G$PCA0CPH4$0$0 == 0x00ee
                    00EE    592 _PCA0CPH4	=	0x00ee
                    00EF    593 G$RSTSRC$0$0 == 0x00ef
                    00EF    594 _RSTSRC	=	0x00ef
                    00F8    595 G$SPI0CN$0$0 == 0x00f8
                    00F8    596 _SPI0CN	=	0x00f8
                    00F9    597 G$PCA0L$0$0 == 0x00f9
                    00F9    598 _PCA0L	=	0x00f9
                    00FA    599 G$PCA0H$0$0 == 0x00fa
                    00FA    600 _PCA0H	=	0x00fa
                    00FB    601 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    602 _PCA0CPL0	=	0x00fb
                    00FC    603 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    604 _PCA0CPH0	=	0x00fc
                    00FD    605 G$PCA0CPL1$0$0 == 0x00fd
                    00FD    606 _PCA0CPL1	=	0x00fd
                    00FE    607 G$PCA0CPH1$0$0 == 0x00fe
                    00FE    608 _PCA0CPH1	=	0x00fe
                    0088    609 G$CPT0CN$0$0 == 0x0088
                    0088    610 _CPT0CN	=	0x0088
                    0089    611 G$CPT0MD$0$0 == 0x0089
                    0089    612 _CPT0MD	=	0x0089
                    0098    613 G$SCON1$0$0 == 0x0098
                    0098    614 _SCON1	=	0x0098
                    0099    615 G$SBUF1$0$0 == 0x0099
                    0099    616 _SBUF1	=	0x0099
                    00C8    617 G$TMR3CN$0$0 == 0x00c8
                    00C8    618 _TMR3CN	=	0x00c8
                    00C9    619 G$TMR3CF$0$0 == 0x00c9
                    00C9    620 _TMR3CF	=	0x00c9
                    00CA    621 G$RCAP3L$0$0 == 0x00ca
                    00CA    622 _RCAP3L	=	0x00ca
                    00CB    623 G$RCAP3H$0$0 == 0x00cb
                    00CB    624 _RCAP3H	=	0x00cb
                    00CC    625 G$TMR3L$0$0 == 0x00cc
                    00CC    626 _TMR3L	=	0x00cc
                    00CD    627 G$TMR3H$0$0 == 0x00cd
                    00CD    628 _TMR3H	=	0x00cd
                    00D2    629 G$DAC1L$0$0 == 0x00d2
                    00D2    630 _DAC1L	=	0x00d2
                    00D3    631 G$DAC1H$0$0 == 0x00d3
                    00D3    632 _DAC1H	=	0x00d3
                    00D4    633 G$DAC1CN$0$0 == 0x00d4
                    00D4    634 _DAC1CN	=	0x00d4
                    0088    635 G$CPT1CN$0$0 == 0x0088
                    0088    636 _CPT1CN	=	0x0088
                    0089    637 G$CPT1MD$0$0 == 0x0089
                    0089    638 _CPT1MD	=	0x0089
                    00BA    639 G$AMX2CF$0$0 == 0x00ba
                    00BA    640 _AMX2CF	=	0x00ba
                    00BB    641 G$AMX2SL$0$0 == 0x00bb
                    00BB    642 _AMX2SL	=	0x00bb
                    00BC    643 G$ADC2CF$0$0 == 0x00bc
                    00BC    644 _ADC2CF	=	0x00bc
                    00BE    645 G$ADC2$0$0 == 0x00be
                    00BE    646 _ADC2	=	0x00be
                    00C4    647 G$ADC2GT$0$0 == 0x00c4
                    00C4    648 _ADC2GT	=	0x00c4
                    00C6    649 G$ADC2LT$0$0 == 0x00c6
                    00C6    650 _ADC2LT	=	0x00c6
                    00C8    651 G$TMR4CN$0$0 == 0x00c8
                    00C8    652 _TMR4CN	=	0x00c8
                    00C9    653 G$TMR4CF$0$0 == 0x00c9
                    00C9    654 _TMR4CF	=	0x00c9
                    00CA    655 G$RCAP4L$0$0 == 0x00ca
                    00CA    656 _RCAP4L	=	0x00ca
                    00CB    657 G$RCAP4H$0$0 == 0x00cb
                    00CB    658 _RCAP4H	=	0x00cb
                    00CC    659 G$TMR4L$0$0 == 0x00cc
                    00CC    660 _TMR4L	=	0x00cc
                    00CD    661 G$TMR4H$0$0 == 0x00cd
                    00CD    662 _TMR4H	=	0x00cd
                    00E8    663 G$ADC2CN$0$0 == 0x00e8
                    00E8    664 _ADC2CN	=	0x00e8
                    0091    665 G$MAC0BL$0$0 == 0x0091
                    0091    666 _MAC0BL	=	0x0091
                    0092    667 G$MAC0BH$0$0 == 0x0092
                    0092    668 _MAC0BH	=	0x0092
                    0093    669 G$MAC0ACC0$0$0 == 0x0093
                    0093    670 _MAC0ACC0	=	0x0093
                    0094    671 G$MAC0ACC1$0$0 == 0x0094
                    0094    672 _MAC0ACC1	=	0x0094
                    0095    673 G$MAC0ACC2$0$0 == 0x0095
                    0095    674 _MAC0ACC2	=	0x0095
                    0096    675 G$MAC0ACC3$0$0 == 0x0096
                    0096    676 _MAC0ACC3	=	0x0096
                    0097    677 G$MAC0OVR$0$0 == 0x0097
                    0097    678 _MAC0OVR	=	0x0097
                    00C0    679 G$MAC0STA$0$0 == 0x00c0
                    00C0    680 _MAC0STA	=	0x00c0
                    00C1    681 G$MAC0AL$0$0 == 0x00c1
                    00C1    682 _MAC0AL	=	0x00c1
                    00C2    683 G$MAC0AH$0$0 == 0x00c2
                    00C2    684 _MAC0AH	=	0x00c2
                    00C3    685 G$MAC0CF$0$0 == 0x00c3
                    00C3    686 _MAC0CF	=	0x00c3
                    00CE    687 G$MAC0RNDL$0$0 == 0x00ce
                    00CE    688 _MAC0RNDL	=	0x00ce
                    00CF    689 G$MAC0RNDH$0$0 == 0x00cf
                    00CF    690 _MAC0RNDH	=	0x00cf
                    0088    691 G$FLSTAT$0$0 == 0x0088
                    0088    692 _FLSTAT	=	0x0088
                    0089    693 G$PLL0CN$0$0 == 0x0089
                    0089    694 _PLL0CN	=	0x0089
                    008A    695 G$OSCICN$0$0 == 0x008a
                    008A    696 _OSCICN	=	0x008a
                    008B    697 G$OSCICL$0$0 == 0x008b
                    008B    698 _OSCICL	=	0x008b
                    008C    699 G$OSCXCN$0$0 == 0x008c
                    008C    700 _OSCXCN	=	0x008c
                    008D    701 G$PLL0DIV$0$0 == 0x008d
                    008D    702 _PLL0DIV	=	0x008d
                    008E    703 G$PLL0MUL$0$0 == 0x008e
                    008E    704 _PLL0MUL	=	0x008e
                    008F    705 G$PLL0FLT$0$0 == 0x008f
                    008F    706 _PLL0FLT	=	0x008f
                    0096    707 G$SFRPGCN$0$0 == 0x0096
                    0096    708 _SFRPGCN	=	0x0096
                    0097    709 G$CLKSEL$0$0 == 0x0097
                    0097    710 _CLKSEL	=	0x0097
                    009A    711 G$CCH0MA$0$0 == 0x009a
                    009A    712 _CCH0MA	=	0x009a
                    009C    713 G$P4MDOUT$0$0 == 0x009c
                    009C    714 _P4MDOUT	=	0x009c
                    009D    715 G$P5MDOUT$0$0 == 0x009d
                    009D    716 _P5MDOUT	=	0x009d
                    009E    717 G$P6MDOUT$0$0 == 0x009e
                    009E    718 _P6MDOUT	=	0x009e
                    009F    719 G$P7MDOUT$0$0 == 0x009f
                    009F    720 _P7MDOUT	=	0x009f
                    00A1    721 G$CCH0CN$0$0 == 0x00a1
                    00A1    722 _CCH0CN	=	0x00a1
                    00A2    723 G$CCH0TN$0$0 == 0x00a2
                    00A2    724 _CCH0TN	=	0x00a2
                    00A3    725 G$CCH0LC$0$0 == 0x00a3
                    00A3    726 _CCH0LC	=	0x00a3
                    00A4    727 G$P0MDOUT$0$0 == 0x00a4
                    00A4    728 _P0MDOUT	=	0x00a4
                    00A5    729 G$P1MDOUT$0$0 == 0x00a5
                    00A5    730 _P1MDOUT	=	0x00a5
                    00A6    731 G$P2MDOUT$0$0 == 0x00a6
                    00A6    732 _P2MDOUT	=	0x00a6
                    00A7    733 G$P3MDOUT$0$0 == 0x00a7
                    00A7    734 _P3MDOUT	=	0x00a7
                    00AD    735 G$P1MDIN$0$0 == 0x00ad
                    00AD    736 _P1MDIN	=	0x00ad
                    00B7    737 G$FLACL$0$0 == 0x00b7
                    00B7    738 _FLACL	=	0x00b7
                    00C8    739 G$P4$0$0 == 0x00c8
                    00C8    740 _P4	=	0x00c8
                    00D8    741 G$P5$0$0 == 0x00d8
                    00D8    742 _P5	=	0x00d8
                    00E1    743 G$XBR0$0$0 == 0x00e1
                    00E1    744 _XBR0	=	0x00e1
                    00E2    745 G$XBR1$0$0 == 0x00e2
                    00E2    746 _XBR1	=	0x00e2
                    00E3    747 G$XBR2$0$0 == 0x00e3
                    00E3    748 _XBR2	=	0x00e3
                    00E8    749 G$P6$0$0 == 0x00e8
                    00E8    750 _P6	=	0x00e8
                    00F8    751 G$P7$0$0 == 0x00f8
                    00F8    752 _P7	=	0x00f8
                    8C8A    753 G$TMR0$0$0 == 0x8c8a
                    8C8A    754 _TMR0	=	0x8c8a
                    8D8B    755 G$TMR1$0$0 == 0x8d8b
                    8D8B    756 _TMR1	=	0x8d8b
                    CDCC    757 G$TMR2$0$0 == 0xcdcc
                    CDCC    758 _TMR2	=	0xcdcc
                    CBCA    759 G$RCAP2$0$0 == 0xcbca
                    CBCA    760 _RCAP2	=	0xcbca
                    BFBE    761 G$ADC0$0$0 == 0xbfbe
                    BFBE    762 _ADC0	=	0xbfbe
                    C5C4    763 G$ADC0GT$0$0 == 0xc5c4
                    C5C4    764 _ADC0GT	=	0xc5c4
                    C7C6    765 G$ADC0LT$0$0 == 0xc7c6
                    C7C6    766 _ADC0LT	=	0xc7c6
                    D3D2    767 G$DAC0$0$0 == 0xd3d2
                    D3D2    768 _DAC0	=	0xd3d2
                    FAF9    769 G$PCA0$0$0 == 0xfaf9
                    FAF9    770 _PCA0	=	0xfaf9
                    FCFB    771 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    772 _PCA0CP0	=	0xfcfb
                    FEFD    773 G$PCA0CP1$0$0 == 0xfefd
                    FEFD    774 _PCA0CP1	=	0xfefd
                    EAE9    775 G$PCA0CP2$0$0 == 0xeae9
                    EAE9    776 _PCA0CP2	=	0xeae9
                    ECEB    777 G$PCA0CP3$0$0 == 0xeceb
                    ECEB    778 _PCA0CP3	=	0xeceb
                    EEED    779 G$PCA0CP4$0$0 == 0xeeed
                    EEED    780 _PCA0CP4	=	0xeeed
                    E2E1    781 G$PCA0CP5$0$0 == 0xe2e1
                    E2E1    782 _PCA0CP5	=	0xe2e1
                    CDCC    783 G$TMR3$0$0 == 0xcdcc
                    CDCC    784 _TMR3	=	0xcdcc
                    CBCA    785 G$RCAP3$0$0 == 0xcbca
                    CBCA    786 _RCAP3	=	0xcbca
                    D3D2    787 G$DAC1$0$0 == 0xd3d2
                    D3D2    788 _DAC1	=	0xd3d2
                    CDCC    789 G$TMR4$0$0 == 0xcdcc
                    CDCC    790 _TMR4	=	0xcdcc
                    CBCA    791 G$RCAP4$0$0 == 0xcbca
                    CBCA    792 _RCAP4	=	0xcbca
                    C2C1    793 G$MAC0A$0$0 == 0xc2c1
                    C2C1    794 _MAC0A	=	0xc2c1
                    96959493    795 G$MAC0ACC$0$0 == 0x96959493
                    96959493    796 _MAC0ACC	=	0x96959493
                    CFCE    797 G$MAC0RND$0$0 == 0xcfce
                    CFCE    798 _MAC0RND	=	0xcfce
                            799 ;--------------------------------------------------------
                            800 ; special function bits
                            801 ;--------------------------------------------------------
                            802 	.area RSEG    (DATA)
                    0080    803 G$P0_0$0$0 == 0x0080
                    0080    804 _P0_0	=	0x0080
                    0081    805 G$P0_1$0$0 == 0x0081
                    0081    806 _P0_1	=	0x0081
                    0082    807 G$P0_2$0$0 == 0x0082
                    0082    808 _P0_2	=	0x0082
                    0083    809 G$P0_3$0$0 == 0x0083
                    0083    810 _P0_3	=	0x0083
                    0084    811 G$P0_4$0$0 == 0x0084
                    0084    812 _P0_4	=	0x0084
                    0085    813 G$P0_5$0$0 == 0x0085
                    0085    814 _P0_5	=	0x0085
                    0086    815 G$P0_6$0$0 == 0x0086
                    0086    816 _P0_6	=	0x0086
                    0087    817 G$P0_7$0$0 == 0x0087
                    0087    818 _P0_7	=	0x0087
                    0088    819 G$IT0$0$0 == 0x0088
                    0088    820 _IT0	=	0x0088
                    0089    821 G$IE0$0$0 == 0x0089
                    0089    822 _IE0	=	0x0089
                    008A    823 G$IT1$0$0 == 0x008a
                    008A    824 _IT1	=	0x008a
                    008B    825 G$IE1$0$0 == 0x008b
                    008B    826 _IE1	=	0x008b
                    008C    827 G$TR0$0$0 == 0x008c
                    008C    828 _TR0	=	0x008c
                    008D    829 G$TF0$0$0 == 0x008d
                    008D    830 _TF0	=	0x008d
                    008E    831 G$TR1$0$0 == 0x008e
                    008E    832 _TR1	=	0x008e
                    008F    833 G$TF1$0$0 == 0x008f
                    008F    834 _TF1	=	0x008f
                    0088    835 G$CP0HYN0$0$0 == 0x0088
                    0088    836 _CP0HYN0	=	0x0088
                    0089    837 G$CP0HYN1$0$0 == 0x0089
                    0089    838 _CP0HYN1	=	0x0089
                    008A    839 G$CP0HYP0$0$0 == 0x008a
                    008A    840 _CP0HYP0	=	0x008a
                    008B    841 G$CP0HYP1$0$0 == 0x008b
                    008B    842 _CP0HYP1	=	0x008b
                    008C    843 G$CP0FIF$0$0 == 0x008c
                    008C    844 _CP0FIF	=	0x008c
                    008D    845 G$CP0RIF$0$0 == 0x008d
                    008D    846 _CP0RIF	=	0x008d
                    008E    847 G$CP0OUT$0$0 == 0x008e
                    008E    848 _CP0OUT	=	0x008e
                    008F    849 G$CP0EN$0$0 == 0x008f
                    008F    850 _CP0EN	=	0x008f
                    0088    851 G$CP1HYN0$0$0 == 0x0088
                    0088    852 _CP1HYN0	=	0x0088
                    0089    853 G$CP1HYN1$0$0 == 0x0089
                    0089    854 _CP1HYN1	=	0x0089
                    008A    855 G$CP1HYP0$0$0 == 0x008a
                    008A    856 _CP1HYP0	=	0x008a
                    008B    857 G$CP1HYP1$0$0 == 0x008b
                    008B    858 _CP1HYP1	=	0x008b
                    008C    859 G$CP1FIF$0$0 == 0x008c
                    008C    860 _CP1FIF	=	0x008c
                    008D    861 G$CP1RIF$0$0 == 0x008d
                    008D    862 _CP1RIF	=	0x008d
                    008E    863 G$CP1OUT$0$0 == 0x008e
                    008E    864 _CP1OUT	=	0x008e
                    008F    865 G$CP1EN$0$0 == 0x008f
                    008F    866 _CP1EN	=	0x008f
                    0088    867 G$FLHBUSY$0$0 == 0x0088
                    0088    868 _FLHBUSY	=	0x0088
                    0090    869 G$P1_0$0$0 == 0x0090
                    0090    870 _P1_0	=	0x0090
                    0091    871 G$P1_1$0$0 == 0x0091
                    0091    872 _P1_1	=	0x0091
                    0092    873 G$P1_2$0$0 == 0x0092
                    0092    874 _P1_2	=	0x0092
                    0093    875 G$P1_3$0$0 == 0x0093
                    0093    876 _P1_3	=	0x0093
                    0094    877 G$P1_4$0$0 == 0x0094
                    0094    878 _P1_4	=	0x0094
                    0095    879 G$P1_5$0$0 == 0x0095
                    0095    880 _P1_5	=	0x0095
                    0096    881 G$P1_6$0$0 == 0x0096
                    0096    882 _P1_6	=	0x0096
                    0097    883 G$P1_7$0$0 == 0x0097
                    0097    884 _P1_7	=	0x0097
                    0098    885 G$RI0$0$0 == 0x0098
                    0098    886 _RI0	=	0x0098
                    0098    887 G$RI$0$0 == 0x0098
                    0098    888 _RI	=	0x0098
                    0099    889 G$TI0$0$0 == 0x0099
                    0099    890 _TI0	=	0x0099
                    0099    891 G$TI$0$0 == 0x0099
                    0099    892 _TI	=	0x0099
                    009A    893 G$RB80$0$0 == 0x009a
                    009A    894 _RB80	=	0x009a
                    009B    895 G$TB80$0$0 == 0x009b
                    009B    896 _TB80	=	0x009b
                    009C    897 G$REN0$0$0 == 0x009c
                    009C    898 _REN0	=	0x009c
                    009C    899 G$REN$0$0 == 0x009c
                    009C    900 _REN	=	0x009c
                    009D    901 G$SM20$0$0 == 0x009d
                    009D    902 _SM20	=	0x009d
                    009E    903 G$SM10$0$0 == 0x009e
                    009E    904 _SM10	=	0x009e
                    009F    905 G$SM00$0$0 == 0x009f
                    009F    906 _SM00	=	0x009f
                    0098    907 G$RI1$0$0 == 0x0098
                    0098    908 _RI1	=	0x0098
                    0099    909 G$TI1$0$0 == 0x0099
                    0099    910 _TI1	=	0x0099
                    009A    911 G$RB81$0$0 == 0x009a
                    009A    912 _RB81	=	0x009a
                    009B    913 G$TB81$0$0 == 0x009b
                    009B    914 _TB81	=	0x009b
                    009C    915 G$REN1$0$0 == 0x009c
                    009C    916 _REN1	=	0x009c
                    009D    917 G$MCE1$0$0 == 0x009d
                    009D    918 _MCE1	=	0x009d
                    009F    919 G$S1MODE$0$0 == 0x009f
                    009F    920 _S1MODE	=	0x009f
                    00A0    921 G$P2_0$0$0 == 0x00a0
                    00A0    922 _P2_0	=	0x00a0
                    00A1    923 G$P2_1$0$0 == 0x00a1
                    00A1    924 _P2_1	=	0x00a1
                    00A2    925 G$P2_2$0$0 == 0x00a2
                    00A2    926 _P2_2	=	0x00a2
                    00A3    927 G$P2_3$0$0 == 0x00a3
                    00A3    928 _P2_3	=	0x00a3
                    00A4    929 G$P2_4$0$0 == 0x00a4
                    00A4    930 _P2_4	=	0x00a4
                    00A5    931 G$P2_5$0$0 == 0x00a5
                    00A5    932 _P2_5	=	0x00a5
                    00A6    933 G$P2_6$0$0 == 0x00a6
                    00A6    934 _P2_6	=	0x00a6
                    00A7    935 G$P2_7$0$0 == 0x00a7
                    00A7    936 _P2_7	=	0x00a7
                    00A8    937 G$EX0$0$0 == 0x00a8
                    00A8    938 _EX0	=	0x00a8
                    00A9    939 G$ET0$0$0 == 0x00a9
                    00A9    940 _ET0	=	0x00a9
                    00AA    941 G$EX1$0$0 == 0x00aa
                    00AA    942 _EX1	=	0x00aa
                    00AB    943 G$ET1$0$0 == 0x00ab
                    00AB    944 _ET1	=	0x00ab
                    00AC    945 G$ES0$0$0 == 0x00ac
                    00AC    946 _ES0	=	0x00ac
                    00AC    947 G$ES$0$0 == 0x00ac
                    00AC    948 _ES	=	0x00ac
                    00AD    949 G$ET2$0$0 == 0x00ad
                    00AD    950 _ET2	=	0x00ad
                    00AF    951 G$EA$0$0 == 0x00af
                    00AF    952 _EA	=	0x00af
                    00B0    953 G$P3_0$0$0 == 0x00b0
                    00B0    954 _P3_0	=	0x00b0
                    00B1    955 G$P3_1$0$0 == 0x00b1
                    00B1    956 _P3_1	=	0x00b1
                    00B2    957 G$P3_2$0$0 == 0x00b2
                    00B2    958 _P3_2	=	0x00b2
                    00B3    959 G$P3_3$0$0 == 0x00b3
                    00B3    960 _P3_3	=	0x00b3
                    00B4    961 G$P3_4$0$0 == 0x00b4
                    00B4    962 _P3_4	=	0x00b4
                    00B5    963 G$P3_5$0$0 == 0x00b5
                    00B5    964 _P3_5	=	0x00b5
                    00B6    965 G$P3_6$0$0 == 0x00b6
                    00B6    966 _P3_6	=	0x00b6
                    00B7    967 G$P3_7$0$0 == 0x00b7
                    00B7    968 _P3_7	=	0x00b7
                    00B8    969 G$PX0$0$0 == 0x00b8
                    00B8    970 _PX0	=	0x00b8
                    00B9    971 G$PT0$0$0 == 0x00b9
                    00B9    972 _PT0	=	0x00b9
                    00BA    973 G$PX1$0$0 == 0x00ba
                    00BA    974 _PX1	=	0x00ba
                    00BB    975 G$PT1$0$0 == 0x00bb
                    00BB    976 _PT1	=	0x00bb
                    00BC    977 G$PS0$0$0 == 0x00bc
                    00BC    978 _PS0	=	0x00bc
                    00BC    979 G$PS$0$0 == 0x00bc
                    00BC    980 _PS	=	0x00bc
                    00BD    981 G$PT2$0$0 == 0x00bd
                    00BD    982 _PT2	=	0x00bd
                    00C0    983 G$SMBTOE$0$0 == 0x00c0
                    00C0    984 _SMBTOE	=	0x00c0
                    00C1    985 G$SMBFTE$0$0 == 0x00c1
                    00C1    986 _SMBFTE	=	0x00c1
                    00C2    987 G$AA$0$0 == 0x00c2
                    00C2    988 _AA	=	0x00c2
                    00C3    989 G$SI$0$0 == 0x00c3
                    00C3    990 _SI	=	0x00c3
                    00C4    991 G$STO$0$0 == 0x00c4
                    00C4    992 _STO	=	0x00c4
                    00C5    993 G$STA$0$0 == 0x00c5
                    00C5    994 _STA	=	0x00c5
                    00C6    995 G$ENSMB$0$0 == 0x00c6
                    00C6    996 _ENSMB	=	0x00c6
                    00C7    997 G$BUSY$0$0 == 0x00c7
                    00C7    998 _BUSY	=	0x00c7
                    00C0    999 G$MAC0N$0$0 == 0x00c0
                    00C0   1000 _MAC0N	=	0x00c0
                    00C1   1001 G$MAC0SO$0$0 == 0x00c1
                    00C1   1002 _MAC0SO	=	0x00c1
                    00C2   1003 G$MAC0Z$0$0 == 0x00c2
                    00C2   1004 _MAC0Z	=	0x00c2
                    00C3   1005 G$MAC0HO$0$0 == 0x00c3
                    00C3   1006 _MAC0HO	=	0x00c3
                    00C8   1007 G$CPRL2$0$0 == 0x00c8
                    00C8   1008 _CPRL2	=	0x00c8
                    00C9   1009 G$CT2$0$0 == 0x00c9
                    00C9   1010 _CT2	=	0x00c9
                    00CA   1011 G$TR2$0$0 == 0x00ca
                    00CA   1012 _TR2	=	0x00ca
                    00CB   1013 G$EXEN2$0$0 == 0x00cb
                    00CB   1014 _EXEN2	=	0x00cb
                    00CE   1015 G$EXF2$0$0 == 0x00ce
                    00CE   1016 _EXF2	=	0x00ce
                    00CF   1017 G$TF2$0$0 == 0x00cf
                    00CF   1018 _TF2	=	0x00cf
                    00C8   1019 G$CPRL3$0$0 == 0x00c8
                    00C8   1020 _CPRL3	=	0x00c8
                    00C9   1021 G$CT3$0$0 == 0x00c9
                    00C9   1022 _CT3	=	0x00c9
                    00CA   1023 G$TR3$0$0 == 0x00ca
                    00CA   1024 _TR3	=	0x00ca
                    00CB   1025 G$EXEN3$0$0 == 0x00cb
                    00CB   1026 _EXEN3	=	0x00cb
                    00CE   1027 G$EXF3$0$0 == 0x00ce
                    00CE   1028 _EXF3	=	0x00ce
                    00CF   1029 G$TF3$0$0 == 0x00cf
                    00CF   1030 _TF3	=	0x00cf
                    00C8   1031 G$CPRL4$0$0 == 0x00c8
                    00C8   1032 _CPRL4	=	0x00c8
                    00C9   1033 G$CT4$0$0 == 0x00c9
                    00C9   1034 _CT4	=	0x00c9
                    00CA   1035 G$TR4$0$0 == 0x00ca
                    00CA   1036 _TR4	=	0x00ca
                    00CB   1037 G$EXEN4$0$0 == 0x00cb
                    00CB   1038 _EXEN4	=	0x00cb
                    00CE   1039 G$EXF4$0$0 == 0x00ce
                    00CE   1040 _EXF4	=	0x00ce
                    00CF   1041 G$TF4$0$0 == 0x00cf
                    00CF   1042 _TF4	=	0x00cf
                    00C8   1043 G$P4_0$0$0 == 0x00c8
                    00C8   1044 _P4_0	=	0x00c8
                    00C9   1045 G$P4_1$0$0 == 0x00c9
                    00C9   1046 _P4_1	=	0x00c9
                    00CA   1047 G$P4_2$0$0 == 0x00ca
                    00CA   1048 _P4_2	=	0x00ca
                    00CB   1049 G$P4_3$0$0 == 0x00cb
                    00CB   1050 _P4_3	=	0x00cb
                    00CC   1051 G$P4_4$0$0 == 0x00cc
                    00CC   1052 _P4_4	=	0x00cc
                    00CD   1053 G$P4_5$0$0 == 0x00cd
                    00CD   1054 _P4_5	=	0x00cd
                    00CE   1055 G$P4_6$0$0 == 0x00ce
                    00CE   1056 _P4_6	=	0x00ce
                    00CF   1057 G$P4_7$0$0 == 0x00cf
                    00CF   1058 _P4_7	=	0x00cf
                    00D0   1059 G$P$0$0 == 0x00d0
                    00D0   1060 _P	=	0x00d0
                    00D1   1061 G$F1$0$0 == 0x00d1
                    00D1   1062 _F1	=	0x00d1
                    00D2   1063 G$OV$0$0 == 0x00d2
                    00D2   1064 _OV	=	0x00d2
                    00D3   1065 G$RS0$0$0 == 0x00d3
                    00D3   1066 _RS0	=	0x00d3
                    00D4   1067 G$RS1$0$0 == 0x00d4
                    00D4   1068 _RS1	=	0x00d4
                    00D5   1069 G$F0$0$0 == 0x00d5
                    00D5   1070 _F0	=	0x00d5
                    00D6   1071 G$AC$0$0 == 0x00d6
                    00D6   1072 _AC	=	0x00d6
                    00D7   1073 G$CY$0$0 == 0x00d7
                    00D7   1074 _CY	=	0x00d7
                    00D8   1075 G$CCF0$0$0 == 0x00d8
                    00D8   1076 _CCF0	=	0x00d8
                    00D9   1077 G$CCF1$0$0 == 0x00d9
                    00D9   1078 _CCF1	=	0x00d9
                    00DA   1079 G$CCF2$0$0 == 0x00da
                    00DA   1080 _CCF2	=	0x00da
                    00DB   1081 G$CCF3$0$0 == 0x00db
                    00DB   1082 _CCF3	=	0x00db
                    00DC   1083 G$CCF4$0$0 == 0x00dc
                    00DC   1084 _CCF4	=	0x00dc
                    00DD   1085 G$CCF5$0$0 == 0x00dd
                    00DD   1086 _CCF5	=	0x00dd
                    00DE   1087 G$CR$0$0 == 0x00de
                    00DE   1088 _CR	=	0x00de
                    00DF   1089 G$CF$0$0 == 0x00df
                    00DF   1090 _CF	=	0x00df
                    00D8   1091 G$P5_0$0$0 == 0x00d8
                    00D8   1092 _P5_0	=	0x00d8
                    00D9   1093 G$P5_1$0$0 == 0x00d9
                    00D9   1094 _P5_1	=	0x00d9
                    00DA   1095 G$P5_2$0$0 == 0x00da
                    00DA   1096 _P5_2	=	0x00da
                    00DB   1097 G$P5_3$0$0 == 0x00db
                    00DB   1098 _P5_3	=	0x00db
                    00DC   1099 G$P5_4$0$0 == 0x00dc
                    00DC   1100 _P5_4	=	0x00dc
                    00DD   1101 G$P5_5$0$0 == 0x00dd
                    00DD   1102 _P5_5	=	0x00dd
                    00DE   1103 G$P5_6$0$0 == 0x00de
                    00DE   1104 _P5_6	=	0x00de
                    00DF   1105 G$P5_7$0$0 == 0x00df
                    00DF   1106 _P5_7	=	0x00df
                    00E8   1107 G$AD0LJST$0$0 == 0x00e8
                    00E8   1108 _AD0LJST	=	0x00e8
                    00E9   1109 G$AD0WINT$0$0 == 0x00e9
                    00E9   1110 _AD0WINT	=	0x00e9
                    00EA   1111 G$AD0CM0$0$0 == 0x00ea
                    00EA   1112 _AD0CM0	=	0x00ea
                    00EB   1113 G$AD0CM1$0$0 == 0x00eb
                    00EB   1114 _AD0CM1	=	0x00eb
                    00EC   1115 G$AD0BUSY$0$0 == 0x00ec
                    00EC   1116 _AD0BUSY	=	0x00ec
                    00ED   1117 G$AD0INT$0$0 == 0x00ed
                    00ED   1118 _AD0INT	=	0x00ed
                    00EE   1119 G$AD0TM$0$0 == 0x00ee
                    00EE   1120 _AD0TM	=	0x00ee
                    00EF   1121 G$AD0EN$0$0 == 0x00ef
                    00EF   1122 _AD0EN	=	0x00ef
                    00E8   1123 G$AD2WINT$0$0 == 0x00e8
                    00E8   1124 _AD2WINT	=	0x00e8
                    00E9   1125 G$AD2CM0$0$0 == 0x00e9
                    00E9   1126 _AD2CM0	=	0x00e9
                    00EA   1127 G$AD2CM1$0$0 == 0x00ea
                    00EA   1128 _AD2CM1	=	0x00ea
                    00EB   1129 G$AD2CM2$0$0 == 0x00eb
                    00EB   1130 _AD2CM2	=	0x00eb
                    00EC   1131 G$AD2BUSY$0$0 == 0x00ec
                    00EC   1132 _AD2BUSY	=	0x00ec
                    00ED   1133 G$AD2INT$0$0 == 0x00ed
                    00ED   1134 _AD2INT	=	0x00ed
                    00EE   1135 G$AD2TM$0$0 == 0x00ee
                    00EE   1136 _AD2TM	=	0x00ee
                    00EF   1137 G$AD2EN$0$0 == 0x00ef
                    00EF   1138 _AD2EN	=	0x00ef
                    00E8   1139 G$P6_0$0$0 == 0x00e8
                    00E8   1140 _P6_0	=	0x00e8
                    00E9   1141 G$P6_1$0$0 == 0x00e9
                    00E9   1142 _P6_1	=	0x00e9
                    00EA   1143 G$P6_2$0$0 == 0x00ea
                    00EA   1144 _P6_2	=	0x00ea
                    00EB   1145 G$P6_3$0$0 == 0x00eb
                    00EB   1146 _P6_3	=	0x00eb
                    00EC   1147 G$P6_4$0$0 == 0x00ec
                    00EC   1148 _P6_4	=	0x00ec
                    00ED   1149 G$P6_5$0$0 == 0x00ed
                    00ED   1150 _P6_5	=	0x00ed
                    00EE   1151 G$P6_6$0$0 == 0x00ee
                    00EE   1152 _P6_6	=	0x00ee
                    00EF   1153 G$P6_7$0$0 == 0x00ef
                    00EF   1154 _P6_7	=	0x00ef
                    00F8   1155 G$SPIEN$0$0 == 0x00f8
                    00F8   1156 _SPIEN	=	0x00f8
                    00F9   1157 G$TXBMT$0$0 == 0x00f9
                    00F9   1158 _TXBMT	=	0x00f9
                    00FA   1159 G$NSSMD0$0$0 == 0x00fa
                    00FA   1160 _NSSMD0	=	0x00fa
                    00FB   1161 G$NSSMD1$0$0 == 0x00fb
                    00FB   1162 _NSSMD1	=	0x00fb
                    00FC   1163 G$RXOVRN$0$0 == 0x00fc
                    00FC   1164 _RXOVRN	=	0x00fc
                    00FD   1165 G$MODF$0$0 == 0x00fd
                    00FD   1166 _MODF	=	0x00fd
                    00FE   1167 G$WCOL$0$0 == 0x00fe
                    00FE   1168 _WCOL	=	0x00fe
                    00FF   1169 G$SPIF$0$0 == 0x00ff
                    00FF   1170 _SPIF	=	0x00ff
                    00F8   1171 G$P7_0$0$0 == 0x00f8
                    00F8   1172 _P7_0	=	0x00f8
                    00F9   1173 G$P7_1$0$0 == 0x00f9
                    00F9   1174 _P7_1	=	0x00f9
                    00FA   1175 G$P7_2$0$0 == 0x00fa
                    00FA   1176 _P7_2	=	0x00fa
                    00FB   1177 G$P7_3$0$0 == 0x00fb
                    00FB   1178 _P7_3	=	0x00fb
                    00FC   1179 G$P7_4$0$0 == 0x00fc
                    00FC   1180 _P7_4	=	0x00fc
                    00FD   1181 G$P7_5$0$0 == 0x00fd
                    00FD   1182 _P7_5	=	0x00fd
                    00FE   1183 G$P7_6$0$0 == 0x00fe
                    00FE   1184 _P7_6	=	0x00fe
                    00FF   1185 G$P7_7$0$0 == 0x00ff
                    00FF   1186 _P7_7	=	0x00ff
                           1187 ;--------------------------------------------------------
                           1188 ; overlayable register banks
                           1189 ;--------------------------------------------------------
                           1190 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1191 	.ds 8
                           1192 ;--------------------------------------------------------
                           1193 ; internal ram data
                           1194 ;--------------------------------------------------------
                           1195 	.area DSEG    (DATA)
                           1196 ;--------------------------------------------------------
                           1197 ; overlayable items in internal ram 
                           1198 ;--------------------------------------------------------
                           1199 	.area OSEG    (OVR,DATA)
                           1200 ;--------------------------------------------------------
                           1201 ; indirectly addressable internal ram data
                           1202 ;--------------------------------------------------------
                           1203 	.area ISEG    (DATA)
                           1204 ;--------------------------------------------------------
                           1205 ; absolute internal ram data
                           1206 ;--------------------------------------------------------
                           1207 	.area IABS    (ABS,DATA)
                           1208 	.area IABS    (ABS,DATA)
                           1209 ;--------------------------------------------------------
                           1210 ; bit data
                           1211 ;--------------------------------------------------------
                           1212 	.area BSEG    (BIT)
                    0000   1213 G$callback_kicker$0$0==.
   0000                    1214 _callback_kicker::
   0000                    1215 	.ds 1
                           1216 ;--------------------------------------------------------
                           1217 ; paged external ram data
                           1218 ;--------------------------------------------------------
                           1219 	.area PSEG    (PAG,XDATA)
                           1220 ;--------------------------------------------------------
                           1221 ; external ram data
                           1222 ;--------------------------------------------------------
                           1223 	.area XSEG    (XDATA)
                    0000   1224 G$swtimer$0$0==.
   0000                    1225 _swtimer::
   0000                    1226 	.ds 40
                    0028   1227 G$timer_table$0$0==.
   0028                    1228 _timer_table::
   0028                    1229 	.ds 10
                    0032   1230 G$timer_cbs$0$0==.
   0032                    1231 _timer_cbs::
   0032                    1232 	.ds 20
                    0046   1233 G$kicker$0$0==.
   0046                    1234 _kicker::
   0046                    1235 	.ds 2
                    0048   1236 Lfree_timer$timer$1$1==.
   0048                    1237 _free_timer_timer_1_1:
   0048                    1238 	.ds 1
                    0049   1239 Lset_timer$time$1$1==.
   0049                    1240 _set_timer_PARM_2:
   0049                    1241 	.ds 4
                    004D   1242 Lset_timer$cb$1$1==.
   004D                    1243 _set_timer_PARM_3:
   004D                    1244 	.ds 2
                    004F   1245 Lset_timer$timer$1$1==.
   004F                    1246 _set_timer_timer_1_1:
   004F                    1247 	.ds 1
                    0050   1248 Lset_timer_cnt$time$1$1==.
   0050                    1249 _set_timer_cnt_PARM_2:
   0050                    1250 	.ds 4
                    0054   1251 Lset_timer_cnt$timer$1$1==.
   0054                    1252 _set_timer_cnt_timer_1_1:
   0054                    1253 	.ds 1
                    0055   1254 Lget_timer$timer$1$1==.
   0055                    1255 _get_timer_timer_1_1:
   0055                    1256 	.ds 1
                    0056   1257 Lget_timer_status$timer$1$1==.
   0056                    1258 _get_timer_status_timer_1_1:
   0056                    1259 	.ds 1
                    0057   1260 Lstop_timer$timer$1$1==.
   0057                    1261 _stop_timer_timer_1_1:
   0057                    1262 	.ds 1
                    0058   1263 Lstart_timer$timer$1$1==.
   0058                    1264 _start_timer_timer_1_1:
   0058                    1265 	.ds 1
                    0059   1266 Lhandle_kicker$Kicker$1$1==.
   0059                    1267 _handle_kicker_Kicker_1_1:
   0059                    1268 	.ds 3
                           1269 ;--------------------------------------------------------
                           1270 ; absolute external ram data
                           1271 ;--------------------------------------------------------
                           1272 	.area XABS    (ABS,XDATA)
                           1273 ;--------------------------------------------------------
                           1274 ; external initialized ram data
                           1275 ;--------------------------------------------------------
                           1276 	.area XISEG   (XDATA)
                    0000   1277 Fswtimers$count$0$0==.
   0000                    1278 _count:
   0000                    1279 	.ds 1
                           1280 	.area HOME    (CODE)
                           1281 	.area GSINIT0 (CODE)
                           1282 	.area GSINIT1 (CODE)
                           1283 	.area GSINIT2 (CODE)
                           1284 	.area GSINIT3 (CODE)
                           1285 	.area GSINIT4 (CODE)
                           1286 	.area GSINIT5 (CODE)
                           1287 	.area GSINIT  (CODE)
                           1288 	.area GSFINAL (CODE)
                           1289 	.area CSEG    (CODE)
                           1290 ;--------------------------------------------------------
                           1291 ; global & static initialisations
                           1292 ;--------------------------------------------------------
                           1293 	.area HOME    (CODE)
                           1294 	.area GSINIT  (CODE)
                           1295 	.area GSFINAL (CODE)
                           1296 	.area GSINIT  (CODE)
                           1297 ;--------------------------------------------------------
                           1298 ; Home
                           1299 ;--------------------------------------------------------
                           1300 	.area HOME    (CODE)
                           1301 	.area HOME    (CODE)
                           1302 ;--------------------------------------------------------
                           1303 ; code
                           1304 ;--------------------------------------------------------
                           1305 	.area APP_BANK(CODE)
                           1306 ;------------------------------------------------------------
                           1307 ;Allocation info for local variables in function 'init_swtimers'
                           1308 ;------------------------------------------------------------
                           1309 ;i                         Allocated with name '_init_swtimers_i_1_1'
                           1310 ;------------------------------------------------------------
                    0000   1311 	G$init_swtimers$0$0 ==.
                    0000   1312 	C$swtimers.c$51$0$0 ==.
                           1313 ;	..\driver\swtimers.c:51: void init_swtimers(void) banked
                           1314 ;	-----------------------------------------
                           1315 ;	 function init_swtimers
                           1316 ;	-----------------------------------------
   0000                    1317 _init_swtimers:
                    0002   1318 	ar2 = 0x02
                    0003   1319 	ar3 = 0x03
                    0004   1320 	ar4 = 0x04
                    0005   1321 	ar5 = 0x05
                    0006   1322 	ar6 = 0x06
                    0007   1323 	ar7 = 0x07
                    0000   1324 	ar0 = 0x00
                    0001   1325 	ar1 = 0x01
                    0000   1326 	C$swtimers.c$55$2$2 ==.
                           1327 ;	..\driver\swtimers.c:55: for (i=0 ; i<NUMBER_OF_SWTIMERS ; i++)
   0000 7A 00              1328 	mov	r2,#0x00
   0002                    1329 00101$:
   0002 BA 0A 00           1330 	cjne	r2,#0x0A,00110$
   0005                    1331 00110$:
   0005 50 35              1332 	jnc	00104$
                    0007   1333 	C$swtimers.c$59$2$2 ==.
                           1334 ;	..\driver\swtimers.c:59: timer_table[i] = TMR_FREE;
   0007 EA                 1335 	mov	a,r2
   0008 24r28              1336 	add	a,#_timer_table
   000A F5 82              1337 	mov	dpl,a
   000C E4                 1338 	clr	a
   000D 34s00              1339 	addc	a,#(_timer_table >> 8)
   000F F5 83              1340 	mov	dph,a
   0011 74 01              1341 	mov	a,#0x01
   0013 F0                 1342 	movx	@dptr,a
                    0014   1343 	C$swtimers.c$60$2$2 ==.
                           1344 ;	..\driver\swtimers.c:60: swtimer[i]   = 0;
   0014 EA                 1345 	mov	a,r2
   0015 2A                 1346 	add	a,r2
   0016 25 E0              1347 	add	a,acc
   0018 24r00              1348 	add	a,#_swtimer
   001A F5 82              1349 	mov	dpl,a
   001C E4                 1350 	clr	a
   001D 34s00              1351 	addc	a,#(_swtimer >> 8)
   001F F5 83              1352 	mov	dph,a
   0021 E4                 1353 	clr	a
   0022 F0                 1354 	movx	@dptr,a
   0023 A3                 1355 	inc	dptr
   0024 F0                 1356 	movx	@dptr,a
   0025 A3                 1357 	inc	dptr
   0026 F0                 1358 	movx	@dptr,a
   0027 A3                 1359 	inc	dptr
   0028 F0                 1360 	movx	@dptr,a
                    0029   1361 	C$swtimers.c$61$2$2 ==.
                           1362 ;	..\driver\swtimers.c:61: timer_cbs[i] = 0x0000;
   0029 EA                 1363 	mov	a,r2
   002A 2A                 1364 	add	a,r2
   002B FB                 1365 	mov	r3,a
   002C 24r32              1366 	add	a,#_timer_cbs
   002E F5 82              1367 	mov	dpl,a
   0030 E4                 1368 	clr	a
   0031 34s00              1369 	addc	a,#(_timer_cbs >> 8)
   0033 F5 83              1370 	mov	dph,a
   0035 E4                 1371 	clr	a
   0036 F0                 1372 	movx	@dptr,a
   0037 A3                 1373 	inc	dptr
   0038 F0                 1374 	movx	@dptr,a
                    0039   1375 	C$swtimers.c$55$1$1 ==.
                           1376 ;	..\driver\swtimers.c:55: for (i=0 ; i<NUMBER_OF_SWTIMERS ; i++)
   0039 0A                 1377 	inc	r2
   003A 80 C6              1378 	sjmp	00101$
   003C                    1379 00104$:
                    003C   1380 	C$swtimers.c$64$1$1 ==.
                           1381 ;	..\driver\swtimers.c:64: PT_INIT(&kicker.pt);
   003C 90s00r46           1382 	mov	dptr,#_kicker
   003F E4                 1383 	clr	a
   0040 F0                 1384 	movx	@dptr,a
   0041 A3                 1385 	inc	dptr
   0042 F0                 1386 	movx	@dptr,a
                    0043   1387 	C$swtimers.c$65$1$1 ==.
                    0043   1388 	XG$init_swtimers$0$0 ==.
   0043 02s00r00           1389 	ljmp	__sdcc_banked_ret
                           1390 ;------------------------------------------------------------
                           1391 ;Allocation info for local variables in function 'alloc_timer'
                           1392 ;------------------------------------------------------------
                           1393 ;i                         Allocated with name '_alloc_timer_i_1_1'
                           1394 ;------------------------------------------------------------
                    0046   1395 	G$alloc_timer$0$0 ==.
                    0046   1396 	C$swtimers.c$71$1$1 ==.
                           1397 ;	..\driver\swtimers.c:71: char alloc_timer(void) banked
                           1398 ;	-----------------------------------------
                           1399 ;	 function alloc_timer
                           1400 ;	-----------------------------------------
   0046                    1401 _alloc_timer:
                    0046   1402 	C$swtimers.c$78$1$1 ==.
                           1403 ;	..\driver\swtimers.c:78: ET0 = INTERRUPT_OFF;
   0046 C2 A9              1404 	clr	_ET0
                    0048   1405 	C$swtimers.c$79$1$1 ==.
                           1406 ;	..\driver\swtimers.c:79: for (i=0 ; i<NUMBER_OF_SWTIMERS ; i++)
   0048 7A 00              1407 	mov	r2,#0x00
   004A                    1408 00103$:
   004A BA 0A 00           1409 	cjne	r2,#0x0A,00112$
   004D                    1410 00112$:
   004D 50 4F              1411 	jnc	00106$
                    004F   1412 	C$swtimers.c$81$2$2 ==.
                           1413 ;	..\driver\swtimers.c:81: if (timer_table[i] == TMR_FREE) {
   004F EA                 1414 	mov	a,r2
   0050 24r28              1415 	add	a,#_timer_table
   0052 FB                 1416 	mov	r3,a
   0053 E4                 1417 	clr	a
   0054 34s00              1418 	addc	a,#(_timer_table >> 8)
   0056 FC                 1419 	mov	r4,a
   0057 8B 82              1420 	mov	dpl,r3
   0059 8C 83              1421 	mov	dph,r4
   005B E0                 1422 	movx	a,@dptr
   005C FD                 1423 	mov	r5,a
   005D BD 01 3B           1424 	cjne	r5,#0x01,00105$
                    0060   1425 	C$swtimers.c$83$3$3 ==.
                           1426 ;	..\driver\swtimers.c:83: timer_table[i] = TMR_ALLOCATED;
   0060 8B 82              1427 	mov	dpl,r3
   0062 8C 83              1428 	mov	dph,r4
   0064 74 02              1429 	mov	a,#0x02
   0066 F0                 1430 	movx	@dptr,a
                    0067   1431 	C$swtimers.c$84$3$3 ==.
                           1432 ;	..\driver\swtimers.c:84: swtimer[i]   = 0x0000;
   0067 EA                 1433 	mov	a,r2
   0068 2A                 1434 	add	a,r2
   0069 25 E0              1435 	add	a,acc
   006B 24r00              1436 	add	a,#_swtimer
   006D F5 82              1437 	mov	dpl,a
   006F E4                 1438 	clr	a
   0070 34s00              1439 	addc	a,#(_swtimer >> 8)
   0072 F5 83              1440 	mov	dph,a
   0074 E4                 1441 	clr	a
   0075 F0                 1442 	movx	@dptr,a
   0076 A3                 1443 	inc	dptr
   0077 F0                 1444 	movx	@dptr,a
   0078 A3                 1445 	inc	dptr
   0079 F0                 1446 	movx	@dptr,a
   007A A3                 1447 	inc	dptr
   007B F0                 1448 	movx	@dptr,a
                    007C   1449 	C$swtimers.c$85$3$3 ==.
                           1450 ;	..\driver\swtimers.c:85: timer_cbs[i] = 0x0000;
   007C EA                 1451 	mov	a,r2
   007D 2A                 1452 	add	a,r2
   007E 24r32              1453 	add	a,#_timer_cbs
   0080 F5 82              1454 	mov	dpl,a
   0082 E4                 1455 	clr	a
   0083 34s00              1456 	addc	a,#(_timer_cbs >> 8)
   0085 F5 83              1457 	mov	dph,a
   0087 E4                 1458 	clr	a
   0088 F0                 1459 	movx	@dptr,a
   0089 A3                 1460 	inc	dptr
   008A F0                 1461 	movx	@dptr,a
                    008B   1462 	C$swtimers.c$86$3$3 ==.
                           1463 ;	..\driver\swtimers.c:86: ET0 = INTERRUPT_ON;
   008B D2 A9              1464 	setb	_ET0
                    008D   1465 	C$swtimers.c$87$3$3 ==.
                           1466 ;	..\driver\swtimers.c:87: count++;
   008D 90s00r00           1467 	mov	dptr,#_count
   0090 E0                 1468 	movx	a,@dptr
   0091 FB                 1469 	mov	r3,a
   0092 90s00r00           1470 	mov	dptr,#_count
   0095 04                 1471 	inc	a
   0096 F0                 1472 	movx	@dptr,a
                    0097   1473 	C$swtimers.c$118$3$3 ==.
                           1474 ;	..\driver\swtimers.c:118: return i;
   0097 8A 82              1475 	mov	dpl,r2
   0099 80 08              1476 	sjmp	00107$
   009B                    1477 00105$:
                    009B   1478 	C$swtimers.c$79$1$1 ==.
                           1479 ;	..\driver\swtimers.c:79: for (i=0 ; i<NUMBER_OF_SWTIMERS ; i++)
   009B 0A                 1480 	inc	r2
   009C 80 AC              1481 	sjmp	00103$
   009E                    1482 00106$:
                    009E   1483 	C$swtimers.c$121$1$1 ==.
                           1484 ;	..\driver\swtimers.c:121: ET0 = INTERRUPT_ON;
   009E D2 A9              1485 	setb	_ET0
                    00A0   1486 	C$swtimers.c$122$1$1 ==.
                           1487 ;	..\driver\swtimers.c:122: return -1;
   00A0 75 82 FF           1488 	mov	dpl,#0xFF
   00A3                    1489 00107$:
                    00A3   1490 	C$swtimers.c$123$1$1 ==.
                    00A3   1491 	XG$alloc_timer$0$0 ==.
   00A3 02s00r00           1492 	ljmp	__sdcc_banked_ret
                           1493 ;------------------------------------------------------------
                           1494 ;Allocation info for local variables in function 'free_timer'
                           1495 ;------------------------------------------------------------
                           1496 ;timer                     Allocated with name '_free_timer_timer_1_1'
                           1497 ;------------------------------------------------------------
                    00A6   1498 	G$free_timer$0$0 ==.
                    00A6   1499 	C$swtimers.c$128$1$1 ==.
                           1500 ;	..\driver\swtimers.c:128: u8_t free_timer(u8_t timer) banked
                           1501 ;	-----------------------------------------
                           1502 ;	 function free_timer
                           1503 ;	-----------------------------------------
   00A6                    1504 _free_timer:
   00A6 E5 82              1505 	mov	a,dpl
   00A8 90s00r48           1506 	mov	dptr,#_free_timer_timer_1_1
   00AB F0                 1507 	movx	@dptr,a
                    00AC   1508 	C$swtimers.c$133$1$1 ==.
                           1509 ;	..\driver\swtimers.c:133: ET0 = INTERRUPT_OFF;
   00AC C2 A9              1510 	clr	_ET0
                    00AE   1511 	C$swtimers.c$134$1$1 ==.
                           1512 ;	..\driver\swtimers.c:134: if (timer_table[timer] != TMR_FREE) {
   00AE 90s00r48           1513 	mov	dptr,#_free_timer_timer_1_1
   00B1 E0                 1514 	movx	a,@dptr
   00B2 24r28              1515 	add	a,#_timer_table
   00B4 FA                 1516 	mov	r2,a
   00B5 E4                 1517 	clr	a
   00B6 34s00              1518 	addc	a,#(_timer_table >> 8)
   00B8 FB                 1519 	mov	r3,a
   00B9 8A 82              1520 	mov	dpl,r2
   00BB 8B 83              1521 	mov	dph,r3
   00BD E0                 1522 	movx	a,@dptr
   00BE FC                 1523 	mov	r4,a
   00BF BC 01 02           1524 	cjne	r4,#0x01,00106$
   00C2 80 11              1525 	sjmp	00102$
   00C4                    1526 00106$:
                    00C4   1527 	C$swtimers.c$135$2$2 ==.
                           1528 ;	..\driver\swtimers.c:135: timer_table[timer] = TMR_FREE;
   00C4 8A 82              1529 	mov	dpl,r2
   00C6 8B 83              1530 	mov	dph,r3
   00C8 74 01              1531 	mov	a,#0x01
   00CA F0                 1532 	movx	@dptr,a
                    00CB   1533 	C$swtimers.c$136$2$2 ==.
                           1534 ;	..\driver\swtimers.c:136: count--;
   00CB 90s00r00           1535 	mov	dptr,#_count
   00CE E0                 1536 	movx	a,@dptr
   00CF FA                 1537 	mov	r2,a
   00D0 14                 1538 	dec	a
   00D1 90s00r00           1539 	mov	dptr,#_count
   00D4 F0                 1540 	movx	@dptr,a
   00D5                    1541 00102$:
                    00D5   1542 	C$swtimers.c$168$1$1 ==.
                           1543 ;	..\driver\swtimers.c:168: ET0 = INTERRUPT_ON;
   00D5 D2 A9              1544 	setb	_ET0
                    00D7   1545 	C$swtimers.c$169$1$1 ==.
                           1546 ;	..\driver\swtimers.c:169: return 0;
   00D7 75 82 00           1547 	mov	dpl,#0x00
                    00DA   1548 	C$swtimers.c$170$1$1 ==.
                    00DA   1549 	XG$free_timer$0$0 ==.
   00DA 02s00r00           1550 	ljmp	__sdcc_banked_ret
                           1551 ;------------------------------------------------------------
                           1552 ;Allocation info for local variables in function 'set_timer'
                           1553 ;------------------------------------------------------------
                           1554 ;time                      Allocated with name '_set_timer_PARM_2'
                           1555 ;cb                        Allocated with name '_set_timer_PARM_3'
                           1556 ;timer                     Allocated with name '_set_timer_timer_1_1'
                           1557 ;------------------------------------------------------------
                    00DD   1558 	G$set_timer$0$0 ==.
                    00DD   1559 	C$swtimers.c$177$1$1 ==.
                           1560 ;	..\driver\swtimers.c:177: void set_timer(u8_t timer, counter_width time, timer_cb cb) banked
                           1561 ;	-----------------------------------------
                           1562 ;	 function set_timer
                           1563 ;	-----------------------------------------
   00DD                    1564 _set_timer:
   00DD E5 82              1565 	mov	a,dpl
   00DF 90s00r4F           1566 	mov	dptr,#_set_timer_timer_1_1
   00E2 F0                 1567 	movx	@dptr,a
                    00E3   1568 	C$swtimers.c$179$1$1 ==.
                           1569 ;	..\driver\swtimers.c:179: ET0 = INTERRUPT_OFF;
   00E3 C2 A9              1570 	clr	_ET0
                    00E5   1571 	C$swtimers.c$180$1$1 ==.
                           1572 ;	..\driver\swtimers.c:180: swtimer[timer] = time;
   00E5 90s00r4F           1573 	mov	dptr,#_set_timer_timer_1_1
   00E8 E0                 1574 	movx	a,@dptr
   00E9 FA                 1575 	mov	r2,a
   00EA 25 E0              1576 	add	a,acc
   00EC 25 E0              1577 	add	a,acc
   00EE 24r00              1578 	add	a,#_swtimer
   00F0 FB                 1579 	mov	r3,a
   00F1 E4                 1580 	clr	a
   00F2 34s00              1581 	addc	a,#(_swtimer >> 8)
   00F4 FC                 1582 	mov	r4,a
   00F5 90s00r49           1583 	mov	dptr,#_set_timer_PARM_2
   00F8 E0                 1584 	movx	a,@dptr
   00F9 FD                 1585 	mov	r5,a
   00FA A3                 1586 	inc	dptr
   00FB E0                 1587 	movx	a,@dptr
   00FC FE                 1588 	mov	r6,a
   00FD A3                 1589 	inc	dptr
   00FE E0                 1590 	movx	a,@dptr
   00FF FF                 1591 	mov	r7,a
   0100 A3                 1592 	inc	dptr
   0101 E0                 1593 	movx	a,@dptr
   0102 F8                 1594 	mov	r0,a
   0103 8B 82              1595 	mov	dpl,r3
   0105 8C 83              1596 	mov	dph,r4
   0107 ED                 1597 	mov	a,r5
   0108 F0                 1598 	movx	@dptr,a
   0109 A3                 1599 	inc	dptr
   010A EE                 1600 	mov	a,r6
   010B F0                 1601 	movx	@dptr,a
   010C A3                 1602 	inc	dptr
   010D EF                 1603 	mov	a,r7
   010E F0                 1604 	movx	@dptr,a
   010F A3                 1605 	inc	dptr
   0110 E8                 1606 	mov	a,r0
   0111 F0                 1607 	movx	@dptr,a
                    0112   1608 	C$swtimers.c$181$1$1 ==.
                           1609 ;	..\driver\swtimers.c:181: timer_cbs[timer] = cb;
   0112 EA                 1610 	mov	a,r2
   0113 2A                 1611 	add	a,r2
   0114 24r32              1612 	add	a,#_timer_cbs
   0116 FB                 1613 	mov	r3,a
   0117 E4                 1614 	clr	a
   0118 34s00              1615 	addc	a,#(_timer_cbs >> 8)
   011A FC                 1616 	mov	r4,a
   011B 90s00r4D           1617 	mov	dptr,#_set_timer_PARM_3
   011E E0                 1618 	movx	a,@dptr
   011F FD                 1619 	mov	r5,a
   0120 A3                 1620 	inc	dptr
   0121 E0                 1621 	movx	a,@dptr
   0122 FE                 1622 	mov	r6,a
   0123 8B 82              1623 	mov	dpl,r3
   0125 8C 83              1624 	mov	dph,r4
   0127 ED                 1625 	mov	a,r5
   0128 F0                 1626 	movx	@dptr,a
   0129 A3                 1627 	inc	dptr
   012A EE                 1628 	mov	a,r6
   012B F0                 1629 	movx	@dptr,a
                    012C   1630 	C$swtimers.c$182$1$1 ==.
                           1631 ;	..\driver\swtimers.c:182: timer_table[timer] = TMR_RUNNING;
   012C EA                 1632 	mov	a,r2
   012D 24r28              1633 	add	a,#_timer_table
   012F F5 82              1634 	mov	dpl,a
   0131 E4                 1635 	clr	a
   0132 34s00              1636 	addc	a,#(_timer_table >> 8)
   0134 F5 83              1637 	mov	dph,a
   0136 E4                 1638 	clr	a
   0137 F0                 1639 	movx	@dptr,a
                    0138   1640 	C$swtimers.c$183$1$1 ==.
                           1641 ;	..\driver\swtimers.c:183: ET0 = INTERRUPT_ON;
   0138 D2 A9              1642 	setb	_ET0
                    013A   1643 	C$swtimers.c$184$1$1 ==.
                    013A   1644 	XG$set_timer$0$0 ==.
   013A 02s00r00           1645 	ljmp	__sdcc_banked_ret
                           1646 ;------------------------------------------------------------
                           1647 ;Allocation info for local variables in function 'set_timer_cnt'
                           1648 ;------------------------------------------------------------
                           1649 ;time                      Allocated with name '_set_timer_cnt_PARM_2'
                           1650 ;timer                     Allocated with name '_set_timer_cnt_timer_1_1'
                           1651 ;------------------------------------------------------------
                    013D   1652 	G$set_timer_cnt$0$0 ==.
                    013D   1653 	C$swtimers.c$189$1$1 ==.
                           1654 ;	..\driver\swtimers.c:189: void set_timer_cnt(u8_t timer, counter_width time) banked
                           1655 ;	-----------------------------------------
                           1656 ;	 function set_timer_cnt
                           1657 ;	-----------------------------------------
   013D                    1658 _set_timer_cnt:
   013D E5 82              1659 	mov	a,dpl
   013F 90s00r54           1660 	mov	dptr,#_set_timer_cnt_timer_1_1
   0142 F0                 1661 	movx	@dptr,a
                    0143   1662 	C$swtimers.c$191$1$1 ==.
                           1663 ;	..\driver\swtimers.c:191: ET0 = INTERRUPT_OFF;
   0143 C2 A9              1664 	clr	_ET0
                    0145   1665 	C$swtimers.c$192$1$1 ==.
                           1666 ;	..\driver\swtimers.c:192: swtimer[timer] = time;
   0145 90s00r54           1667 	mov	dptr,#_set_timer_cnt_timer_1_1
   0148 E0                 1668 	movx	a,@dptr
   0149 25 E0              1669 	add	a,acc
   014B 25 E0              1670 	add	a,acc
   014D 24r00              1671 	add	a,#_swtimer
   014F FA                 1672 	mov	r2,a
   0150 E4                 1673 	clr	a
   0151 34s00              1674 	addc	a,#(_swtimer >> 8)
   0153 FB                 1675 	mov	r3,a
   0154 90s00r50           1676 	mov	dptr,#_set_timer_cnt_PARM_2
   0157 E0                 1677 	movx	a,@dptr
   0158 FC                 1678 	mov	r4,a
   0159 A3                 1679 	inc	dptr
   015A E0                 1680 	movx	a,@dptr
   015B FD                 1681 	mov	r5,a
   015C A3                 1682 	inc	dptr
   015D E0                 1683 	movx	a,@dptr
   015E FE                 1684 	mov	r6,a
   015F A3                 1685 	inc	dptr
   0160 E0                 1686 	movx	a,@dptr
   0161 FF                 1687 	mov	r7,a
   0162 8A 82              1688 	mov	dpl,r2
   0164 8B 83              1689 	mov	dph,r3
   0166 EC                 1690 	mov	a,r4
   0167 F0                 1691 	movx	@dptr,a
   0168 A3                 1692 	inc	dptr
   0169 ED                 1693 	mov	a,r5
   016A F0                 1694 	movx	@dptr,a
   016B A3                 1695 	inc	dptr
   016C EE                 1696 	mov	a,r6
   016D F0                 1697 	movx	@dptr,a
   016E A3                 1698 	inc	dptr
   016F EF                 1699 	mov	a,r7
   0170 F0                 1700 	movx	@dptr,a
                    0171   1701 	C$swtimers.c$193$1$1 ==.
                           1702 ;	..\driver\swtimers.c:193: ET0 = INTERRUPT_ON;
   0171 D2 A9              1703 	setb	_ET0
                    0173   1704 	C$swtimers.c$194$1$1 ==.
                    0173   1705 	XG$set_timer_cnt$0$0 ==.
   0173 02s00r00           1706 	ljmp	__sdcc_banked_ret
                           1707 ;------------------------------------------------------------
                           1708 ;Allocation info for local variables in function 'get_timer'
                           1709 ;------------------------------------------------------------
                           1710 ;timer                     Allocated with name '_get_timer_timer_1_1'
                           1711 ;value                     Allocated with name '_get_timer_value_1_1'
                           1712 ;------------------------------------------------------------
                    0176   1713 	G$get_timer$0$0 ==.
                    0176   1714 	C$swtimers.c$199$1$1 ==.
                           1715 ;	..\driver\swtimers.c:199: counter_width get_timer(u8_t timer) banked
                           1716 ;	-----------------------------------------
                           1717 ;	 function get_timer
                           1718 ;	-----------------------------------------
   0176                    1719 _get_timer:
   0176 E5 82              1720 	mov	a,dpl
   0178 90s00r55           1721 	mov	dptr,#_get_timer_timer_1_1
   017B F0                 1722 	movx	@dptr,a
                    017C   1723 	C$swtimers.c$203$1$1 ==.
                           1724 ;	..\driver\swtimers.c:203: ET0 = INTERRUPT_OFF;
   017C C2 A9              1725 	clr	_ET0
                    017E   1726 	C$swtimers.c$204$1$1 ==.
                           1727 ;	..\driver\swtimers.c:204: value = swtimer[timer];
   017E 90s00r55           1728 	mov	dptr,#_get_timer_timer_1_1
   0181 E0                 1729 	movx	a,@dptr
   0182 25 E0              1730 	add	a,acc
   0184 25 E0              1731 	add	a,acc
   0186 24r00              1732 	add	a,#_swtimer
   0188 F5 82              1733 	mov	dpl,a
   018A E4                 1734 	clr	a
   018B 34s00              1735 	addc	a,#(_swtimer >> 8)
   018D F5 83              1736 	mov	dph,a
   018F E0                 1737 	movx	a,@dptr
   0190 FA                 1738 	mov	r2,a
   0191 A3                 1739 	inc	dptr
   0192 E0                 1740 	movx	a,@dptr
   0193 FB                 1741 	mov	r3,a
   0194 A3                 1742 	inc	dptr
   0195 E0                 1743 	movx	a,@dptr
   0196 FC                 1744 	mov	r4,a
   0197 A3                 1745 	inc	dptr
   0198 E0                 1746 	movx	a,@dptr
   0199 FD                 1747 	mov	r5,a
                    019A   1748 	C$swtimers.c$205$1$1 ==.
                           1749 ;	..\driver\swtimers.c:205: ET0 = INTERRUPT_ON;
   019A D2 A9              1750 	setb	_ET0
                    019C   1751 	C$swtimers.c$207$1$1 ==.
                           1752 ;	..\driver\swtimers.c:207: return value;
   019C 8A 82              1753 	mov	dpl,r2
   019E 8B 83              1754 	mov	dph,r3
   01A0 8C F0              1755 	mov	b,r4
   01A2 ED                 1756 	mov	a,r5
                    01A3   1757 	C$swtimers.c$208$1$1 ==.
                    01A3   1758 	XG$get_timer$0$0 ==.
   01A3 02s00r00           1759 	ljmp	__sdcc_banked_ret
                           1760 ;------------------------------------------------------------
                           1761 ;Allocation info for local variables in function 'get_timer_status'
                           1762 ;------------------------------------------------------------
                           1763 ;timer                     Allocated with name '_get_timer_status_timer_1_1'
                           1764 ;------------------------------------------------------------
                    01A6   1765 	G$get_timer_status$0$0 ==.
                    01A6   1766 	C$swtimers.c$213$1$1 ==.
                           1767 ;	..\driver\swtimers.c:213: u8_t get_timer_status(u8_t timer) banked
                           1768 ;	-----------------------------------------
                           1769 ;	 function get_timer_status
                           1770 ;	-----------------------------------------
   01A6                    1771 _get_timer_status:
   01A6 E5 82              1772 	mov	a,dpl
   01A8 90s00r56           1773 	mov	dptr,#_get_timer_status_timer_1_1
   01AB F0                 1774 	movx	@dptr,a
                    01AC   1775 	C$swtimers.c$215$1$1 ==.
                           1776 ;	..\driver\swtimers.c:215: return timer_table[timer];
   01AC 90s00r56           1777 	mov	dptr,#_get_timer_status_timer_1_1
   01AF E0                 1778 	movx	a,@dptr
   01B0 24r28              1779 	add	a,#_timer_table
   01B2 F5 82              1780 	mov	dpl,a
   01B4 E4                 1781 	clr	a
   01B5 34s00              1782 	addc	a,#(_timer_table >> 8)
   01B7 F5 83              1783 	mov	dph,a
   01B9 E0                 1784 	movx	a,@dptr
   01BA FA                 1785 	mov	r2,a
   01BB F5 82              1786 	mov	dpl,a
                    01BD   1787 	C$swtimers.c$216$1$1 ==.
                    01BD   1788 	XG$get_timer_status$0$0 ==.
   01BD 02s00r00           1789 	ljmp	__sdcc_banked_ret
                           1790 ;------------------------------------------------------------
                           1791 ;Allocation info for local variables in function 'stop_timer'
                           1792 ;------------------------------------------------------------
                           1793 ;timer                     Allocated with name '_stop_timer_timer_1_1'
                           1794 ;------------------------------------------------------------
                    01C0   1795 	G$stop_timer$0$0 ==.
                    01C0   1796 	C$swtimers.c$221$1$1 ==.
                           1797 ;	..\driver\swtimers.c:221: void stop_timer(u8_t timer) banked
                           1798 ;	-----------------------------------------
                           1799 ;	 function stop_timer
                           1800 ;	-----------------------------------------
   01C0                    1801 _stop_timer:
   01C0 E5 82              1802 	mov	a,dpl
   01C2 90s00r57           1803 	mov	dptr,#_stop_timer_timer_1_1
   01C5 F0                 1804 	movx	@dptr,a
                    01C6   1805 	C$swtimers.c$223$1$1 ==.
                           1806 ;	..\driver\swtimers.c:223: ET0 = INTERRUPT_OFF;
   01C6 C2 A9              1807 	clr	_ET0
                    01C8   1808 	C$swtimers.c$224$1$1 ==.
                           1809 ;	..\driver\swtimers.c:224: timer_table[timer] = TMR_STOPPED;
   01C8 90s00r57           1810 	mov	dptr,#_stop_timer_timer_1_1
   01CB E0                 1811 	movx	a,@dptr
   01CC FA                 1812 	mov	r2,a
   01CD 24r28              1813 	add	a,#_timer_table
   01CF F5 82              1814 	mov	dpl,a
   01D1 E4                 1815 	clr	a
   01D2 34s00              1816 	addc	a,#(_timer_table >> 8)
   01D4 F5 83              1817 	mov	dph,a
   01D6 74 03              1818 	mov	a,#0x03
   01D8 F0                 1819 	movx	@dptr,a
                    01D9   1820 	C$swtimers.c$225$1$1 ==.
                           1821 ;	..\driver\swtimers.c:225: ET0 = INTERRUPT_ON;
   01D9 D2 A9              1822 	setb	_ET0
                    01DB   1823 	C$swtimers.c$226$1$1 ==.
                    01DB   1824 	XG$stop_timer$0$0 ==.
   01DB 02s00r00           1825 	ljmp	__sdcc_banked_ret
                           1826 ;------------------------------------------------------------
                           1827 ;Allocation info for local variables in function 'start_timer'
                           1828 ;------------------------------------------------------------
                           1829 ;timer                     Allocated with name '_start_timer_timer_1_1'
                           1830 ;------------------------------------------------------------
                    01DE   1831 	G$start_timer$0$0 ==.
                    01DE   1832 	C$swtimers.c$231$1$1 ==.
                           1833 ;	..\driver\swtimers.c:231: void start_timer(u8_t timer) banked
                           1834 ;	-----------------------------------------
                           1835 ;	 function start_timer
                           1836 ;	-----------------------------------------
   01DE                    1837 _start_timer:
   01DE E5 82              1838 	mov	a,dpl
   01E0 90s00r58           1839 	mov	dptr,#_start_timer_timer_1_1
   01E3 F0                 1840 	movx	@dptr,a
                    01E4   1841 	C$swtimers.c$233$1$1 ==.
                           1842 ;	..\driver\swtimers.c:233: ET0 = INTERRUPT_OFF;
   01E4 C2 A9              1843 	clr	_ET0
                    01E6   1844 	C$swtimers.c$234$1$1 ==.
                           1845 ;	..\driver\swtimers.c:234: timer_table[timer] = TMR_RUNNING;
   01E6 90s00r58           1846 	mov	dptr,#_start_timer_timer_1_1
   01E9 E0                 1847 	movx	a,@dptr
   01EA FA                 1848 	mov	r2,a
   01EB 24r28              1849 	add	a,#_timer_table
   01ED F5 82              1850 	mov	dpl,a
   01EF E4                 1851 	clr	a
   01F0 34s00              1852 	addc	a,#(_timer_table >> 8)
   01F2 F5 83              1853 	mov	dph,a
   01F4 E4                 1854 	clr	a
   01F5 F0                 1855 	movx	@dptr,a
                    01F6   1856 	C$swtimers.c$235$1$1 ==.
                           1857 ;	..\driver\swtimers.c:235: ET0 = INTERRUPT_ON;
   01F6 D2 A9              1858 	setb	_ET0
                    01F8   1859 	C$swtimers.c$236$1$1 ==.
                    01F8   1860 	XG$start_timer$0$0 ==.
   01F8 02s00r00           1861 	ljmp	__sdcc_banked_ret
                           1862 ;------------------------------------------------------------
                           1863 ;Allocation info for local variables in function 'handle_kicker'
                           1864 ;------------------------------------------------------------
                           1865 ;i                         Allocated to registers r5 
                           1866 ;Kicker                    Allocated with name '_handle_kicker_Kicker_1_1'
                           1867 ;PT_YIELD_FLAG             Allocated with name '_handle_kicker_PT_YIELD_FLAG_2_2'
                           1868 ;------------------------------------------------------------
                    01FB   1869 	G$handle_kicker$0$0 ==.
                    01FB   1870 	C$swtimers.c$245$1$1 ==.
                           1871 ;	..\driver\swtimers.c:245: PT_THREAD(handle_kicker(struct kicker *Kicker) banked)
                           1872 ;	-----------------------------------------
                           1873 ;	 function handle_kicker
                           1874 ;	-----------------------------------------
   01FB                    1875 _handle_kicker:
   01FB AA F0              1876 	mov	r2,b
   01FD AB 83              1877 	mov	r3,dph
   01FF E5 82              1878 	mov	a,dpl
   0201 90s00r59           1879 	mov	dptr,#_handle_kicker_Kicker_1_1
   0204 F0                 1880 	movx	@dptr,a
   0205 A3                 1881 	inc	dptr
   0206 EB                 1882 	mov	a,r3
   0207 F0                 1883 	movx	@dptr,a
   0208 A3                 1884 	inc	dptr
   0209 EA                 1885 	mov	a,r2
   020A F0                 1886 	movx	@dptr,a
                    020B   1887 	C$swtimers.c$247$2$2 ==.
                           1888 ;	..\driver\swtimers.c:247: PT_BEGIN(&Kicker->pt);
   020B 90s00r59           1889 	mov	dptr,#_handle_kicker_Kicker_1_1
   020E E0                 1890 	movx	a,@dptr
   020F FA                 1891 	mov	r2,a
   0210 A3                 1892 	inc	dptr
   0211 E0                 1893 	movx	a,@dptr
   0212 FB                 1894 	mov	r3,a
   0213 A3                 1895 	inc	dptr
   0214 E0                 1896 	movx	a,@dptr
   0215 FC                 1897 	mov	r4,a
   0216 8A 82              1898 	mov	dpl,r2
   0218 8B 83              1899 	mov	dph,r3
   021A 8C F0              1900 	mov	b,r4
   021C 12s00r00           1901 	lcall	__gptrget
   021F FD                 1902 	mov	r5,a
   0220 A3                 1903 	inc	dptr
   0221 12s00r00           1904 	lcall	__gptrget
   0224 FE                 1905 	mov	r6,a
   0225 BD 00 05           1906 	cjne	r5,#0x00,00128$
   0228 BE 00 02           1907 	cjne	r6,#0x00,00128$
   022B 80 0B              1908 	sjmp	00111$
   022D                    1909 00128$:
   022D BD FC 05           1910 	cjne	r5,#0xFC,00129$
   0230 BE 00 02           1911 	cjne	r6,#0x00,00129$
   0233 80 1E              1912 	sjmp	00102$
   0235                    1913 00129$:
   0235 02s02rA7           1914 	ljmp	00113$
                    0238   1915 	C$swtimers.c$249$3$3 ==.
                           1916 ;	..\driver\swtimers.c:249: while (1)
   0238                    1917 00111$:
                    0238   1918 	C$swtimers.c$252$5$5 ==.
                           1919 ;	..\driver\swtimers.c:252: PT_WAIT_UNTIL(&Kicker->pt, (callback_kicker));
   0238 90s00r59           1920 	mov	dptr,#_handle_kicker_Kicker_1_1
   023B E0                 1921 	movx	a,@dptr
   023C FD                 1922 	mov	r5,a
   023D A3                 1923 	inc	dptr
   023E E0                 1924 	movx	a,@dptr
   023F FE                 1925 	mov	r6,a
   0240 A3                 1926 	inc	dptr
   0241 E0                 1927 	movx	a,@dptr
   0242 FF                 1928 	mov	r7,a
   0243 8D 82              1929 	mov	dpl,r5
   0245 8E 83              1930 	mov	dph,r6
   0247 8F F0              1931 	mov	b,r7
   0249 74 FC              1932 	mov	a,#0xFC
   024B 12s00r00           1933 	lcall	__gptrput
   024E A3                 1934 	inc	dptr
   024F E4                 1935 	clr	a
   0250 12s00r00           1936 	lcall	__gptrput
   0253                    1937 00102$:
   0253 20*00 05           1938 	jb	_callback_kicker,00106$
   0256 75 82 00           1939 	mov	dpl,#0x00
   0259 80 5E              1940 	sjmp	00118$
   025B                    1941 00106$:
                    025B   1942 	C$swtimers.c$254$4$4 ==.
                           1943 ;	..\driver\swtimers.c:254: ET0 = INTERRUPT_OFF;
   025B C2 A9              1944 	clr	_ET0
                    025D   1945 	C$swtimers.c$255$4$4 ==.
                           1946 ;	..\driver\swtimers.c:255: callback_kicker = 0;
   025D C2*00              1947 	clr	_callback_kicker
                    025F   1948 	C$swtimers.c$259$6$8 ==.
                           1949 ;	..\driver\swtimers.c:259: for (i=0 ; i<NUMBER_OF_SWTIMERS ; i++)
   025F 7D 00              1950 	mov	r5,#0x00
   0261                    1951 00114$:
   0261 BD 0A 00           1952 	cjne	r5,#0x0A,00131$
   0264                    1953 00131$:
   0264 50 3D              1954 	jnc	00117$
                    0266   1955 	C$swtimers.c$261$6$8 ==.
                           1956 ;	..\driver\swtimers.c:261: if (timer_table[i] == TMR_KICK)
   0266 ED                 1957 	mov	a,r5
   0267 24r28              1958 	add	a,#_timer_table
   0269 F5 82              1959 	mov	dpl,a
   026B E4                 1960 	clr	a
   026C 34s00              1961 	addc	a,#(_timer_table >> 8)
   026E F5 83              1962 	mov	dph,a
   0270 E0                 1963 	movx	a,@dptr
   0271 FE                 1964 	mov	r6,a
   0272 BE 04 2B           1965 	cjne	r6,#0x04,00116$
                    0275   1966 	C$swtimers.c$265$7$9 ==.
                           1967 ;	..\driver\swtimers.c:265: timer_cbs[i](i);
   0275 ED                 1968 	mov	a,r5
   0276 2D                 1969 	add	a,r5
   0277 24r32              1970 	add	a,#_timer_cbs
   0279 F5 82              1971 	mov	dpl,a
   027B E4                 1972 	clr	a
   027C 34s00              1973 	addc	a,#(_timer_cbs >> 8)
   027E F5 83              1974 	mov	dph,a
   0280 E0                 1975 	movx	a,@dptr
   0281 FE                 1976 	mov	r6,a
   0282 A3                 1977 	inc	dptr
   0283 E0                 1978 	movx	a,@dptr
   0284 FF                 1979 	mov	r7,a
   0285 C0 05              1980 	push	ar5
   0287 C0 06              1981 	push	ar6
   0289 C0 07              1982 	push	ar7
   028B 74r9A              1983 	mov	a,#00135$
   028D C0 E0              1984 	push	acc
   028F 74s02              1985 	mov	a,#(00135$ >> 8)
   0291 C0 E0              1986 	push	acc
   0293 C0 06              1987 	push	ar6
   0295 C0 07              1988 	push	ar7
   0297 8D 82              1989 	mov	dpl,r5
   0299 22                 1990 	ret
   029A                    1991 00135$:
   029A D0 07              1992 	pop	ar7
   029C D0 06              1993 	pop	ar6
   029E D0 05              1994 	pop	ar5
   02A0                    1995 00116$:
                    02A0   1996 	C$swtimers.c$259$5$7 ==.
                           1997 ;	..\driver\swtimers.c:259: for (i=0 ; i<NUMBER_OF_SWTIMERS ; i++)
   02A0 0D                 1998 	inc	r5
   02A1 80 BE              1999 	sjmp	00114$
   02A3                    2000 00117$:
                    02A3   2001 	C$swtimers.c$270$4$4 ==.
                           2002 ;	..\driver\swtimers.c:270: ET0 = INTERRUPT_ON;
   02A3 D2 A9              2003 	setb	_ET0
                    02A5   2004 	C$swtimers.c$272$2$2 ==.
                           2005 ;	..\driver\swtimers.c:272: PT_END(&Kicker->pt);
   02A5 80 91              2006 	sjmp	00111$
   02A7                    2007 00113$:
   02A7 8A 82              2008 	mov	dpl,r2
   02A9 8B 83              2009 	mov	dph,r3
   02AB 8C F0              2010 	mov	b,r4
   02AD E4                 2011 	clr	a
   02AE 12s00r00           2012 	lcall	__gptrput
   02B1 A3                 2013 	inc	dptr
   02B2 E4                 2014 	clr	a
   02B3 12s00r00           2015 	lcall	__gptrput
   02B6 75 82 02           2016 	mov	dpl,#0x02
   02B9                    2017 00118$:
                    02B9   2018 	C$swtimers.c$273$2$2 ==.
                    02B9   2019 	XG$handle_kicker$0$0 ==.
   02B9 02s00r00           2020 	ljmp	__sdcc_banked_ret
                           2021 	.area CSEG    (CODE)
                           2022 	.area CONST   (CODE)
                           2023 	.area XINIT   (CODE)
                    0000   2024 Fswtimers$__xinit_count$0$0 == .
   0000                    2025 __xinit__count:
   0000 00                 2026 	.db #0x00
                           2027 	.area CABS    (ABS,CODE)
