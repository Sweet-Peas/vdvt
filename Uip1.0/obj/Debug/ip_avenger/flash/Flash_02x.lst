                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.8.0 #5117 (Mar 23 2008) (MINGW32)
                              4 ; This file was generated Sun Jan 30 19:17:32 2011
                              5 ;--------------------------------------------------------
                              6 	.module Flash_02x
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _P7_7
                             13 	.globl _P7_6
                             14 	.globl _P7_5
                             15 	.globl _P7_4
                             16 	.globl _P7_3
                             17 	.globl _P7_2
                             18 	.globl _P7_1
                             19 	.globl _P7_0
                             20 	.globl _SPIF
                             21 	.globl _WCOL
                             22 	.globl _MODF
                             23 	.globl _RXOVRN
                             24 	.globl _NSSMD1
                             25 	.globl _NSSMD0
                             26 	.globl _TXBMT
                             27 	.globl _SPIEN
                             28 	.globl _P6_7
                             29 	.globl _P6_6
                             30 	.globl _P6_5
                             31 	.globl _P6_4
                             32 	.globl _P6_3
                             33 	.globl _P6_2
                             34 	.globl _P6_1
                             35 	.globl _P6_0
                             36 	.globl _AD2EN
                             37 	.globl _AD2TM
                             38 	.globl _AD2INT
                             39 	.globl _AD2BUSY
                             40 	.globl _AD2CM2
                             41 	.globl _AD2CM1
                             42 	.globl _AD2CM0
                             43 	.globl _AD2WINT
                             44 	.globl _AD0EN
                             45 	.globl _AD0TM
                             46 	.globl _AD0INT
                             47 	.globl _AD0BUSY
                             48 	.globl _AD0CM1
                             49 	.globl _AD0CM0
                             50 	.globl _AD0WINT
                             51 	.globl _AD0LJST
                             52 	.globl _P5_7
                             53 	.globl _P5_6
                             54 	.globl _P5_5
                             55 	.globl _P5_4
                             56 	.globl _P5_3
                             57 	.globl _P5_2
                             58 	.globl _P5_1
                             59 	.globl _P5_0
                             60 	.globl _CF
                             61 	.globl _CR
                             62 	.globl _CCF5
                             63 	.globl _CCF4
                             64 	.globl _CCF3
                             65 	.globl _CCF2
                             66 	.globl _CCF1
                             67 	.globl _CCF0
                             68 	.globl _CY
                             69 	.globl _AC
                             70 	.globl _F0
                             71 	.globl _RS1
                             72 	.globl _RS0
                             73 	.globl _OV
                             74 	.globl _F1
                             75 	.globl _P
                             76 	.globl _P4_7
                             77 	.globl _P4_6
                             78 	.globl _P4_5
                             79 	.globl _P4_4
                             80 	.globl _P4_3
                             81 	.globl _P4_2
                             82 	.globl _P4_1
                             83 	.globl _P4_0
                             84 	.globl _TF4
                             85 	.globl _EXF4
                             86 	.globl _EXEN4
                             87 	.globl _TR4
                             88 	.globl _CT4
                             89 	.globl _CPRL4
                             90 	.globl _TF3
                             91 	.globl _EXF3
                             92 	.globl _EXEN3
                             93 	.globl _TR3
                             94 	.globl _CT3
                             95 	.globl _CPRL3
                             96 	.globl _TF2
                             97 	.globl _EXF2
                             98 	.globl _EXEN2
                             99 	.globl _TR2
                            100 	.globl _CT2
                            101 	.globl _CPRL2
                            102 	.globl _MAC0HO
                            103 	.globl _MAC0Z
                            104 	.globl _MAC0SO
                            105 	.globl _MAC0N
                            106 	.globl _BUSY
                            107 	.globl _ENSMB
                            108 	.globl _STA
                            109 	.globl _STO
                            110 	.globl _SI
                            111 	.globl _AA
                            112 	.globl _SMBFTE
                            113 	.globl _SMBTOE
                            114 	.globl _PT2
                            115 	.globl _PS
                            116 	.globl _PS0
                            117 	.globl _PT1
                            118 	.globl _PX1
                            119 	.globl _PT0
                            120 	.globl _PX0
                            121 	.globl _P3_7
                            122 	.globl _P3_6
                            123 	.globl _P3_5
                            124 	.globl _P3_4
                            125 	.globl _P3_3
                            126 	.globl _P3_2
                            127 	.globl _P3_1
                            128 	.globl _P3_0
                            129 	.globl _EA
                            130 	.globl _ET2
                            131 	.globl _ES
                            132 	.globl _ES0
                            133 	.globl _ET1
                            134 	.globl _EX1
                            135 	.globl _ET0
                            136 	.globl _EX0
                            137 	.globl _P2_7
                            138 	.globl _P2_6
                            139 	.globl _P2_5
                            140 	.globl _P2_4
                            141 	.globl _P2_3
                            142 	.globl _P2_2
                            143 	.globl _P2_1
                            144 	.globl _P2_0
                            145 	.globl _S1MODE
                            146 	.globl _MCE1
                            147 	.globl _REN1
                            148 	.globl _TB81
                            149 	.globl _RB81
                            150 	.globl _TI1
                            151 	.globl _RI1
                            152 	.globl _SM00
                            153 	.globl _SM10
                            154 	.globl _SM20
                            155 	.globl _REN
                            156 	.globl _REN0
                            157 	.globl _TB80
                            158 	.globl _RB80
                            159 	.globl _TI
                            160 	.globl _TI0
                            161 	.globl _RI
                            162 	.globl _RI0
                            163 	.globl _P1_7
                            164 	.globl _P1_6
                            165 	.globl _P1_5
                            166 	.globl _P1_4
                            167 	.globl _P1_3
                            168 	.globl _P1_2
                            169 	.globl _P1_1
                            170 	.globl _P1_0
                            171 	.globl _FLHBUSY
                            172 	.globl _CP1EN
                            173 	.globl _CP1OUT
                            174 	.globl _CP1RIF
                            175 	.globl _CP1FIF
                            176 	.globl _CP1HYP1
                            177 	.globl _CP1HYP0
                            178 	.globl _CP1HYN1
                            179 	.globl _CP1HYN0
                            180 	.globl _CP0EN
                            181 	.globl _CP0OUT
                            182 	.globl _CP0RIF
                            183 	.globl _CP0FIF
                            184 	.globl _CP0HYP1
                            185 	.globl _CP0HYP0
                            186 	.globl _CP0HYN1
                            187 	.globl _CP0HYN0
                            188 	.globl _TF1
                            189 	.globl _TR1
                            190 	.globl _TF0
                            191 	.globl _TR0
                            192 	.globl _IE1
                            193 	.globl _IT1
                            194 	.globl _IE0
                            195 	.globl _IT0
                            196 	.globl _P0_7
                            197 	.globl _P0_6
                            198 	.globl _P0_5
                            199 	.globl _P0_4
                            200 	.globl _P0_3
                            201 	.globl _P0_2
                            202 	.globl _P0_1
                            203 	.globl _P0_0
                            204 	.globl _MAC0RND
                            205 	.globl _MAC0ACC
                            206 	.globl _MAC0A
                            207 	.globl _RCAP4
                            208 	.globl _TMR4
                            209 	.globl _DAC1
                            210 	.globl _RCAP3
                            211 	.globl _TMR3
                            212 	.globl _PCA0CP5
                            213 	.globl _PCA0CP4
                            214 	.globl _PCA0CP3
                            215 	.globl _PCA0CP2
                            216 	.globl _PCA0CP1
                            217 	.globl _PCA0CP0
                            218 	.globl _PCA0
                            219 	.globl _DAC0
                            220 	.globl _ADC0LT
                            221 	.globl _ADC0GT
                            222 	.globl _ADC0
                            223 	.globl _RCAP2
                            224 	.globl _TMR2
                            225 	.globl _TMR1
                            226 	.globl _TMR0
                            227 	.globl _P7
                            228 	.globl _P6
                            229 	.globl _XBR2
                            230 	.globl _XBR1
                            231 	.globl _XBR0
                            232 	.globl _P5
                            233 	.globl _P4
                            234 	.globl _FLACL
                            235 	.globl _P1MDIN
                            236 	.globl _P3MDOUT
                            237 	.globl _P2MDOUT
                            238 	.globl _P1MDOUT
                            239 	.globl _P0MDOUT
                            240 	.globl _CCH0LC
                            241 	.globl _CCH0TN
                            242 	.globl _CCH0CN
                            243 	.globl _P7MDOUT
                            244 	.globl _P6MDOUT
                            245 	.globl _P5MDOUT
                            246 	.globl _P4MDOUT
                            247 	.globl _CCH0MA
                            248 	.globl _CLKSEL
                            249 	.globl _SFRPGCN
                            250 	.globl _PLL0FLT
                            251 	.globl _PLL0MUL
                            252 	.globl _PLL0DIV
                            253 	.globl _OSCXCN
                            254 	.globl _OSCICL
                            255 	.globl _OSCICN
                            256 	.globl _PLL0CN
                            257 	.globl _FLSTAT
                            258 	.globl _MAC0RNDH
                            259 	.globl _MAC0RNDL
                            260 	.globl _MAC0CF
                            261 	.globl _MAC0AH
                            262 	.globl _MAC0AL
                            263 	.globl _MAC0STA
                            264 	.globl _MAC0OVR
                            265 	.globl _MAC0ACC3
                            266 	.globl _MAC0ACC2
                            267 	.globl _MAC0ACC1
                            268 	.globl _MAC0ACC0
                            269 	.globl _MAC0BH
                            270 	.globl _MAC0BL
                            271 	.globl _ADC2CN
                            272 	.globl _TMR4H
                            273 	.globl _TMR4L
                            274 	.globl _RCAP4H
                            275 	.globl _RCAP4L
                            276 	.globl _TMR4CF
                            277 	.globl _TMR4CN
                            278 	.globl _ADC2LT
                            279 	.globl _ADC2GT
                            280 	.globl _ADC2
                            281 	.globl _ADC2CF
                            282 	.globl _AMX2SL
                            283 	.globl _AMX2CF
                            284 	.globl _CPT1MD
                            285 	.globl _CPT1CN
                            286 	.globl _DAC1CN
                            287 	.globl _DAC1H
                            288 	.globl _DAC1L
                            289 	.globl _TMR3H
                            290 	.globl _TMR3L
                            291 	.globl _RCAP3H
                            292 	.globl _RCAP3L
                            293 	.globl _TMR3CF
                            294 	.globl _TMR3CN
                            295 	.globl _SBUF1
                            296 	.globl _SCON1
                            297 	.globl _CPT0MD
                            298 	.globl _CPT0CN
                            299 	.globl _PCA0CPH1
                            300 	.globl _PCA0CPL1
                            301 	.globl _PCA0CPH0
                            302 	.globl _PCA0CPL0
                            303 	.globl _PCA0H
                            304 	.globl _PCA0L
                            305 	.globl _SPI0CN
                            306 	.globl _RSTSRC
                            307 	.globl _PCA0CPH4
                            308 	.globl _PCA0CPL4
                            309 	.globl _PCA0CPH3
                            310 	.globl _PCA0CPL3
                            311 	.globl _PCA0CPH2
                            312 	.globl _PCA0CPL2
                            313 	.globl _ADC0CN
                            314 	.globl _PCA0CPH5
                            315 	.globl _PCA0CPL5
                            316 	.globl _PCA0CPM5
                            317 	.globl _PCA0CPM4
                            318 	.globl _PCA0CPM3
                            319 	.globl _PCA0CPM2
                            320 	.globl _PCA0CPM1
                            321 	.globl _PCA0CPM0
                            322 	.globl _PCA0MD
                            323 	.globl _PCA0CN
                            324 	.globl _DAC0CN
                            325 	.globl _DAC0H
                            326 	.globl _DAC0L
                            327 	.globl _REF0CN
                            328 	.globl _SMB0CR
                            329 	.globl _TH2
                            330 	.globl _TMR2H
                            331 	.globl _TL2
                            332 	.globl _TMR2L
                            333 	.globl _RCAP2H
                            334 	.globl _RCAP2L
                            335 	.globl _TMR2CF
                            336 	.globl _TMR2CN
                            337 	.globl _ADC0LTH
                            338 	.globl _ADC0LTL
                            339 	.globl _ADC0GTH
                            340 	.globl _ADC0GTL
                            341 	.globl _SMB0ADR
                            342 	.globl _SMB0DAT
                            343 	.globl _SMB0STA
                            344 	.globl _SMB0CN
                            345 	.globl _ADC0H
                            346 	.globl _ADC0L
                            347 	.globl _ADC0CF
                            348 	.globl _AMX0SL
                            349 	.globl _AMX0CF
                            350 	.globl _SADEN0
                            351 	.globl _FLSCL
                            352 	.globl _SADDR0
                            353 	.globl _EMI0CF
                            354 	.globl __XPAGE
                            355 	.globl _EMI0CN
                            356 	.globl _EMI0TC
                            357 	.globl _SPI0CKR
                            358 	.globl _SPI0DAT
                            359 	.globl _SPI0CFG
                            360 	.globl _SBUF
                            361 	.globl _SBUF0
                            362 	.globl _SCON
                            363 	.globl _SCON0
                            364 	.globl _SSTA0
                            365 	.globl _PSCTL
                            366 	.globl _CKCON
                            367 	.globl _TH1
                            368 	.globl _TH0
                            369 	.globl _TL1
                            370 	.globl _TL0
                            371 	.globl _TMOD
                            372 	.globl _TCON
                            373 	.globl _WDTCN
                            374 	.globl _EIP2
                            375 	.globl _EIP1
                            376 	.globl _B
                            377 	.globl _EIE2
                            378 	.globl _EIE1
                            379 	.globl _ACC
                            380 	.globl _PSW
                            381 	.globl _IP
                            382 	.globl _PSBANK
                            383 	.globl _P3
                            384 	.globl _IE
                            385 	.globl _P2
                            386 	.globl _P1
                            387 	.globl _PCON
                            388 	.globl _SFRLAST
                            389 	.globl _SFRNEXT
                            390 	.globl _SFRPAGE
                            391 	.globl _DPH
                            392 	.globl _DPL
                            393 	.globl _SP
                            394 	.globl _P0
                            395 	.globl _read_flash
                            396 	.globl _write_config_to_flash
                            397 	.globl _validate_config_flash
                            398 ;--------------------------------------------------------
                            399 ; special function registers
                            400 ;--------------------------------------------------------
                            401 	.area RSEG    (DATA)
                    0080    402 G$P0$0$0 == 0x0080
                    0080    403 _P0	=	0x0080
                    0081    404 G$SP$0$0 == 0x0081
                    0081    405 _SP	=	0x0081
                    0082    406 G$DPL$0$0 == 0x0082
                    0082    407 _DPL	=	0x0082
                    0083    408 G$DPH$0$0 == 0x0083
                    0083    409 _DPH	=	0x0083
                    0084    410 G$SFRPAGE$0$0 == 0x0084
                    0084    411 _SFRPAGE	=	0x0084
                    0085    412 G$SFRNEXT$0$0 == 0x0085
                    0085    413 _SFRNEXT	=	0x0085
                    0086    414 G$SFRLAST$0$0 == 0x0086
                    0086    415 _SFRLAST	=	0x0086
                    0087    416 G$PCON$0$0 == 0x0087
                    0087    417 _PCON	=	0x0087
                    0090    418 G$P1$0$0 == 0x0090
                    0090    419 _P1	=	0x0090
                    00A0    420 G$P2$0$0 == 0x00a0
                    00A0    421 _P2	=	0x00a0
                    00A8    422 G$IE$0$0 == 0x00a8
                    00A8    423 _IE	=	0x00a8
                    00B0    424 G$P3$0$0 == 0x00b0
                    00B0    425 _P3	=	0x00b0
                    00B1    426 G$PSBANK$0$0 == 0x00b1
                    00B1    427 _PSBANK	=	0x00b1
                    00B8    428 G$IP$0$0 == 0x00b8
                    00B8    429 _IP	=	0x00b8
                    00D0    430 G$PSW$0$0 == 0x00d0
                    00D0    431 _PSW	=	0x00d0
                    00E0    432 G$ACC$0$0 == 0x00e0
                    00E0    433 _ACC	=	0x00e0
                    00E6    434 G$EIE1$0$0 == 0x00e6
                    00E6    435 _EIE1	=	0x00e6
                    00E7    436 G$EIE2$0$0 == 0x00e7
                    00E7    437 _EIE2	=	0x00e7
                    00F0    438 G$B$0$0 == 0x00f0
                    00F0    439 _B	=	0x00f0
                    00F6    440 G$EIP1$0$0 == 0x00f6
                    00F6    441 _EIP1	=	0x00f6
                    00F7    442 G$EIP2$0$0 == 0x00f7
                    00F7    443 _EIP2	=	0x00f7
                    00FF    444 G$WDTCN$0$0 == 0x00ff
                    00FF    445 _WDTCN	=	0x00ff
                    0088    446 G$TCON$0$0 == 0x0088
                    0088    447 _TCON	=	0x0088
                    0089    448 G$TMOD$0$0 == 0x0089
                    0089    449 _TMOD	=	0x0089
                    008A    450 G$TL0$0$0 == 0x008a
                    008A    451 _TL0	=	0x008a
                    008B    452 G$TL1$0$0 == 0x008b
                    008B    453 _TL1	=	0x008b
                    008C    454 G$TH0$0$0 == 0x008c
                    008C    455 _TH0	=	0x008c
                    008D    456 G$TH1$0$0 == 0x008d
                    008D    457 _TH1	=	0x008d
                    008E    458 G$CKCON$0$0 == 0x008e
                    008E    459 _CKCON	=	0x008e
                    008F    460 G$PSCTL$0$0 == 0x008f
                    008F    461 _PSCTL	=	0x008f
                    0091    462 G$SSTA0$0$0 == 0x0091
                    0091    463 _SSTA0	=	0x0091
                    0098    464 G$SCON0$0$0 == 0x0098
                    0098    465 _SCON0	=	0x0098
                    0098    466 G$SCON$0$0 == 0x0098
                    0098    467 _SCON	=	0x0098
                    0099    468 G$SBUF0$0$0 == 0x0099
                    0099    469 _SBUF0	=	0x0099
                    0099    470 G$SBUF$0$0 == 0x0099
                    0099    471 _SBUF	=	0x0099
                    009A    472 G$SPI0CFG$0$0 == 0x009a
                    009A    473 _SPI0CFG	=	0x009a
                    009B    474 G$SPI0DAT$0$0 == 0x009b
                    009B    475 _SPI0DAT	=	0x009b
                    009D    476 G$SPI0CKR$0$0 == 0x009d
                    009D    477 _SPI0CKR	=	0x009d
                    00A1    478 G$EMI0TC$0$0 == 0x00a1
                    00A1    479 _EMI0TC	=	0x00a1
                    00A2    480 G$EMI0CN$0$0 == 0x00a2
                    00A2    481 _EMI0CN	=	0x00a2
                    00A2    482 G$_XPAGE$0$0 == 0x00a2
                    00A2    483 __XPAGE	=	0x00a2
                    00A3    484 G$EMI0CF$0$0 == 0x00a3
                    00A3    485 _EMI0CF	=	0x00a3
                    00A9    486 G$SADDR0$0$0 == 0x00a9
                    00A9    487 _SADDR0	=	0x00a9
                    00B7    488 G$FLSCL$0$0 == 0x00b7
                    00B7    489 _FLSCL	=	0x00b7
                    00B9    490 G$SADEN0$0$0 == 0x00b9
                    00B9    491 _SADEN0	=	0x00b9
                    00BA    492 G$AMX0CF$0$0 == 0x00ba
                    00BA    493 _AMX0CF	=	0x00ba
                    00BB    494 G$AMX0SL$0$0 == 0x00bb
                    00BB    495 _AMX0SL	=	0x00bb
                    00BC    496 G$ADC0CF$0$0 == 0x00bc
                    00BC    497 _ADC0CF	=	0x00bc
                    00BE    498 G$ADC0L$0$0 == 0x00be
                    00BE    499 _ADC0L	=	0x00be
                    00BF    500 G$ADC0H$0$0 == 0x00bf
                    00BF    501 _ADC0H	=	0x00bf
                    00C0    502 G$SMB0CN$0$0 == 0x00c0
                    00C0    503 _SMB0CN	=	0x00c0
                    00C1    504 G$SMB0STA$0$0 == 0x00c1
                    00C1    505 _SMB0STA	=	0x00c1
                    00C2    506 G$SMB0DAT$0$0 == 0x00c2
                    00C2    507 _SMB0DAT	=	0x00c2
                    00C3    508 G$SMB0ADR$0$0 == 0x00c3
                    00C3    509 _SMB0ADR	=	0x00c3
                    00C4    510 G$ADC0GTL$0$0 == 0x00c4
                    00C4    511 _ADC0GTL	=	0x00c4
                    00C5    512 G$ADC0GTH$0$0 == 0x00c5
                    00C5    513 _ADC0GTH	=	0x00c5
                    00C6    514 G$ADC0LTL$0$0 == 0x00c6
                    00C6    515 _ADC0LTL	=	0x00c6
                    00C7    516 G$ADC0LTH$0$0 == 0x00c7
                    00C7    517 _ADC0LTH	=	0x00c7
                    00C8    518 G$TMR2CN$0$0 == 0x00c8
                    00C8    519 _TMR2CN	=	0x00c8
                    00C9    520 G$TMR2CF$0$0 == 0x00c9
                    00C9    521 _TMR2CF	=	0x00c9
                    00CA    522 G$RCAP2L$0$0 == 0x00ca
                    00CA    523 _RCAP2L	=	0x00ca
                    00CB    524 G$RCAP2H$0$0 == 0x00cb
                    00CB    525 _RCAP2H	=	0x00cb
                    00CC    526 G$TMR2L$0$0 == 0x00cc
                    00CC    527 _TMR2L	=	0x00cc
                    00CC    528 G$TL2$0$0 == 0x00cc
                    00CC    529 _TL2	=	0x00cc
                    00CD    530 G$TMR2H$0$0 == 0x00cd
                    00CD    531 _TMR2H	=	0x00cd
                    00CD    532 G$TH2$0$0 == 0x00cd
                    00CD    533 _TH2	=	0x00cd
                    00CF    534 G$SMB0CR$0$0 == 0x00cf
                    00CF    535 _SMB0CR	=	0x00cf
                    00D1    536 G$REF0CN$0$0 == 0x00d1
                    00D1    537 _REF0CN	=	0x00d1
                    00D2    538 G$DAC0L$0$0 == 0x00d2
                    00D2    539 _DAC0L	=	0x00d2
                    00D3    540 G$DAC0H$0$0 == 0x00d3
                    00D3    541 _DAC0H	=	0x00d3
                    00D4    542 G$DAC0CN$0$0 == 0x00d4
                    00D4    543 _DAC0CN	=	0x00d4
                    00D8    544 G$PCA0CN$0$0 == 0x00d8
                    00D8    545 _PCA0CN	=	0x00d8
                    00D9    546 G$PCA0MD$0$0 == 0x00d9
                    00D9    547 _PCA0MD	=	0x00d9
                    00DA    548 G$PCA0CPM0$0$0 == 0x00da
                    00DA    549 _PCA0CPM0	=	0x00da
                    00DB    550 G$PCA0CPM1$0$0 == 0x00db
                    00DB    551 _PCA0CPM1	=	0x00db
                    00DC    552 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    553 _PCA0CPM2	=	0x00dc
                    00DD    554 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    555 _PCA0CPM3	=	0x00dd
                    00DE    556 G$PCA0CPM4$0$0 == 0x00de
                    00DE    557 _PCA0CPM4	=	0x00de
                    00DF    558 G$PCA0CPM5$0$0 == 0x00df
                    00DF    559 _PCA0CPM5	=	0x00df
                    00E1    560 G$PCA0CPL5$0$0 == 0x00e1
                    00E1    561 _PCA0CPL5	=	0x00e1
                    00E2    562 G$PCA0CPH5$0$0 == 0x00e2
                    00E2    563 _PCA0CPH5	=	0x00e2
                    00E8    564 G$ADC0CN$0$0 == 0x00e8
                    00E8    565 _ADC0CN	=	0x00e8
                    00E9    566 G$PCA0CPL2$0$0 == 0x00e9
                    00E9    567 _PCA0CPL2	=	0x00e9
                    00EA    568 G$PCA0CPH2$0$0 == 0x00ea
                    00EA    569 _PCA0CPH2	=	0x00ea
                    00EB    570 G$PCA0CPL3$0$0 == 0x00eb
                    00EB    571 _PCA0CPL3	=	0x00eb
                    00EC    572 G$PCA0CPH3$0$0 == 0x00ec
                    00EC    573 _PCA0CPH3	=	0x00ec
                    00ED    574 G$PCA0CPL4$0$0 == 0x00ed
                    00ED    575 _PCA0CPL4	=	0x00ed
                    00EE    576 G$PCA0CPH4$0$0 == 0x00ee
                    00EE    577 _PCA0CPH4	=	0x00ee
                    00EF    578 G$RSTSRC$0$0 == 0x00ef
                    00EF    579 _RSTSRC	=	0x00ef
                    00F8    580 G$SPI0CN$0$0 == 0x00f8
                    00F8    581 _SPI0CN	=	0x00f8
                    00F9    582 G$PCA0L$0$0 == 0x00f9
                    00F9    583 _PCA0L	=	0x00f9
                    00FA    584 G$PCA0H$0$0 == 0x00fa
                    00FA    585 _PCA0H	=	0x00fa
                    00FB    586 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    587 _PCA0CPL0	=	0x00fb
                    00FC    588 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    589 _PCA0CPH0	=	0x00fc
                    00FD    590 G$PCA0CPL1$0$0 == 0x00fd
                    00FD    591 _PCA0CPL1	=	0x00fd
                    00FE    592 G$PCA0CPH1$0$0 == 0x00fe
                    00FE    593 _PCA0CPH1	=	0x00fe
                    0088    594 G$CPT0CN$0$0 == 0x0088
                    0088    595 _CPT0CN	=	0x0088
                    0089    596 G$CPT0MD$0$0 == 0x0089
                    0089    597 _CPT0MD	=	0x0089
                    0098    598 G$SCON1$0$0 == 0x0098
                    0098    599 _SCON1	=	0x0098
                    0099    600 G$SBUF1$0$0 == 0x0099
                    0099    601 _SBUF1	=	0x0099
                    00C8    602 G$TMR3CN$0$0 == 0x00c8
                    00C8    603 _TMR3CN	=	0x00c8
                    00C9    604 G$TMR3CF$0$0 == 0x00c9
                    00C9    605 _TMR3CF	=	0x00c9
                    00CA    606 G$RCAP3L$0$0 == 0x00ca
                    00CA    607 _RCAP3L	=	0x00ca
                    00CB    608 G$RCAP3H$0$0 == 0x00cb
                    00CB    609 _RCAP3H	=	0x00cb
                    00CC    610 G$TMR3L$0$0 == 0x00cc
                    00CC    611 _TMR3L	=	0x00cc
                    00CD    612 G$TMR3H$0$0 == 0x00cd
                    00CD    613 _TMR3H	=	0x00cd
                    00D2    614 G$DAC1L$0$0 == 0x00d2
                    00D2    615 _DAC1L	=	0x00d2
                    00D3    616 G$DAC1H$0$0 == 0x00d3
                    00D3    617 _DAC1H	=	0x00d3
                    00D4    618 G$DAC1CN$0$0 == 0x00d4
                    00D4    619 _DAC1CN	=	0x00d4
                    0088    620 G$CPT1CN$0$0 == 0x0088
                    0088    621 _CPT1CN	=	0x0088
                    0089    622 G$CPT1MD$0$0 == 0x0089
                    0089    623 _CPT1MD	=	0x0089
                    00BA    624 G$AMX2CF$0$0 == 0x00ba
                    00BA    625 _AMX2CF	=	0x00ba
                    00BB    626 G$AMX2SL$0$0 == 0x00bb
                    00BB    627 _AMX2SL	=	0x00bb
                    00BC    628 G$ADC2CF$0$0 == 0x00bc
                    00BC    629 _ADC2CF	=	0x00bc
                    00BE    630 G$ADC2$0$0 == 0x00be
                    00BE    631 _ADC2	=	0x00be
                    00C4    632 G$ADC2GT$0$0 == 0x00c4
                    00C4    633 _ADC2GT	=	0x00c4
                    00C6    634 G$ADC2LT$0$0 == 0x00c6
                    00C6    635 _ADC2LT	=	0x00c6
                    00C8    636 G$TMR4CN$0$0 == 0x00c8
                    00C8    637 _TMR4CN	=	0x00c8
                    00C9    638 G$TMR4CF$0$0 == 0x00c9
                    00C9    639 _TMR4CF	=	0x00c9
                    00CA    640 G$RCAP4L$0$0 == 0x00ca
                    00CA    641 _RCAP4L	=	0x00ca
                    00CB    642 G$RCAP4H$0$0 == 0x00cb
                    00CB    643 _RCAP4H	=	0x00cb
                    00CC    644 G$TMR4L$0$0 == 0x00cc
                    00CC    645 _TMR4L	=	0x00cc
                    00CD    646 G$TMR4H$0$0 == 0x00cd
                    00CD    647 _TMR4H	=	0x00cd
                    00E8    648 G$ADC2CN$0$0 == 0x00e8
                    00E8    649 _ADC2CN	=	0x00e8
                    0091    650 G$MAC0BL$0$0 == 0x0091
                    0091    651 _MAC0BL	=	0x0091
                    0092    652 G$MAC0BH$0$0 == 0x0092
                    0092    653 _MAC0BH	=	0x0092
                    0093    654 G$MAC0ACC0$0$0 == 0x0093
                    0093    655 _MAC0ACC0	=	0x0093
                    0094    656 G$MAC0ACC1$0$0 == 0x0094
                    0094    657 _MAC0ACC1	=	0x0094
                    0095    658 G$MAC0ACC2$0$0 == 0x0095
                    0095    659 _MAC0ACC2	=	0x0095
                    0096    660 G$MAC0ACC3$0$0 == 0x0096
                    0096    661 _MAC0ACC3	=	0x0096
                    0097    662 G$MAC0OVR$0$0 == 0x0097
                    0097    663 _MAC0OVR	=	0x0097
                    00C0    664 G$MAC0STA$0$0 == 0x00c0
                    00C0    665 _MAC0STA	=	0x00c0
                    00C1    666 G$MAC0AL$0$0 == 0x00c1
                    00C1    667 _MAC0AL	=	0x00c1
                    00C2    668 G$MAC0AH$0$0 == 0x00c2
                    00C2    669 _MAC0AH	=	0x00c2
                    00C3    670 G$MAC0CF$0$0 == 0x00c3
                    00C3    671 _MAC0CF	=	0x00c3
                    00CE    672 G$MAC0RNDL$0$0 == 0x00ce
                    00CE    673 _MAC0RNDL	=	0x00ce
                    00CF    674 G$MAC0RNDH$0$0 == 0x00cf
                    00CF    675 _MAC0RNDH	=	0x00cf
                    0088    676 G$FLSTAT$0$0 == 0x0088
                    0088    677 _FLSTAT	=	0x0088
                    0089    678 G$PLL0CN$0$0 == 0x0089
                    0089    679 _PLL0CN	=	0x0089
                    008A    680 G$OSCICN$0$0 == 0x008a
                    008A    681 _OSCICN	=	0x008a
                    008B    682 G$OSCICL$0$0 == 0x008b
                    008B    683 _OSCICL	=	0x008b
                    008C    684 G$OSCXCN$0$0 == 0x008c
                    008C    685 _OSCXCN	=	0x008c
                    008D    686 G$PLL0DIV$0$0 == 0x008d
                    008D    687 _PLL0DIV	=	0x008d
                    008E    688 G$PLL0MUL$0$0 == 0x008e
                    008E    689 _PLL0MUL	=	0x008e
                    008F    690 G$PLL0FLT$0$0 == 0x008f
                    008F    691 _PLL0FLT	=	0x008f
                    0096    692 G$SFRPGCN$0$0 == 0x0096
                    0096    693 _SFRPGCN	=	0x0096
                    0097    694 G$CLKSEL$0$0 == 0x0097
                    0097    695 _CLKSEL	=	0x0097
                    009A    696 G$CCH0MA$0$0 == 0x009a
                    009A    697 _CCH0MA	=	0x009a
                    009C    698 G$P4MDOUT$0$0 == 0x009c
                    009C    699 _P4MDOUT	=	0x009c
                    009D    700 G$P5MDOUT$0$0 == 0x009d
                    009D    701 _P5MDOUT	=	0x009d
                    009E    702 G$P6MDOUT$0$0 == 0x009e
                    009E    703 _P6MDOUT	=	0x009e
                    009F    704 G$P7MDOUT$0$0 == 0x009f
                    009F    705 _P7MDOUT	=	0x009f
                    00A1    706 G$CCH0CN$0$0 == 0x00a1
                    00A1    707 _CCH0CN	=	0x00a1
                    00A2    708 G$CCH0TN$0$0 == 0x00a2
                    00A2    709 _CCH0TN	=	0x00a2
                    00A3    710 G$CCH0LC$0$0 == 0x00a3
                    00A3    711 _CCH0LC	=	0x00a3
                    00A4    712 G$P0MDOUT$0$0 == 0x00a4
                    00A4    713 _P0MDOUT	=	0x00a4
                    00A5    714 G$P1MDOUT$0$0 == 0x00a5
                    00A5    715 _P1MDOUT	=	0x00a5
                    00A6    716 G$P2MDOUT$0$0 == 0x00a6
                    00A6    717 _P2MDOUT	=	0x00a6
                    00A7    718 G$P3MDOUT$0$0 == 0x00a7
                    00A7    719 _P3MDOUT	=	0x00a7
                    00AD    720 G$P1MDIN$0$0 == 0x00ad
                    00AD    721 _P1MDIN	=	0x00ad
                    00B7    722 G$FLACL$0$0 == 0x00b7
                    00B7    723 _FLACL	=	0x00b7
                    00C8    724 G$P4$0$0 == 0x00c8
                    00C8    725 _P4	=	0x00c8
                    00D8    726 G$P5$0$0 == 0x00d8
                    00D8    727 _P5	=	0x00d8
                    00E1    728 G$XBR0$0$0 == 0x00e1
                    00E1    729 _XBR0	=	0x00e1
                    00E2    730 G$XBR1$0$0 == 0x00e2
                    00E2    731 _XBR1	=	0x00e2
                    00E3    732 G$XBR2$0$0 == 0x00e3
                    00E3    733 _XBR2	=	0x00e3
                    00E8    734 G$P6$0$0 == 0x00e8
                    00E8    735 _P6	=	0x00e8
                    00F8    736 G$P7$0$0 == 0x00f8
                    00F8    737 _P7	=	0x00f8
                    8C8A    738 G$TMR0$0$0 == 0x8c8a
                    8C8A    739 _TMR0	=	0x8c8a
                    8D8B    740 G$TMR1$0$0 == 0x8d8b
                    8D8B    741 _TMR1	=	0x8d8b
                    CDCC    742 G$TMR2$0$0 == 0xcdcc
                    CDCC    743 _TMR2	=	0xcdcc
                    CBCA    744 G$RCAP2$0$0 == 0xcbca
                    CBCA    745 _RCAP2	=	0xcbca
                    BFBE    746 G$ADC0$0$0 == 0xbfbe
                    BFBE    747 _ADC0	=	0xbfbe
                    C5C4    748 G$ADC0GT$0$0 == 0xc5c4
                    C5C4    749 _ADC0GT	=	0xc5c4
                    C7C6    750 G$ADC0LT$0$0 == 0xc7c6
                    C7C6    751 _ADC0LT	=	0xc7c6
                    D3D2    752 G$DAC0$0$0 == 0xd3d2
                    D3D2    753 _DAC0	=	0xd3d2
                    FAF9    754 G$PCA0$0$0 == 0xfaf9
                    FAF9    755 _PCA0	=	0xfaf9
                    FCFB    756 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    757 _PCA0CP0	=	0xfcfb
                    FEFD    758 G$PCA0CP1$0$0 == 0xfefd
                    FEFD    759 _PCA0CP1	=	0xfefd
                    EAE9    760 G$PCA0CP2$0$0 == 0xeae9
                    EAE9    761 _PCA0CP2	=	0xeae9
                    ECEB    762 G$PCA0CP3$0$0 == 0xeceb
                    ECEB    763 _PCA0CP3	=	0xeceb
                    EEED    764 G$PCA0CP4$0$0 == 0xeeed
                    EEED    765 _PCA0CP4	=	0xeeed
                    E2E1    766 G$PCA0CP5$0$0 == 0xe2e1
                    E2E1    767 _PCA0CP5	=	0xe2e1
                    CDCC    768 G$TMR3$0$0 == 0xcdcc
                    CDCC    769 _TMR3	=	0xcdcc
                    CBCA    770 G$RCAP3$0$0 == 0xcbca
                    CBCA    771 _RCAP3	=	0xcbca
                    D3D2    772 G$DAC1$0$0 == 0xd3d2
                    D3D2    773 _DAC1	=	0xd3d2
                    CDCC    774 G$TMR4$0$0 == 0xcdcc
                    CDCC    775 _TMR4	=	0xcdcc
                    CBCA    776 G$RCAP4$0$0 == 0xcbca
                    CBCA    777 _RCAP4	=	0xcbca
                    C2C1    778 G$MAC0A$0$0 == 0xc2c1
                    C2C1    779 _MAC0A	=	0xc2c1
                    96959493    780 G$MAC0ACC$0$0 == 0x96959493
                    96959493    781 _MAC0ACC	=	0x96959493
                    CFCE    782 G$MAC0RND$0$0 == 0xcfce
                    CFCE    783 _MAC0RND	=	0xcfce
                            784 ;--------------------------------------------------------
                            785 ; special function bits
                            786 ;--------------------------------------------------------
                            787 	.area RSEG    (DATA)
                    0080    788 G$P0_0$0$0 == 0x0080
                    0080    789 _P0_0	=	0x0080
                    0081    790 G$P0_1$0$0 == 0x0081
                    0081    791 _P0_1	=	0x0081
                    0082    792 G$P0_2$0$0 == 0x0082
                    0082    793 _P0_2	=	0x0082
                    0083    794 G$P0_3$0$0 == 0x0083
                    0083    795 _P0_3	=	0x0083
                    0084    796 G$P0_4$0$0 == 0x0084
                    0084    797 _P0_4	=	0x0084
                    0085    798 G$P0_5$0$0 == 0x0085
                    0085    799 _P0_5	=	0x0085
                    0086    800 G$P0_6$0$0 == 0x0086
                    0086    801 _P0_6	=	0x0086
                    0087    802 G$P0_7$0$0 == 0x0087
                    0087    803 _P0_7	=	0x0087
                    0088    804 G$IT0$0$0 == 0x0088
                    0088    805 _IT0	=	0x0088
                    0089    806 G$IE0$0$0 == 0x0089
                    0089    807 _IE0	=	0x0089
                    008A    808 G$IT1$0$0 == 0x008a
                    008A    809 _IT1	=	0x008a
                    008B    810 G$IE1$0$0 == 0x008b
                    008B    811 _IE1	=	0x008b
                    008C    812 G$TR0$0$0 == 0x008c
                    008C    813 _TR0	=	0x008c
                    008D    814 G$TF0$0$0 == 0x008d
                    008D    815 _TF0	=	0x008d
                    008E    816 G$TR1$0$0 == 0x008e
                    008E    817 _TR1	=	0x008e
                    008F    818 G$TF1$0$0 == 0x008f
                    008F    819 _TF1	=	0x008f
                    0088    820 G$CP0HYN0$0$0 == 0x0088
                    0088    821 _CP0HYN0	=	0x0088
                    0089    822 G$CP0HYN1$0$0 == 0x0089
                    0089    823 _CP0HYN1	=	0x0089
                    008A    824 G$CP0HYP0$0$0 == 0x008a
                    008A    825 _CP0HYP0	=	0x008a
                    008B    826 G$CP0HYP1$0$0 == 0x008b
                    008B    827 _CP0HYP1	=	0x008b
                    008C    828 G$CP0FIF$0$0 == 0x008c
                    008C    829 _CP0FIF	=	0x008c
                    008D    830 G$CP0RIF$0$0 == 0x008d
                    008D    831 _CP0RIF	=	0x008d
                    008E    832 G$CP0OUT$0$0 == 0x008e
                    008E    833 _CP0OUT	=	0x008e
                    008F    834 G$CP0EN$0$0 == 0x008f
                    008F    835 _CP0EN	=	0x008f
                    0088    836 G$CP1HYN0$0$0 == 0x0088
                    0088    837 _CP1HYN0	=	0x0088
                    0089    838 G$CP1HYN1$0$0 == 0x0089
                    0089    839 _CP1HYN1	=	0x0089
                    008A    840 G$CP1HYP0$0$0 == 0x008a
                    008A    841 _CP1HYP0	=	0x008a
                    008B    842 G$CP1HYP1$0$0 == 0x008b
                    008B    843 _CP1HYP1	=	0x008b
                    008C    844 G$CP1FIF$0$0 == 0x008c
                    008C    845 _CP1FIF	=	0x008c
                    008D    846 G$CP1RIF$0$0 == 0x008d
                    008D    847 _CP1RIF	=	0x008d
                    008E    848 G$CP1OUT$0$0 == 0x008e
                    008E    849 _CP1OUT	=	0x008e
                    008F    850 G$CP1EN$0$0 == 0x008f
                    008F    851 _CP1EN	=	0x008f
                    0088    852 G$FLHBUSY$0$0 == 0x0088
                    0088    853 _FLHBUSY	=	0x0088
                    0090    854 G$P1_0$0$0 == 0x0090
                    0090    855 _P1_0	=	0x0090
                    0091    856 G$P1_1$0$0 == 0x0091
                    0091    857 _P1_1	=	0x0091
                    0092    858 G$P1_2$0$0 == 0x0092
                    0092    859 _P1_2	=	0x0092
                    0093    860 G$P1_3$0$0 == 0x0093
                    0093    861 _P1_3	=	0x0093
                    0094    862 G$P1_4$0$0 == 0x0094
                    0094    863 _P1_4	=	0x0094
                    0095    864 G$P1_5$0$0 == 0x0095
                    0095    865 _P1_5	=	0x0095
                    0096    866 G$P1_6$0$0 == 0x0096
                    0096    867 _P1_6	=	0x0096
                    0097    868 G$P1_7$0$0 == 0x0097
                    0097    869 _P1_7	=	0x0097
                    0098    870 G$RI0$0$0 == 0x0098
                    0098    871 _RI0	=	0x0098
                    0098    872 G$RI$0$0 == 0x0098
                    0098    873 _RI	=	0x0098
                    0099    874 G$TI0$0$0 == 0x0099
                    0099    875 _TI0	=	0x0099
                    0099    876 G$TI$0$0 == 0x0099
                    0099    877 _TI	=	0x0099
                    009A    878 G$RB80$0$0 == 0x009a
                    009A    879 _RB80	=	0x009a
                    009B    880 G$TB80$0$0 == 0x009b
                    009B    881 _TB80	=	0x009b
                    009C    882 G$REN0$0$0 == 0x009c
                    009C    883 _REN0	=	0x009c
                    009C    884 G$REN$0$0 == 0x009c
                    009C    885 _REN	=	0x009c
                    009D    886 G$SM20$0$0 == 0x009d
                    009D    887 _SM20	=	0x009d
                    009E    888 G$SM10$0$0 == 0x009e
                    009E    889 _SM10	=	0x009e
                    009F    890 G$SM00$0$0 == 0x009f
                    009F    891 _SM00	=	0x009f
                    0098    892 G$RI1$0$0 == 0x0098
                    0098    893 _RI1	=	0x0098
                    0099    894 G$TI1$0$0 == 0x0099
                    0099    895 _TI1	=	0x0099
                    009A    896 G$RB81$0$0 == 0x009a
                    009A    897 _RB81	=	0x009a
                    009B    898 G$TB81$0$0 == 0x009b
                    009B    899 _TB81	=	0x009b
                    009C    900 G$REN1$0$0 == 0x009c
                    009C    901 _REN1	=	0x009c
                    009D    902 G$MCE1$0$0 == 0x009d
                    009D    903 _MCE1	=	0x009d
                    009F    904 G$S1MODE$0$0 == 0x009f
                    009F    905 _S1MODE	=	0x009f
                    00A0    906 G$P2_0$0$0 == 0x00a0
                    00A0    907 _P2_0	=	0x00a0
                    00A1    908 G$P2_1$0$0 == 0x00a1
                    00A1    909 _P2_1	=	0x00a1
                    00A2    910 G$P2_2$0$0 == 0x00a2
                    00A2    911 _P2_2	=	0x00a2
                    00A3    912 G$P2_3$0$0 == 0x00a3
                    00A3    913 _P2_3	=	0x00a3
                    00A4    914 G$P2_4$0$0 == 0x00a4
                    00A4    915 _P2_4	=	0x00a4
                    00A5    916 G$P2_5$0$0 == 0x00a5
                    00A5    917 _P2_5	=	0x00a5
                    00A6    918 G$P2_6$0$0 == 0x00a6
                    00A6    919 _P2_6	=	0x00a6
                    00A7    920 G$P2_7$0$0 == 0x00a7
                    00A7    921 _P2_7	=	0x00a7
                    00A8    922 G$EX0$0$0 == 0x00a8
                    00A8    923 _EX0	=	0x00a8
                    00A9    924 G$ET0$0$0 == 0x00a9
                    00A9    925 _ET0	=	0x00a9
                    00AA    926 G$EX1$0$0 == 0x00aa
                    00AA    927 _EX1	=	0x00aa
                    00AB    928 G$ET1$0$0 == 0x00ab
                    00AB    929 _ET1	=	0x00ab
                    00AC    930 G$ES0$0$0 == 0x00ac
                    00AC    931 _ES0	=	0x00ac
                    00AC    932 G$ES$0$0 == 0x00ac
                    00AC    933 _ES	=	0x00ac
                    00AD    934 G$ET2$0$0 == 0x00ad
                    00AD    935 _ET2	=	0x00ad
                    00AF    936 G$EA$0$0 == 0x00af
                    00AF    937 _EA	=	0x00af
                    00B0    938 G$P3_0$0$0 == 0x00b0
                    00B0    939 _P3_0	=	0x00b0
                    00B1    940 G$P3_1$0$0 == 0x00b1
                    00B1    941 _P3_1	=	0x00b1
                    00B2    942 G$P3_2$0$0 == 0x00b2
                    00B2    943 _P3_2	=	0x00b2
                    00B3    944 G$P3_3$0$0 == 0x00b3
                    00B3    945 _P3_3	=	0x00b3
                    00B4    946 G$P3_4$0$0 == 0x00b4
                    00B4    947 _P3_4	=	0x00b4
                    00B5    948 G$P3_5$0$0 == 0x00b5
                    00B5    949 _P3_5	=	0x00b5
                    00B6    950 G$P3_6$0$0 == 0x00b6
                    00B6    951 _P3_6	=	0x00b6
                    00B7    952 G$P3_7$0$0 == 0x00b7
                    00B7    953 _P3_7	=	0x00b7
                    00B8    954 G$PX0$0$0 == 0x00b8
                    00B8    955 _PX0	=	0x00b8
                    00B9    956 G$PT0$0$0 == 0x00b9
                    00B9    957 _PT0	=	0x00b9
                    00BA    958 G$PX1$0$0 == 0x00ba
                    00BA    959 _PX1	=	0x00ba
                    00BB    960 G$PT1$0$0 == 0x00bb
                    00BB    961 _PT1	=	0x00bb
                    00BC    962 G$PS0$0$0 == 0x00bc
                    00BC    963 _PS0	=	0x00bc
                    00BC    964 G$PS$0$0 == 0x00bc
                    00BC    965 _PS	=	0x00bc
                    00BD    966 G$PT2$0$0 == 0x00bd
                    00BD    967 _PT2	=	0x00bd
                    00C0    968 G$SMBTOE$0$0 == 0x00c0
                    00C0    969 _SMBTOE	=	0x00c0
                    00C1    970 G$SMBFTE$0$0 == 0x00c1
                    00C1    971 _SMBFTE	=	0x00c1
                    00C2    972 G$AA$0$0 == 0x00c2
                    00C2    973 _AA	=	0x00c2
                    00C3    974 G$SI$0$0 == 0x00c3
                    00C3    975 _SI	=	0x00c3
                    00C4    976 G$STO$0$0 == 0x00c4
                    00C4    977 _STO	=	0x00c4
                    00C5    978 G$STA$0$0 == 0x00c5
                    00C5    979 _STA	=	0x00c5
                    00C6    980 G$ENSMB$0$0 == 0x00c6
                    00C6    981 _ENSMB	=	0x00c6
                    00C7    982 G$BUSY$0$0 == 0x00c7
                    00C7    983 _BUSY	=	0x00c7
                    00C0    984 G$MAC0N$0$0 == 0x00c0
                    00C0    985 _MAC0N	=	0x00c0
                    00C1    986 G$MAC0SO$0$0 == 0x00c1
                    00C1    987 _MAC0SO	=	0x00c1
                    00C2    988 G$MAC0Z$0$0 == 0x00c2
                    00C2    989 _MAC0Z	=	0x00c2
                    00C3    990 G$MAC0HO$0$0 == 0x00c3
                    00C3    991 _MAC0HO	=	0x00c3
                    00C8    992 G$CPRL2$0$0 == 0x00c8
                    00C8    993 _CPRL2	=	0x00c8
                    00C9    994 G$CT2$0$0 == 0x00c9
                    00C9    995 _CT2	=	0x00c9
                    00CA    996 G$TR2$0$0 == 0x00ca
                    00CA    997 _TR2	=	0x00ca
                    00CB    998 G$EXEN2$0$0 == 0x00cb
                    00CB    999 _EXEN2	=	0x00cb
                    00CE   1000 G$EXF2$0$0 == 0x00ce
                    00CE   1001 _EXF2	=	0x00ce
                    00CF   1002 G$TF2$0$0 == 0x00cf
                    00CF   1003 _TF2	=	0x00cf
                    00C8   1004 G$CPRL3$0$0 == 0x00c8
                    00C8   1005 _CPRL3	=	0x00c8
                    00C9   1006 G$CT3$0$0 == 0x00c9
                    00C9   1007 _CT3	=	0x00c9
                    00CA   1008 G$TR3$0$0 == 0x00ca
                    00CA   1009 _TR3	=	0x00ca
                    00CB   1010 G$EXEN3$0$0 == 0x00cb
                    00CB   1011 _EXEN3	=	0x00cb
                    00CE   1012 G$EXF3$0$0 == 0x00ce
                    00CE   1013 _EXF3	=	0x00ce
                    00CF   1014 G$TF3$0$0 == 0x00cf
                    00CF   1015 _TF3	=	0x00cf
                    00C8   1016 G$CPRL4$0$0 == 0x00c8
                    00C8   1017 _CPRL4	=	0x00c8
                    00C9   1018 G$CT4$0$0 == 0x00c9
                    00C9   1019 _CT4	=	0x00c9
                    00CA   1020 G$TR4$0$0 == 0x00ca
                    00CA   1021 _TR4	=	0x00ca
                    00CB   1022 G$EXEN4$0$0 == 0x00cb
                    00CB   1023 _EXEN4	=	0x00cb
                    00CE   1024 G$EXF4$0$0 == 0x00ce
                    00CE   1025 _EXF4	=	0x00ce
                    00CF   1026 G$TF4$0$0 == 0x00cf
                    00CF   1027 _TF4	=	0x00cf
                    00C8   1028 G$P4_0$0$0 == 0x00c8
                    00C8   1029 _P4_0	=	0x00c8
                    00C9   1030 G$P4_1$0$0 == 0x00c9
                    00C9   1031 _P4_1	=	0x00c9
                    00CA   1032 G$P4_2$0$0 == 0x00ca
                    00CA   1033 _P4_2	=	0x00ca
                    00CB   1034 G$P4_3$0$0 == 0x00cb
                    00CB   1035 _P4_3	=	0x00cb
                    00CC   1036 G$P4_4$0$0 == 0x00cc
                    00CC   1037 _P4_4	=	0x00cc
                    00CD   1038 G$P4_5$0$0 == 0x00cd
                    00CD   1039 _P4_5	=	0x00cd
                    00CE   1040 G$P4_6$0$0 == 0x00ce
                    00CE   1041 _P4_6	=	0x00ce
                    00CF   1042 G$P4_7$0$0 == 0x00cf
                    00CF   1043 _P4_7	=	0x00cf
                    00D0   1044 G$P$0$0 == 0x00d0
                    00D0   1045 _P	=	0x00d0
                    00D1   1046 G$F1$0$0 == 0x00d1
                    00D1   1047 _F1	=	0x00d1
                    00D2   1048 G$OV$0$0 == 0x00d2
                    00D2   1049 _OV	=	0x00d2
                    00D3   1050 G$RS0$0$0 == 0x00d3
                    00D3   1051 _RS0	=	0x00d3
                    00D4   1052 G$RS1$0$0 == 0x00d4
                    00D4   1053 _RS1	=	0x00d4
                    00D5   1054 G$F0$0$0 == 0x00d5
                    00D5   1055 _F0	=	0x00d5
                    00D6   1056 G$AC$0$0 == 0x00d6
                    00D6   1057 _AC	=	0x00d6
                    00D7   1058 G$CY$0$0 == 0x00d7
                    00D7   1059 _CY	=	0x00d7
                    00D8   1060 G$CCF0$0$0 == 0x00d8
                    00D8   1061 _CCF0	=	0x00d8
                    00D9   1062 G$CCF1$0$0 == 0x00d9
                    00D9   1063 _CCF1	=	0x00d9
                    00DA   1064 G$CCF2$0$0 == 0x00da
                    00DA   1065 _CCF2	=	0x00da
                    00DB   1066 G$CCF3$0$0 == 0x00db
                    00DB   1067 _CCF3	=	0x00db
                    00DC   1068 G$CCF4$0$0 == 0x00dc
                    00DC   1069 _CCF4	=	0x00dc
                    00DD   1070 G$CCF5$0$0 == 0x00dd
                    00DD   1071 _CCF5	=	0x00dd
                    00DE   1072 G$CR$0$0 == 0x00de
                    00DE   1073 _CR	=	0x00de
                    00DF   1074 G$CF$0$0 == 0x00df
                    00DF   1075 _CF	=	0x00df
                    00D8   1076 G$P5_0$0$0 == 0x00d8
                    00D8   1077 _P5_0	=	0x00d8
                    00D9   1078 G$P5_1$0$0 == 0x00d9
                    00D9   1079 _P5_1	=	0x00d9
                    00DA   1080 G$P5_2$0$0 == 0x00da
                    00DA   1081 _P5_2	=	0x00da
                    00DB   1082 G$P5_3$0$0 == 0x00db
                    00DB   1083 _P5_3	=	0x00db
                    00DC   1084 G$P5_4$0$0 == 0x00dc
                    00DC   1085 _P5_4	=	0x00dc
                    00DD   1086 G$P5_5$0$0 == 0x00dd
                    00DD   1087 _P5_5	=	0x00dd
                    00DE   1088 G$P5_6$0$0 == 0x00de
                    00DE   1089 _P5_6	=	0x00de
                    00DF   1090 G$P5_7$0$0 == 0x00df
                    00DF   1091 _P5_7	=	0x00df
                    00E8   1092 G$AD0LJST$0$0 == 0x00e8
                    00E8   1093 _AD0LJST	=	0x00e8
                    00E9   1094 G$AD0WINT$0$0 == 0x00e9
                    00E9   1095 _AD0WINT	=	0x00e9
                    00EA   1096 G$AD0CM0$0$0 == 0x00ea
                    00EA   1097 _AD0CM0	=	0x00ea
                    00EB   1098 G$AD0CM1$0$0 == 0x00eb
                    00EB   1099 _AD0CM1	=	0x00eb
                    00EC   1100 G$AD0BUSY$0$0 == 0x00ec
                    00EC   1101 _AD0BUSY	=	0x00ec
                    00ED   1102 G$AD0INT$0$0 == 0x00ed
                    00ED   1103 _AD0INT	=	0x00ed
                    00EE   1104 G$AD0TM$0$0 == 0x00ee
                    00EE   1105 _AD0TM	=	0x00ee
                    00EF   1106 G$AD0EN$0$0 == 0x00ef
                    00EF   1107 _AD0EN	=	0x00ef
                    00E8   1108 G$AD2WINT$0$0 == 0x00e8
                    00E8   1109 _AD2WINT	=	0x00e8
                    00E9   1110 G$AD2CM0$0$0 == 0x00e9
                    00E9   1111 _AD2CM0	=	0x00e9
                    00EA   1112 G$AD2CM1$0$0 == 0x00ea
                    00EA   1113 _AD2CM1	=	0x00ea
                    00EB   1114 G$AD2CM2$0$0 == 0x00eb
                    00EB   1115 _AD2CM2	=	0x00eb
                    00EC   1116 G$AD2BUSY$0$0 == 0x00ec
                    00EC   1117 _AD2BUSY	=	0x00ec
                    00ED   1118 G$AD2INT$0$0 == 0x00ed
                    00ED   1119 _AD2INT	=	0x00ed
                    00EE   1120 G$AD2TM$0$0 == 0x00ee
                    00EE   1121 _AD2TM	=	0x00ee
                    00EF   1122 G$AD2EN$0$0 == 0x00ef
                    00EF   1123 _AD2EN	=	0x00ef
                    00E8   1124 G$P6_0$0$0 == 0x00e8
                    00E8   1125 _P6_0	=	0x00e8
                    00E9   1126 G$P6_1$0$0 == 0x00e9
                    00E9   1127 _P6_1	=	0x00e9
                    00EA   1128 G$P6_2$0$0 == 0x00ea
                    00EA   1129 _P6_2	=	0x00ea
                    00EB   1130 G$P6_3$0$0 == 0x00eb
                    00EB   1131 _P6_3	=	0x00eb
                    00EC   1132 G$P6_4$0$0 == 0x00ec
                    00EC   1133 _P6_4	=	0x00ec
                    00ED   1134 G$P6_5$0$0 == 0x00ed
                    00ED   1135 _P6_5	=	0x00ed
                    00EE   1136 G$P6_6$0$0 == 0x00ee
                    00EE   1137 _P6_6	=	0x00ee
                    00EF   1138 G$P6_7$0$0 == 0x00ef
                    00EF   1139 _P6_7	=	0x00ef
                    00F8   1140 G$SPIEN$0$0 == 0x00f8
                    00F8   1141 _SPIEN	=	0x00f8
                    00F9   1142 G$TXBMT$0$0 == 0x00f9
                    00F9   1143 _TXBMT	=	0x00f9
                    00FA   1144 G$NSSMD0$0$0 == 0x00fa
                    00FA   1145 _NSSMD0	=	0x00fa
                    00FB   1146 G$NSSMD1$0$0 == 0x00fb
                    00FB   1147 _NSSMD1	=	0x00fb
                    00FC   1148 G$RXOVRN$0$0 == 0x00fc
                    00FC   1149 _RXOVRN	=	0x00fc
                    00FD   1150 G$MODF$0$0 == 0x00fd
                    00FD   1151 _MODF	=	0x00fd
                    00FE   1152 G$WCOL$0$0 == 0x00fe
                    00FE   1153 _WCOL	=	0x00fe
                    00FF   1154 G$SPIF$0$0 == 0x00ff
                    00FF   1155 _SPIF	=	0x00ff
                    00F8   1156 G$P7_0$0$0 == 0x00f8
                    00F8   1157 _P7_0	=	0x00f8
                    00F9   1158 G$P7_1$0$0 == 0x00f9
                    00F9   1159 _P7_1	=	0x00f9
                    00FA   1160 G$P7_2$0$0 == 0x00fa
                    00FA   1161 _P7_2	=	0x00fa
                    00FB   1162 G$P7_3$0$0 == 0x00fb
                    00FB   1163 _P7_3	=	0x00fb
                    00FC   1164 G$P7_4$0$0 == 0x00fc
                    00FC   1165 _P7_4	=	0x00fc
                    00FD   1166 G$P7_5$0$0 == 0x00fd
                    00FD   1167 _P7_5	=	0x00fd
                    00FE   1168 G$P7_6$0$0 == 0x00fe
                    00FE   1169 _P7_6	=	0x00fe
                    00FF   1170 G$P7_7$0$0 == 0x00ff
                    00FF   1171 _P7_7	=	0x00ff
                           1172 ;--------------------------------------------------------
                           1173 ; overlayable register banks
                           1174 ;--------------------------------------------------------
                           1175 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1176 	.ds 8
                           1177 ;--------------------------------------------------------
                           1178 ; internal ram data
                           1179 ;--------------------------------------------------------
                           1180 	.area DSEG    (DATA)
                           1181 ;--------------------------------------------------------
                           1182 ; overlayable items in internal ram 
                           1183 ;--------------------------------------------------------
                           1184 	.area OSEG    (OVR,DATA)
                           1185 ;--------------------------------------------------------
                           1186 ; indirectly addressable internal ram data
                           1187 ;--------------------------------------------------------
                           1188 	.area ISEG    (DATA)
                    0000   1189 Lwrite_config_to_flash$i$1$1==.
   0000                    1190 _write_config_to_flash_i_1_1:
   0000                    1191 	.ds 2
                           1192 ;--------------------------------------------------------
                           1193 ; absolute internal ram data
                           1194 ;--------------------------------------------------------
                           1195 	.area IABS    (ABS,DATA)
                           1196 	.area IABS    (ABS,DATA)
                           1197 ;--------------------------------------------------------
                           1198 ; bit data
                           1199 ;--------------------------------------------------------
                           1200 	.area BSEG    (BIT)
                           1201 ;--------------------------------------------------------
                           1202 ; paged external ram data
                           1203 ;--------------------------------------------------------
                           1204 	.area PSEG    (PAG,XDATA)
                           1205 ;--------------------------------------------------------
                           1206 ; external ram data
                           1207 ;--------------------------------------------------------
                           1208 	.area XSEG    (XDATA)
                    0000   1209 Lread_flash$n$1$1==.
   0000                    1210 _read_flash_n_1_1:
   0000                    1211 	.ds 1
                    0001   1212 Lwrite_config_to_flash$src$1$1==.
   0001                    1213 _write_config_to_flash_src_1_1:
   0001                    1214 	.ds 2
                    0003   1215 Lwrite_new_verification_word$ver$1$1==.
   0003                    1216 _write_new_verification_word_ver_1_1:
   0003                    1217 	.ds 2
                    0005   1218 Lflash_chksum$command$1$1==.
   0005                    1219 _flash_chksum_command_1_1:
   0005                    1220 	.ds 1
                    0006   1221 Lflash_chksum$chksum$1$1==.
   0006                    1222 _flash_chksum_chksum_1_1:
   0006                    1223 	.ds 2
                    0008   1224 Lflash_chksum$loop$1$1==.
   0008                    1225 _flash_chksum_loop_1_1:
   0008                    1226 	.ds 2
                           1227 ;--------------------------------------------------------
                           1228 ; absolute external ram data
                           1229 ;--------------------------------------------------------
                           1230 	.area XABS    (ABS,XDATA)
                           1231 ;--------------------------------------------------------
                           1232 ; external initialized ram data
                           1233 ;--------------------------------------------------------
                           1234 	.area XISEG   (XDATA)
                           1235 	.area HOME    (CODE)
                           1236 	.area GSINIT0 (CODE)
                           1237 	.area GSINIT1 (CODE)
                           1238 	.area GSINIT2 (CODE)
                           1239 	.area GSINIT3 (CODE)
                           1240 	.area GSINIT4 (CODE)
                           1241 	.area GSINIT5 (CODE)
                           1242 	.area GSINIT  (CODE)
                           1243 	.area GSFINAL (CODE)
                           1244 	.area CSEG    (CODE)
                           1245 ;--------------------------------------------------------
                           1246 ; global & static initialisations
                           1247 ;--------------------------------------------------------
                           1248 	.area HOME    (CODE)
                           1249 	.area GSINIT  (CODE)
                           1250 	.area GSFINAL (CODE)
                           1251 	.area GSINIT  (CODE)
                           1252 ;--------------------------------------------------------
                           1253 ; Home
                           1254 ;--------------------------------------------------------
                           1255 	.area HOME    (CODE)
                           1256 	.area HOME    (CODE)
                           1257 ;--------------------------------------------------------
                           1258 ; code
                           1259 ;--------------------------------------------------------
                           1260 	.area CSEG    (CODE)
                           1261 ;------------------------------------------------------------
                           1262 ;Allocation info for local variables in function 'enter_flash_write'
                           1263 ;------------------------------------------------------------
                           1264 ;------------------------------------------------------------
                    0000   1265 	FFlash_02x$enter_flash_write$0$0 ==.
                    0000   1266 	C$Flash_02x.c$44$0$0 ==.
                           1267 ;	..\ip_avenger\flash\Flash_02x.c:44: static void enter_flash_write(void)
                           1268 ;	-----------------------------------------
                           1269 ;	 function enter_flash_write
                           1270 ;	-----------------------------------------
   0000                    1271 _enter_flash_write:
                    0002   1272 	ar2 = 0x02
                    0003   1273 	ar3 = 0x03
                    0004   1274 	ar4 = 0x04
                    0005   1275 	ar5 = 0x05
                    0006   1276 	ar6 = 0x06
                    0007   1277 	ar7 = 0x07
                    0000   1278 	ar0 = 0x00
                    0001   1279 	ar1 = 0x01
                    0000   1280 	C$Flash_02x.c$46$1$1 ==.
                           1281 ;	..\ip_avenger\flash\Flash_02x.c:46: ENTER_CRITICAL_SECTION;
   0000 C2 AF              1282 	clr	_EA
                    0002   1283 	C$Flash_02x.c$48$1$1 ==.
                           1284 ;	..\ip_avenger\flash\Flash_02x.c:48: FLSCL |= 0x01;  /* set FLWE(FLSCL.0) bit*/
   0002 43 B7 01           1285 	orl	_FLSCL,#0x01
                    0005   1286 	C$Flash_02x.c$49$1$1 ==.
                           1287 ;	..\ip_avenger\flash\Flash_02x.c:49: PSCTL |= 0x01;  /* set PSWE(PSCTL.0) bit*/
   0005 43 8F 01           1288 	orl	_PSCTL,#0x01
                    0008   1289 	C$Flash_02x.c$50$1$1 ==.
                           1290 ;	..\ip_avenger\flash\Flash_02x.c:50: PSCTL |= 0x04;  /* Point out the scratch pad area */
   0008 43 8F 04           1291 	orl	_PSCTL,#0x04
                    000B   1292 	C$Flash_02x.c$51$1$1 ==.
                    000B   1293 	XFFlash_02x$enter_flash_write$0$0 ==.
   000B 22                 1294 	ret
                           1295 ;------------------------------------------------------------
                           1296 ;Allocation info for local variables in function 'exit_flash_write'
                           1297 ;------------------------------------------------------------
                           1298 ;------------------------------------------------------------
                    000C   1299 	FFlash_02x$exit_flash_write$0$0 ==.
                    000C   1300 	C$Flash_02x.c$53$1$1 ==.
                           1301 ;	..\ip_avenger\flash\Flash_02x.c:53: static void exit_flash_write(void)
                           1302 ;	-----------------------------------------
                           1303 ;	 function exit_flash_write
                           1304 ;	-----------------------------------------
   000C                    1305 _exit_flash_write:
                    000C   1306 	C$Flash_02x.c$55$1$1 ==.
                           1307 ;	..\ip_avenger\flash\Flash_02x.c:55: PSCTL &= ~0x04;  /* Point out the scratch pad area */
                    000C   1308 	C$Flash_02x.c$56$1$1 ==.
                           1309 ;	..\ip_avenger\flash\Flash_02x.c:56: PSCTL &= ~0x01; /* clear PSWE(PSCTL.0) bit*/
   000C 53 8F FA           1310 	anl	_PSCTL,#(0xFB&0xFE)
                    000F   1311 	C$Flash_02x.c$57$1$1 ==.
                           1312 ;	..\ip_avenger\flash\Flash_02x.c:57: FLSCL &= ~0x01;  /* clear FLWE(FLSCL.0) bit*/
   000F 53 B7 FE           1313 	anl	_FLSCL,#0xFE
                    0012   1314 	C$Flash_02x.c$59$1$1 ==.
                           1315 ;	..\ip_avenger\flash\Flash_02x.c:59: EXIT_CRITICAL_SECTION;
   0012 D2 AF              1316 	setb	_EA
                    0014   1317 	C$Flash_02x.c$60$1$1 ==.
                    0014   1318 	XFFlash_02x$exit_flash_write$0$0 ==.
   0014 22                 1319 	ret
                           1320 ;------------------------------------------------------------
                           1321 ;Allocation info for local variables in function 'erase_config_area'
                           1322 ;------------------------------------------------------------
                           1323 ;touch_address             Allocated with name '_erase_config_area_touch_address_1_1'
                           1324 ;------------------------------------------------------------
                    0015   1325 	FFlash_02x$erase_config_area$0$0 ==.
                    0015   1326 	C$Flash_02x.c$62$1$1 ==.
                           1327 ;	..\ip_avenger\flash\Flash_02x.c:62: static void erase_config_area(void)
                           1328 ;	-----------------------------------------
                           1329 ;	 function erase_config_area
                           1330 ;	-----------------------------------------
   0015                    1331 _erase_config_area:
                    0015   1332 	C$Flash_02x.c$66$1$1 ==.
                           1333 ;	..\ip_avenger\flash\Flash_02x.c:66: ENTER_CRITICAL_SECTION;
   0015 C2 AF              1334 	clr	_EA
                    0017   1335 	C$Flash_02x.c$68$1$1 ==.
                           1336 ;	..\ip_avenger\flash\Flash_02x.c:68: FLSCL |= 0x01;    /* set FLWE(FLSCL.0) bit*/
   0017 43 B7 01           1337 	orl	_FLSCL,#0x01
                    001A   1338 	C$Flash_02x.c$69$1$1 ==.
                           1339 ;	..\ip_avenger\flash\Flash_02x.c:69: PSCTL |= 0x03;    /* set PSWE(PSCTL.0)  and PSEE(PSCTL.1) bit*/
   001A 43 8F 03           1340 	orl	_PSCTL,#0x03
                    001D   1341 	C$Flash_02x.c$70$1$1 ==.
                           1342 ;	..\ip_avenger\flash\Flash_02x.c:70: PSCTL |= 0x04;  /* Point out the scratch pad area */
   001D 43 8F 04           1343 	orl	_PSCTL,#0x04
                    0020   1344 	C$Flash_02x.c$72$1$1 ==.
                           1345 ;	..\ip_avenger\flash\Flash_02x.c:72: *touch_address = 0x00;   /* Touch the desired bank */
   0020 E4                 1346 	clr	a
   0021 F5 82              1347 	mov	dpl,a
   0023 F5 83              1348 	mov	dph,a
   0025 F0                 1349 	movx	@dptr,a
                    0026   1350 	C$Flash_02x.c$74$1$1 ==.
                           1351 ;	..\ip_avenger\flash\Flash_02x.c:74: PSCTL &= ~0x04;  /* Point out the scratch pad area */
                    0026   1352 	C$Flash_02x.c$75$1$1 ==.
                           1353 ;	..\ip_avenger\flash\Flash_02x.c:75: PSCTL &= ~0x03;    /* clear PSWE(PSCTL.0)  and PSEE(PSCTL.1) bit*/
   0026 53 8F F8           1354 	anl	_PSCTL,#(0xFB&0xFC)
                    0029   1355 	C$Flash_02x.c$76$1$1 ==.
                           1356 ;	..\ip_avenger\flash\Flash_02x.c:76: FLSCL &= ~0x01;    /* clear FLWE(FLSCL.0) bit*/
   0029 53 B7 FE           1357 	anl	_FLSCL,#0xFE
                    002C   1358 	C$Flash_02x.c$78$1$1 ==.
                           1359 ;	..\ip_avenger\flash\Flash_02x.c:78: EXIT_CRITICAL_SECTION;
   002C D2 AF              1360 	setb	_EA
                    002E   1361 	C$Flash_02x.c$79$1$1 ==.
                    002E   1362 	XFFlash_02x$erase_config_area$0$0 ==.
   002E 22                 1363 	ret
                           1364 ;------------------------------------------------------------
                           1365 ;Allocation info for local variables in function 'read_flash'
                           1366 ;------------------------------------------------------------
                           1367 ;n                         Allocated with name '_read_flash_n_1_1'
                           1368 ;byte                      Allocated with name '_read_flash_byte_1_1'
                           1369 ;pread                     Allocated to registers r2 r3 
                           1370 ;------------------------------------------------------------
                    002F   1371 	G$read_flash$0$0 ==.
                    002F   1372 	C$Flash_02x.c$81$1$1 ==.
                           1373 ;	..\ip_avenger\flash\Flash_02x.c:81: u8_t read_flash(u8_t n)
                           1374 ;	-----------------------------------------
                           1375 ;	 function read_flash
                           1376 ;	-----------------------------------------
   002F                    1377 _read_flash:
   002F E5 82              1378 	mov	a,dpl
   0031 90s00r00           1379 	mov	dptr,#_read_flash_n_1_1
   0034 F0                 1380 	movx	@dptr,a
                    0035   1381 	C$Flash_02x.c$86$1$1 ==.
                           1382 ;	..\ip_avenger\flash\Flash_02x.c:86: ENTER_CRITICAL_SECTION;
   0035 C2 AF              1383 	clr	_EA
                    0037   1384 	C$Flash_02x.c$88$1$1 ==.
                           1385 ;	..\ip_avenger\flash\Flash_02x.c:88: pread = (char code *)n;
   0037 90s00r00           1386 	mov	dptr,#_read_flash_n_1_1
   003A E0                 1387 	movx	a,@dptr
   003B FA                 1388 	mov	r2,a
   003C 7B 00              1389 	mov	r3,#0x00
                    003E   1390 	C$Flash_02x.c$90$1$1 ==.
                           1391 ;	..\ip_avenger\flash\Flash_02x.c:90: PSCTL |= 0x04;      /* Select scratch pad */
   003E 43 8F 04           1392 	orl	_PSCTL,#0x04
                    0041   1393 	C$Flash_02x.c$91$1$1 ==.
                           1394 ;	..\ip_avenger\flash\Flash_02x.c:91: byte = *pread;      /* Read the byte */
   0041 8A 82              1395 	mov	dpl,r2
   0043 8B 83              1396 	mov	dph,r3
   0045 E4                 1397 	clr	a
   0046 93                 1398 	movc	a,@a+dptr
   0047 FA                 1399 	mov	r2,a
                    0048   1400 	C$Flash_02x.c$92$1$1 ==.
                           1401 ;	..\ip_avenger\flash\Flash_02x.c:92: PSCTL &= ~0x04;     /* Diselect scratch pad */
   0048 53 8F FB           1402 	anl	_PSCTL,#0xFB
                    004B   1403 	C$Flash_02x.c$94$1$1 ==.
                           1404 ;	..\ip_avenger\flash\Flash_02x.c:94: EXIT_CRITICAL_SECTION;
   004B D2 AF              1405 	setb	_EA
                    004D   1406 	C$Flash_02x.c$96$1$1 ==.
                           1407 ;	..\ip_avenger\flash\Flash_02x.c:96: return byte;
   004D 8A 82              1408 	mov	dpl,r2
                    004F   1409 	C$Flash_02x.c$97$1$1 ==.
                    004F   1410 	XG$read_flash$0$0 ==.
   004F 22                 1411 	ret
                           1412 ;------------------------------------------------------------
                           1413 ;Allocation info for local variables in function 'write_config_to_flash'
                           1414 ;------------------------------------------------------------
                           1415 ;dest                      Allocated with name '_write_config_to_flash_dest_1_1'
                           1416 ;src                       Allocated with name '_write_config_to_flash_src_1_1'
                           1417 ;chksum                    Allocated with name '_write_config_to_flash_chksum_1_1'
                           1418 ;i                         Allocated with name '_write_config_to_flash_i_1_1'
                           1419 ;------------------------------------------------------------
                    0050   1420 	G$write_config_to_flash$0$0 ==.
                    0050   1421 	C$Flash_02x.c$100$1$1 ==.
                           1422 ;	..\ip_avenger\flash\Flash_02x.c:100: void write_config_to_flash(void)
                           1423 ;	-----------------------------------------
                           1424 ;	 function write_config_to_flash
                           1425 ;	-----------------------------------------
   0050                    1426 _write_config_to_flash:
                    0050   1427 	C$Flash_02x.c$104$1$1 ==.
                           1428 ;	..\ip_avenger\flash\Flash_02x.c:104: char xdata *src = (char xdata *)&sys_cfg;
   0050 90s00r01           1429 	mov	dptr,#_write_config_to_flash_src_1_1
   0053 74r00              1430 	mov	a,#_sys_cfg
   0055 F0                 1431 	movx	@dptr,a
   0056 A3                 1432 	inc	dptr
   0057 74s00              1433 	mov	a,#(_sys_cfg >> 8)
   0059 F0                 1434 	movx	@dptr,a
                    005A   1435 	C$Flash_02x.c$116$1$1 ==.
                           1436 ;	..\ip_avenger\flash\Flash_02x.c:116: erase_config_area();
   005A 12s00r15           1437 	lcall	_erase_config_area
                    005D   1438 	C$Flash_02x.c$117$1$1 ==.
                           1439 ;	..\ip_avenger\flash\Flash_02x.c:117: enter_flash_write();
   005D 12s00r00           1440 	lcall	_enter_flash_write
                    0060   1441 	C$Flash_02x.c$120$1$1 ==.
                           1442 ;	..\ip_avenger\flash\Flash_02x.c:120: for(i=0; i<CONFIG_MEM_SIZE ; i++)
   0060 90s00r01           1443 	mov	dptr,#_write_config_to_flash_src_1_1
   0063 E0                 1444 	movx	a,@dptr
   0064 FA                 1445 	mov	r2,a
   0065 A3                 1446 	inc	dptr
   0066 E0                 1447 	movx	a,@dptr
   0067 FB                 1448 	mov	r3,a
   0068 7C 00              1449 	mov	r4,#0x00
   006A 7D 00              1450 	mov	r5,#0x00
   006C 78r00              1451 	mov	r0,#_write_config_to_flash_i_1_1
   006E E4                 1452 	clr	a
   006F F6                 1453 	mov	@r0,a
   0070 08                 1454 	inc	r0
   0071 F6                 1455 	mov	@r0,a
   0072                    1456 00101$:
   0072 78r00              1457 	mov	r0,#_write_config_to_flash_i_1_1
   0074 C3                 1458 	clr	c
   0075 E6                 1459 	mov	a,@r0
   0076 94 7D              1460 	subb	a,#0x7D
   0078 08                 1461 	inc	r0
   0079 E6                 1462 	mov	a,@r0
   007A 94 00              1463 	subb	a,#0x00
   007C 50 23              1464 	jnc	00104$
                    007E   1465 	C$Flash_02x.c$122$2$2 ==.
                           1466 ;	..\ip_avenger\flash\Flash_02x.c:122: *dest++=*src++;
   007E 8A 82              1467 	mov	dpl,r2
   0080 8B 83              1468 	mov	dph,r3
   0082 E0                 1469 	movx	a,@dptr
   0083 FE                 1470 	mov	r6,a
   0084 A3                 1471 	inc	dptr
   0085 AA 82              1472 	mov	r2,dpl
   0087 AB 83              1473 	mov	r3,dph
   0089 8C 82              1474 	mov	dpl,r4
   008B 8D 83              1475 	mov	dph,r5
   008D EE                 1476 	mov	a,r6
   008E F0                 1477 	movx	@dptr,a
   008F A3                 1478 	inc	dptr
   0090 AC 82              1479 	mov	r4,dpl
   0092 AD 83              1480 	mov	r5,dph
                    0094   1481 	C$Flash_02x.c$123$2$2 ==.
                           1482 ;	..\ip_avenger\flash\Flash_02x.c:123: RESET_WDT(WDT_RST);
   0094 75 FF A5           1483 	mov	_WDTCN,#0xA5
                    0097   1484 	C$Flash_02x.c$120$1$1 ==.
                           1485 ;	..\ip_avenger\flash\Flash_02x.c:120: for(i=0; i<CONFIG_MEM_SIZE ; i++)
   0097 78r00              1486 	mov	r0,#_write_config_to_flash_i_1_1
   0099 06                 1487 	inc	@r0
   009A B6 00 D5           1488 	cjne	@r0,#0x00,00101$
   009D 08                 1489 	inc	r0
   009E 06                 1490 	inc	@r0
   009F 80 D1              1491 	sjmp	00101$
   00A1                    1492 00104$:
                    00A1   1493 	C$Flash_02x.c$126$1$1 ==.
                           1494 ;	..\ip_avenger\flash\Flash_02x.c:126: exit_flash_write();
   00A1 12s00r0C           1495 	lcall	_exit_flash_write
                    00A4   1496 	C$Flash_02x.c$129$1$1 ==.
                           1497 ;	..\ip_avenger\flash\Flash_02x.c:129: chksum = flash_chksum(FLASH_WO_VER);
   00A4 75 82 00           1498 	mov	dpl,#0x00
   00A7 12s00rEB           1499 	lcall	_flash_chksum
   00AA AA 82              1500 	mov	r2,dpl
   00AC AB 83              1501 	mov	r3,dph
                    00AE   1502 	C$Flash_02x.c$131$1$1 ==.
                           1503 ;	..\ip_avenger\flash\Flash_02x.c:131: write_new_verification_word(-1 - chksum);
   00AE 74 FF              1504 	mov	a,#0xFF
   00B0 C3                 1505 	clr	c
   00B1 9A                 1506 	subb	a,r2
   00B2 FA                 1507 	mov	r2,a
   00B3 74 FF              1508 	mov	a,#0xFF
   00B5 9B                 1509 	subb	a,r3
   00B6 FB                 1510 	mov	r3,a
   00B7 8A 82              1511 	mov	dpl,r2
   00B9 8B 83              1512 	mov	dph,r3
                    00BB   1513 	C$Flash_02x.c$132$1$1 ==.
                    00BB   1514 	XG$write_config_to_flash$0$0 ==.
   00BB 02s00rBE           1515 	ljmp	_write_new_verification_word
                           1516 ;------------------------------------------------------------
                           1517 ;Allocation info for local variables in function 'write_new_verification_word'
                           1518 ;------------------------------------------------------------
                           1519 ;ver                       Allocated with name '_write_new_verification_word_ver_1_1'
                           1520 ;dest                      Allocated with name '_write_new_verification_word_dest_1_1'
                           1521 ;------------------------------------------------------------
                    00BE   1522 	FFlash_02x$write_new_verification_word$0$0 ==.
                    00BE   1523 	C$Flash_02x.c$134$1$1 ==.
                           1524 ;	..\ip_avenger\flash\Flash_02x.c:134: static void write_new_verification_word(int ver)
                           1525 ;	-----------------------------------------
                           1526 ;	 function write_new_verification_word
                           1527 ;	-----------------------------------------
   00BE                    1528 _write_new_verification_word:
   00BE AA 83              1529 	mov	r2,dph
   00C0 E5 82              1530 	mov	a,dpl
   00C2 90s00r03           1531 	mov	dptr,#_write_new_verification_word_ver_1_1
   00C5 F0                 1532 	movx	@dptr,a
   00C6 A3                 1533 	inc	dptr
   00C7 EA                 1534 	mov	a,r2
   00C8 F0                 1535 	movx	@dptr,a
                    00C9   1536 	C$Flash_02x.c$138$1$1 ==.
                           1537 ;	..\ip_avenger\flash\Flash_02x.c:138: enter_flash_write();
   00C9 12s00r00           1538 	lcall	_enter_flash_write
                    00CC   1539 	C$Flash_02x.c$140$1$1 ==.
                           1540 ;	..\ip_avenger\flash\Flash_02x.c:140: *dest++ = ver & 0xff;
   00CC 7A 7E              1541 	mov	r2,#0x7E
   00CE 7B 00              1542 	mov	r3,#0x00
   00D0 90s00r03           1543 	mov	dptr,#_write_new_verification_word_ver_1_1
   00D3 E0                 1544 	movx	a,@dptr
   00D4 FC                 1545 	mov	r4,a
   00D5 A3                 1546 	inc	dptr
   00D6 E0                 1547 	movx	a,@dptr
   00D7 FD                 1548 	mov	r5,a
   00D8 8C 06              1549 	mov	ar6,r4
   00DA 8A 82              1550 	mov	dpl,r2
   00DC 8B 83              1551 	mov	dph,r3
   00DE EE                 1552 	mov	a,r6
   00DF F0                 1553 	movx	@dptr,a
                    00E0   1554 	C$Flash_02x.c$141$1$1 ==.
                           1555 ;	..\ip_avenger\flash\Flash_02x.c:141: *dest = ver >> 8;
   00E0 90 00 7F           1556 	mov	dptr,#(0x7F&0x00ff)
   00E3 E4                 1557 	clr	a
   00E4 8D 04              1558 	mov	ar4,r5
   00E6 EC                 1559 	mov	a,r4
   00E7 F0                 1560 	movx	@dptr,a
                    00E8   1561 	C$Flash_02x.c$143$1$1 ==.
                           1562 ;	..\ip_avenger\flash\Flash_02x.c:143: exit_flash_write();
                    00E8   1563 	C$Flash_02x.c$144$1$1 ==.
                    00E8   1564 	XFFlash_02x$write_new_verification_word$0$0 ==.
   00E8 02s00r0C           1565 	ljmp	_exit_flash_write
                           1566 ;------------------------------------------------------------
                           1567 ;Allocation info for local variables in function 'flash_chksum'
                           1568 ;------------------------------------------------------------
                           1569 ;command                   Allocated with name '_flash_chksum_command_1_1'
                           1570 ;i                         Allocated with name '_flash_chksum_i_1_1'
                           1571 ;chksum                    Allocated with name '_flash_chksum_chksum_1_1'
                           1572 ;loop                      Allocated with name '_flash_chksum_loop_1_1'
                           1573 ;------------------------------------------------------------
                    00EB   1574 	FFlash_02x$flash_chksum$0$0 ==.
                    00EB   1575 	C$Flash_02x.c$151$1$1 ==.
                           1576 ;	..\ip_avenger\flash\Flash_02x.c:151: static int flash_chksum(u8_t command)
                           1577 ;	-----------------------------------------
                           1578 ;	 function flash_chksum
                           1579 ;	-----------------------------------------
   00EB                    1580 _flash_chksum:
   00EB E5 82              1581 	mov	a,dpl
   00ED 90s00r05           1582 	mov	dptr,#_flash_chksum_command_1_1
   00F0 F0                 1583 	movx	@dptr,a
                    00F1   1584 	C$Flash_02x.c$154$1$1 ==.
                           1585 ;	..\ip_avenger\flash\Flash_02x.c:154: int chksum = 0;
   00F1 90s00r06           1586 	mov	dptr,#_flash_chksum_chksum_1_1
   00F4 E4                 1587 	clr	a
   00F5 F0                 1588 	movx	@dptr,a
   00F6 A3                 1589 	inc	dptr
   00F7 F0                 1590 	movx	@dptr,a
                    00F8   1591 	C$Flash_02x.c$157$1$1 ==.
                           1592 ;	..\ip_avenger\flash\Flash_02x.c:157: switch(command)
   00F8 90s00r05           1593 	mov	dptr,#_flash_chksum_command_1_1
   00FB E0                 1594 	movx	a,@dptr
   00FC FA                 1595 	mov	r2,a
   00FD 60 05              1596 	jz	00101$
                    00FF   1597 	C$Flash_02x.c$159$2$2 ==.
                           1598 ;	..\ip_avenger\flash\Flash_02x.c:159: case FLASH_WO_VER:
   00FF BA 01 18           1599 	cjne	r2,#0x01,00103$
   0102 80 0B              1600 	sjmp	00102$
   0104                    1601 00101$:
                    0104   1602 	C$Flash_02x.c$160$2$2 ==.
                           1603 ;	..\ip_avenger\flash\Flash_02x.c:160: loop = SCRATCH_PAGE_SIZE-2;
   0104 90s00r08           1604 	mov	dptr,#_flash_chksum_loop_1_1
   0107 74 7E              1605 	mov	a,#0x7E
   0109 F0                 1606 	movx	@dptr,a
   010A E4                 1607 	clr	a
   010B A3                 1608 	inc	dptr
   010C F0                 1609 	movx	@dptr,a
                    010D   1610 	C$Flash_02x.c$161$2$2 ==.
                           1611 ;	..\ip_avenger\flash\Flash_02x.c:161: break;
                    010D   1612 	C$Flash_02x.c$163$2$2 ==.
                           1613 ;	..\ip_avenger\flash\Flash_02x.c:163: case ENTIRE_FLASH:
   010D 80 14              1614 	sjmp	00114$
   010F                    1615 00102$:
                    010F   1616 	C$Flash_02x.c$164$2$2 ==.
                           1617 ;	..\ip_avenger\flash\Flash_02x.c:164: loop = SCRATCH_PAGE_SIZE;
   010F 90s00r08           1618 	mov	dptr,#_flash_chksum_loop_1_1
   0112 74 80              1619 	mov	a,#0x80
   0114 F0                 1620 	movx	@dptr,a
   0115 E4                 1621 	clr	a
   0116 A3                 1622 	inc	dptr
   0117 F0                 1623 	movx	@dptr,a
                    0118   1624 	C$Flash_02x.c$165$2$2 ==.
                           1625 ;	..\ip_avenger\flash\Flash_02x.c:165: break;
                    0118   1626 	C$Flash_02x.c$167$2$2 ==.
                           1627 ;	..\ip_avenger\flash\Flash_02x.c:167: default:
   0118 80 09              1628 	sjmp	00114$
   011A                    1629 00103$:
                    011A   1630 	C$Flash_02x.c$168$2$2 ==.
                           1631 ;	..\ip_avenger\flash\Flash_02x.c:168: loop = SCRATCH_PAGE_SIZE;
   011A 90s00r08           1632 	mov	dptr,#_flash_chksum_loop_1_1
   011D 74 80              1633 	mov	a,#0x80
   011F F0                 1634 	movx	@dptr,a
   0120 E4                 1635 	clr	a
   0121 A3                 1636 	inc	dptr
   0122 F0                 1637 	movx	@dptr,a
                    0123   1638 	C$Flash_02x.c$173$1$1 ==.
                           1639 ;	..\ip_avenger\flash\Flash_02x.c:173: for (i=0 ; i<loop ; i+=2)
   0123                    1640 00114$:
   0123 90s00r08           1641 	mov	dptr,#_flash_chksum_loop_1_1
   0126 E0                 1642 	movx	a,@dptr
   0127 FA                 1643 	mov	r2,a
   0128 A3                 1644 	inc	dptr
   0129 E0                 1645 	movx	a,@dptr
   012A FB                 1646 	mov	r3,a
   012B 7C 00              1647 	mov	r4,#0x00
   012D 7D 00              1648 	mov	r5,#0x00
   012F                    1649 00105$:
   012F C3                 1650 	clr	c
   0130 EC                 1651 	mov	a,r4
   0131 9A                 1652 	subb	a,r2
   0132 ED                 1653 	mov	a,r5
   0133 64 80              1654 	xrl	a,#0x80
   0135 8B F0              1655 	mov	b,r3
   0137 63 F0 80           1656 	xrl	b,#0x80
   013A 95 F0              1657 	subb	a,b
   013C 50 58              1658 	jnc	00108$
                    013E   1659 	C$Flash_02x.c$175$2$3 ==.
                           1660 ;	..\ip_avenger\flash\Flash_02x.c:175: chksum += read_flash(i) + (read_flash(i+1) << 8);
   013E 8C 06              1661 	mov	ar6,r4
   0140 8E 82              1662 	mov	dpl,r6
   0142 C0 02              1663 	push	ar2
   0144 C0 03              1664 	push	ar3
   0146 C0 04              1665 	push	ar4
   0148 C0 05              1666 	push	ar5
   014A 12s00r2F           1667 	lcall	_read_flash
   014D AE 82              1668 	mov	r6,dpl
   014F D0 05              1669 	pop	ar5
   0151 D0 04              1670 	pop	ar4
   0153 7F 00              1671 	mov	r7,#0x00
   0155 8C 00              1672 	mov	ar0,r4
   0157 08                 1673 	inc	r0
   0158 88 82              1674 	mov	dpl,r0
   015A C0 04              1675 	push	ar4
   015C C0 05              1676 	push	ar5
   015E C0 06              1677 	push	ar6
   0160 C0 07              1678 	push	ar7
   0162 12s00r2F           1679 	lcall	_read_flash
   0165 A8 82              1680 	mov	r0,dpl
   0167 D0 07              1681 	pop	ar7
   0169 D0 06              1682 	pop	ar6
   016B D0 05              1683 	pop	ar5
   016D D0 04              1684 	pop	ar4
   016F D0 03              1685 	pop	ar3
   0171 D0 02              1686 	pop	ar2
   0173 88 01              1687 	mov	ar1,r0
   0175 E4                 1688 	clr	a
   0176 2E                 1689 	add	a,r6
   0177 FE                 1690 	mov	r6,a
   0178 E9                 1691 	mov	a,r1
   0179 3F                 1692 	addc	a,r7
   017A FF                 1693 	mov	r7,a
   017B 90s00r06           1694 	mov	dptr,#_flash_chksum_chksum_1_1
   017E E0                 1695 	movx	a,@dptr
   017F F8                 1696 	mov	r0,a
   0180 A3                 1697 	inc	dptr
   0181 E0                 1698 	movx	a,@dptr
   0182 F9                 1699 	mov	r1,a
   0183 90s00r06           1700 	mov	dptr,#_flash_chksum_chksum_1_1
   0186 EE                 1701 	mov	a,r6
   0187 28                 1702 	add	a,r0
   0188 F0                 1703 	movx	@dptr,a
   0189 EF                 1704 	mov	a,r7
   018A 39                 1705 	addc	a,r1
   018B A3                 1706 	inc	dptr
   018C F0                 1707 	movx	@dptr,a
                    018D   1708 	C$Flash_02x.c$173$1$1 ==.
                           1709 ;	..\ip_avenger\flash\Flash_02x.c:173: for (i=0 ; i<loop ; i+=2)
   018D 74 02              1710 	mov	a,#0x02
   018F 2C                 1711 	add	a,r4
   0190 FC                 1712 	mov	r4,a
   0191 E4                 1713 	clr	a
   0192 3D                 1714 	addc	a,r5
   0193 FD                 1715 	mov	r5,a
   0194 80 99              1716 	sjmp	00105$
   0196                    1717 00108$:
                    0196   1718 	C$Flash_02x.c$178$1$1 ==.
                           1719 ;	..\ip_avenger\flash\Flash_02x.c:178: return chksum;
   0196 90s00r06           1720 	mov	dptr,#_flash_chksum_chksum_1_1
   0199 E0                 1721 	movx	a,@dptr
   019A FA                 1722 	mov	r2,a
   019B A3                 1723 	inc	dptr
   019C E0                 1724 	movx	a,@dptr
                    019D   1725 	C$Flash_02x.c$179$1$1 ==.
                    019D   1726 	XFFlash_02x$flash_chksum$0$0 ==.
   019D 8A 82              1727 	mov	dpl,r2
   019F F5 83              1728 	mov	dph,a
   01A1 22                 1729 	ret
                           1730 ;------------------------------------------------------------
                           1731 ;Allocation info for local variables in function 'validate_config_flash'
                           1732 ;------------------------------------------------------------
                           1733 ;chksum                    Allocated with name '_validate_config_flash_chksum_1_1'
                           1734 ;------------------------------------------------------------
                    01A2   1735 	G$validate_config_flash$0$0 ==.
                    01A2   1736 	C$Flash_02x.c$194$1$1 ==.
                           1737 ;	..\ip_avenger\flash\Flash_02x.c:194: u8_t validate_config_flash(void)
                           1738 ;	-----------------------------------------
                           1739 ;	 function validate_config_flash
                           1740 ;	-----------------------------------------
   01A2                    1741 _validate_config_flash:
                    01A2   1742 	C$Flash_02x.c$200$1$1 ==.
                           1743 ;	..\ip_avenger\flash\Flash_02x.c:200: chksum = flash_chksum(ENTIRE_FLASH);
   01A2 75 82 01           1744 	mov	dpl,#0x01
   01A5 12s00rEB           1745 	lcall	_flash_chksum
   01A8 AA 82              1746 	mov	r2,dpl
   01AA AB 83              1747 	mov	r3,dph
                    01AC   1748 	C$Flash_02x.c$201$1$1 ==.
                           1749 ;	..\ip_avenger\flash\Flash_02x.c:201: RESET_WDT(WDT_RST);
   01AC 75 FF A5           1750 	mov	_WDTCN,#0xA5
                    01AF   1751 	C$Flash_02x.c$205$1$1 ==.
                           1752 ;	..\ip_avenger\flash\Flash_02x.c:205: if (chksum != -1)
   01AF BA FF 05           1753 	cjne	r2,#0xFF,00106$
   01B2 BB FF 02           1754 	cjne	r3,#0xFF,00106$
   01B5 80 0C              1755 	sjmp	00102$
   01B7                    1756 00106$:
                    01B7   1757 	C$Flash_02x.c$210$2$2 ==.
                           1758 ;	..\ip_avenger\flash\Flash_02x.c:210: load_default_config();
   01B7 12s00r00           1759 	lcall	_load_default_config
                    01BA   1760 	C$Flash_02x.c$211$2$2 ==.
                           1761 ;	..\ip_avenger\flash\Flash_02x.c:211: RESET_WDT(WDT_RST);
   01BA 75 FF A5           1762 	mov	_WDTCN,#0xA5
                    01BD   1763 	C$Flash_02x.c$214$2$2 ==.
                           1764 ;	..\ip_avenger\flash\Flash_02x.c:214: write_config_to_flash();
   01BD 12s00r50           1765 	lcall	_write_config_to_flash
                    01C0   1766 	C$Flash_02x.c$215$2$2 ==.
                           1767 ;	..\ip_avenger\flash\Flash_02x.c:215: RESET_WDT(WDT_RST);
   01C0 75 FF A5           1768 	mov	_WDTCN,#0xA5
   01C3                    1769 00102$:
                    01C3   1770 	C$Flash_02x.c$218$1$1 ==.
                           1771 ;	..\ip_avenger\flash\Flash_02x.c:218: return 0;
   01C3 75 82 00           1772 	mov	dpl,#0x00
                    01C6   1773 	C$Flash_02x.c$219$1$1 ==.
                    01C6   1774 	XG$validate_config_flash$0$0 ==.
   01C6 22                 1775 	ret
                           1776 	.area CSEG    (CODE)
                           1777 	.area CONST   (CODE)
                           1778 	.area XINIT   (CODE)
                           1779 	.area CABS    (ABS,CODE)
